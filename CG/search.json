[{"path":"index.html","id":"before-we-start","chapter":"ברוכים הבאים","heading":"ברוכים הבאים","text":"ספר זה נועד ללוות את הלומדים בקורס גאומטריה חישובית לתואר ראשון, המבוסס על הספר Computational Geometry: Algorithms Applications מאת\nMark de Berg, Otfried Cheong, Marc van Kreveld, Mark Overmars.","code":""},{"path":"index.html","id":"welcome","chapter":"ברוכים הבאים","heading":"לפני שמתחילים","text":"לפני שנתחיל, הנה מספר פרטים שכדאי לדעת:למי מיועד הקורס? תלמידים בשלב מתקדם בתואר הראשון, וכן תלמידי תואר שני, במתימטיקה ומדעי המחשב. הקורס מתאים למי שמעוניין להתנסות בתחום מחקר תיאורטי, וגם למי שמחפש בסיס תיאורטי לישומים מעשיים.למי מיועד הקורס? תלמידים בשלב מתקדם בתואר הראשון, וכן תלמידי תואר שני, במתימטיקה ומדעי המחשב. הקורס מתאים למי שמעוניין להתנסות בתחום מחקר תיאורטי, וגם למי שמחפש בסיס תיאורטי לישומים מעשיים.למה לי בכלל ללמוד גאומטריה חישובית? לאלגוריתמים ומבני הנתונים שנלמד יש אינספור יישומים מעשיים חשובים במגוון של תחומים רלוונטיים, כמו גרפיקה וראייה מומחשבת, מערכות מידע גאוגרפיות, ניתוח מידע רב, ועוד. תוכלו לרכוש לעצמכם אוסף של כלים, מודלים, וטכניקות, המוכנים לשליפה ומימוש במגוון של בעיות אלגוריתמיות. נוסף על כך, יש בהם גם יופי מרתק, שנמצא בתכונות הגיאומטריות, בהגדרה הנקיה של הבעיות, ובאופי האסתטי של הפתרונות. בקורס הזה נלמד בעיקר את הטכניקות והאלגוריתמים המהווים בסיס רעיוני למימושים נפוצים, אך גם נושאים הנמצאים בחזית המחקר היום.למה לי בכלל ללמוד גאומטריה חישובית? לאלגוריתמים ומבני הנתונים שנלמד יש אינספור יישומים מעשיים חשובים במגוון של תחומים רלוונטיים, כמו גרפיקה וראייה מומחשבת, מערכות מידע גאוגרפיות, ניתוח מידע רב, ועוד. תוכלו לרכוש לעצמכם אוסף של כלים, מודלים, וטכניקות, המוכנים לשליפה ומימוש במגוון של בעיות אלגוריתמיות. נוסף על כך, יש בהם גם יופי מרתק, שנמצא בתכונות הגיאומטריות, בהגדרה הנקיה של הבעיות, ובאופי האסתטי של הפתרונות. בקורס הזה נלמד בעיקר את הטכניקות והאלגוריתמים המהווים בסיס רעיוני למימושים נפוצים, אך גם נושאים הנמצאים בחזית המחקר היום.","code":""},{"path":"index.html","id":"אופן-הלימוד-בקורס","chapter":"ברוכים הבאים","heading":"אופן הלימוד בקורס","text":"מבנה הקורס: בקורס 12 יחידות, כל יחידה תתחיל בהצגה של בעיה חדשה (או אוסף חדש של בעיות), ולאחר מכן יוצגו הכלים (מבני נתונים, אלגוריתמים, מודלים) המתאימים לפתרון.מבנה הקורס: בקורס 12 יחידות, כל יחידה תתחיל בהצגה של בעיה חדשה (או אוסף חדש של בעיות), ולאחר מכן יוצגו הכלים (מבני נתונים, אלגוריתמים, מודלים) המתאימים לפתרון.ספרי הלימוד: הספר המרכזי של הקורס, אשר ישמש אותנו ביחידות 1-10, הוא Computational Geometry: Algorithms Applications.\nשני הפרקים האחרונים בקורס יבוססו על שני פרקים בספרGeometric Approximation Algorithms.ספרי הלימוד: הספר המרכזי של הקורס, אשר ישמש אותנו ביחידות 1-10, הוא Computational Geometry: Algorithms Applications.\nשני הפרקים האחרונים בקורס יבוססו על שני פרקים בספרGeometric Approximation Algorithms.ידע קודם: בקורס נדרש ידע בנושאים של סיבוכיות אסימפטוטית, אלגוריתמים ומבני נתונים בסיסיים.ידע קודם: בקורס נדרש ידע בנושאים של סיבוכיות אסימפטוטית, אלגוריתמים ומבני נתונים בסיסיים.שאלות עזר מנחות: במהלך כל אחת מיחידות הלימוד יופיעו שאלות הבנה פשוטות (ללא ציון), שיעזרו לכם לוודא שהבנתם באופן בסיסי את ההגדרות והרעיונות של הפרק.שאלות עזר מנחות: במהלך כל אחת מיחידות הלימוד יופיעו שאלות הבנה פשוטות (ללא ציון), שיעזרו לכם לוודא שהבנתם באופן בסיסי את ההגדרות והרעיונות של הפרק.יש נושא ספיציפי שמעניין אתכם? רוצים לראות דוגמאות נוספות? חומרי עזר לקריאה נוספת והעשרה ינתנו במקומות הרלוונטים. יש נושא ספיציפי שמעניין אתכם? רוצים לראות דוגמאות נוספות? חומרי עזר לקריאה נוספת והעשרה ינתנו במקומות הרלוונטים. מצאתם טעות בחומר הלימוד? אם מצאתם טעות או בעיה בחומר הלימוד – בין אם זו שגיאת כתיב, טעות בנוסחה, או חור בהוכחה - אנא כתבו לי.מצאתם טעות בחומר הלימוד? אם מצאתם טעות או בעיה בחומר הלימוד – בין אם זו שגיאת כתיב, טעות בנוסחה, או חור בהוכחה - אנא כתבו לי.","code":""},{"path":"intro.html","id":"intro","chapter":"יחידה 1 מבוא","heading":"יחידה 1 מבוא","text":"","code":""},{"path":"intro.html","id":"preface-1","chapter":"יחידה 1 מבוא","heading":"1.1 הקדמה","text":"","code":""},{"path":"intro.html","id":"what-is-cg","chapter":"יחידה 1 מבוא","heading":"1.1.1 מהי גיאומטריה חישובית?","text":"גיאומטריה חישובית היא תחום מחקר במדעי המחשב העוסק בפיתוח של כלים, מודלים, מבני נתונים ואלגוריתמים, המיועדים לפתרון בעיות חישוב גיאומטריות. המחקר התיאורטי בגיאומטריה חישובית מיושם בתחומים רבים ומגוונים. בסרטון הבא נספר איך נולד התחום, ונציג דוגמאות לבעיות שנעסוק בהן במהלך הקורס.","code":""},{"path":"intro.html","id":"צפו-בסרטון-הבא.","chapter":"יחידה 1 מבוא","heading":"צפו בסרטון הבא.","text":"\n\n\n","code":""},{"path":"intro.html","id":"מדדים-להערכת-טיב-הפתרון.","chapter":"יחידה 1 מבוא","heading":"מדדים להערכת טיב הפתרון.","text":"פתרון לבעיה יכול להיות בצורה של אלגוריתם המקבל קלט ומייצר פלט מתאים. במקרה זה טיב הפתרון נמדד בזמן הריצה של האלגוריתם, ובסיבוכיות הזיכרון הנדרשת לפעולתו.כאשר הפתרון הוא בצורה של מבנה נתונים, קיים מדד נוסף, שהוא זמן העיבוד המקדים. לכן בניתוח של מבנה נתונים נתייחס לכל אחד מהמדדים הבאים:זמן עיבוד מקדים (Preprocessing Time) - הזמן שלוקח לנו לעבד את הקלט ולבנות את מבנה הנתונים.זמן עיבוד מקדים (Preprocessing Time) - הזמן שלוקח לנו לעבד את הקלט ולבנות את מבנה הנתונים.סיבוכיות מקום/זיכרון (Storage Space) - גודל הזיכרון או נפח האחסון שנזדקק לו עבור מבנה הנתונים.סיבוכיות מקום/זיכרון (Storage Space) - גודל הזיכרון או נפח האחסון שנזדקק לו עבור מבנה הנתונים.זמן שאילתה (Query Time) - זמן הריצה של אלגוריתם השאילתה.זמן שאילתה (Query Time) - זמן הריצה של אלגוריתם השאילתה.","code":""},{"path":"intro.html","id":"קראו-את-ההקדמה-לפרק-1-בספר-הלימוד-עמודים-12.","chapter":"יחידה 1 מבוא","heading":"קראו את ההקדמה לפרק 1 בספר הלימוד (עמודים 1–2).","text":"","code":""},{"path":"intro.html","id":"תחומי-יישום.","chapter":"יחידה 1 מבוא","heading":"תחומי יישום.","text":"להרחבה על האפליקציות השונות והתפקיד שמשחקת בהן הגיאומטריה החישובית, מומלץ לקרוא את סעיף 1.3 בספר.","code":""},{"path":"intro.html","id":"basic-prop","chapter":"יחידה 1 מבוא","heading":"1.1.2 מאפיינים חשובים","text":"כמו בכל תחום מדעי, למחקר בגיאומטריה חישובית יש מספר מאפיינים שהתקבעו בעקבות תחומי העניין והמומחיות של החוקרים בתחום. כאן נתאר את העיקריים שבהם.","code":""},{"path":"intro.html","id":"ריגורוזיות.","chapter":"יחידה 1 מבוא","heading":"ריגורוזיות.","text":"לפני שהתפתח המחקר בגיאומטריה חישובית, היו המון היוריסטיקות ופתרונות אד-הוק ליישומים גיאומטריים. פתרונות כאלה נבדקו באמצעות ניסויים, ולכן היו בדרך כלל יעילים רק במצבים מסוימים, ולעיתים אף היו שגויים לחלוטין. לעומת זאת, הגיאומטריה החישובית התפתחה כתחום מתמטי שבו הגישה לפתרון היא ריגורוזית: הבעיות מוגדרות היטב, וכל פתרון כולל הוכחת יעילות ונכונות מתמטית.","code":""},{"path":"intro.html","id":"ממד-נמוך.","chapter":"יחידה 1 מבוא","heading":"ממד נמוך.","text":"היסטורית, הגיאומטריה החישובית התפתחה כתחום מחקר העוסק בבעיות על מרחבים מממד אוקלידי נמוך (לרוב מרחב דו-ממדי, ולעיתים גם תלת-ממדי). לכן לאורך הקורס נתמקד בעיקר במרחב האוקלידי הדו-ממדי, \\(\\mathbb{R}^2\\) , שמכונה גם המישור האוקלידי (או בקיצור, המישור). רוב האלגוריתמים שנראה יעבדו רק בשניים או בשלושה ממדים. אלגוריתמים שמתאימים גם לממדים גבוהים יותר סובלים במקרים רבים מתופעה שנקראת קללת הממד הגבוה (curse high dimensionality) , כלומר זמן הריצה שלהם כולל פקטורים שגדלים אקספוננציאלית כתלות בממד. עם זאת, לעיתים נדון גם באפשרות להרחבה לממדים גבוהים יותר, או בהבדלים הקיימים במעבר לממד גבוה יותר.","code":""},{"path":"intro.html","id":"קלט-בדיד-דיסקרטי.","chapter":"יחידה 1 מבוא","heading":"קלט בדיד (דיסקרטי).","text":"תחום הגיאומטריה החישובית מתמקד בבעיות שבהן האובייקטים הנתונים הם בדידים בטבעם, למשל קבוצות סופיות של נקודות, ישרים, או מעגלים. קיימות אפליקציות רבות שבהן האובייקטים הם רציפים, כמו למשל, מרחב תלת-ממדי המתאר את טמפרטורת האוויר באזור מסוים. מכיוון שהחישוב בעזרת מחשב הוא בדיד בטבעו, במקרים כאלו נדרש תהליך של דיסקרטיזציה, המאפשר לקבל קירוב לפתרון הרציף. בקורס זה נדבר על בעיות עם קלט בדיד, ולא נדון בתהליך הדיסקרטיזציה.","code":""},{"path":"intro.html","id":"המודל-החישובי.","chapter":"יחידה 1 מבוא","heading":"המודל החישובי.","text":"לפני שניגשים לניתוח יעילות של אלגוריתם, צריך להחליט באיזה מודל חישובי הוא פועל. המודל החישובי מגדיר את הקשר בין הקלט ופעולות האלגוריתם לבין ייצוגם ואופן חישובם במחשב. בתחום הגיאומטריה החישובית מקובל להשתמש במודל מתמטי הנקרא מודל RAM הממשי (real RAM). זהו מודל המבוסס על המודל המוכר של Random Access Machine, כלומר הגישה לתאי הזיכרון היא באמצעות מצביעים. אלגוריתמים לבעיות גיאומטריות דורשים בדרך כלל חישובים על מספרים ממשיים, וכאשר מתרגמים אלגוריתמים אלו לתוכניות מחשב, המספרים המחושבים הם בעצם מקורבים, כתלות בדיוק המחשב. מודל זה מאפשר להזניח את בעיית שגיאות העיגול בייצוג המקורב של הממשיים: כל מספר ממשי ניתן לאחסון ביחידת זיכרון אחת, והמספרים הם מדויקים ולא מקורבים. כמו כן, המודל מניח שהפעולות האריתמטיות (חיבור, חיסור, כפל, וחילוק) וכן פעולות השוואה, מתבצעות בזמן קבוע על מספרים ממשיים (אך לא כך עבור פעולת מודולו ועיגול למספרים שלמים).על אף כוחו הבלתי רגיל של מודל RAM הממשי, קיימות מספר שפות תכנות המיועדות למימוש אלגוריתמים גיאומטריים ומאפשרות סימולציה שלו. הרעיון בסימולציה כזו הוא שרמת הדיוק בחישוב וייצוג המספרים משתנים בהתאם לצורכי האלגוריתם, כך שיהיה ניתן לבצע השוואות מדויקות ולהימנע מטעויות עיגול. לדוגמה, הספרייהCGAL תומכת בחישובים גיאומטריים מדויקים באמצעות מנגנון מסוג זה.","code":""},{"path":"intro.html","id":"more-tools","chapter":"יחידה 1 מבוא","heading":"1.2 כלים ומקורות נוספים","text":"בסעיף זה ירוכזו כלים שימושיים לקורס, ומקורות נוספים ללמידה ולהעשרה.","code":""},{"path":"intro.html","id":"כלים-מומלצים-לשימוש-בקורס.","chapter":"יחידה 1 מבוא","heading":"כלים מומלצים לשימוש בקורס.","text":"Ipe - כלי חינמי מצוין לציורים גיאומטריים שפיתח Otfried Cheong, חוקר בגיאומטריה חישובית. מדריך מצוין לכלי זה ניתן למצוא כאן.Geogebra - כלי ליצירת אובייקטים גיאומטריים אינטראקטיביים.CGAL - ספריית ++C המכילה מגוון אלגוריתמים ומבני נתונים גיאומטריים.","code":""},{"path":"intro.html","id":"הרצאות-מוקלטות-וחומרי-לימוד-נוספים.","chapter":"יחידה 1 מבוא","heading":"הרצאות מוקלטות וחומרי לימוד נוספים.","text":"למעוניינים בכך, ניתן למצוא חומרי לימוד מצוינים מקורסים דומים הניתנים ברחבי העולם. הנה רשימה חלקית ביותר של הבולטים בהם:CMSC 754 Computational Geometry, David M. Mount.Geometry: Combinatorics Algorithms, Luis Barba Bernd Gärtner, Michael Hoffmann Emo Welzl.Computational Geometry, video lectures Philipp Kindermann.","code":""},{"path":"intro.html","id":"notations","chapter":"יחידה 1 מבוא","heading":"1.3 מושגי יסוד","text":"","code":""},{"path":"intro.html","id":"basic-objects","chapter":"יחידה 1 מבוא","heading":"1.3.1 אובייקטים גיאומטריים בסיסיים","text":"בחלק זה מופיעה רשימה של הגדרות בסיסיות שנעבוד איתן. גם אם אתם כבר מכירים את כולן או את רובן, מומלץ בכל זאת לקרוא את הפרק כדי לוודא שאתם מבינים את הניסוח המתמטי שבו נשתמש בקורס. תוכלו לחזור לפרק זה בכל עת, אם תרצו להיזכר באחת מההגדרות.","code":""},{"path":"intro.html","id":"המרחב-האוקלידי-euclidean-space.","chapter":"יחידה 1 מבוא","heading":"המרחב האוקלידי (Euclidean Space).","text":"המרחב האוקלידי ה-\\(d\\)- ממדי מסומן \\(\\mathbb{R}^d=\\{(x_1,\\dots,x_d)\\mid x_1,\\dots,x_d\\\\mathbb{R}\\}\\).נקודה \\(p\\\\mathbb{R}^d\\) מתוארת על ידי הקואורדינטות שלה, כלומר \\(p=(x_1,\\dots,x_d)\\).במישור (\\(\\mathbb{R}^2\\)) בדרך כלל נסמן את שתי הקואורדינטות של נקודה \\(p\\) ב-\\((x,y)\\) או \\((p_x,p_y)\\), ובמרחב התלת-ממדי (\\(\\mathbb{R}^3\\)) נסמן את שלוש הקואורדינטות של נקודה \\(p\\) ב-\\((x,y,z)\\) או \\((p_x,p_y,p_z)\\).הנורמה האוקלידית של \\(p\\) היא \\(\\|p\\|=\\sqrt{\\sum^d_{=1}x_i^2}\\).המרחק האוקלידי בין שתי נקודות \\(p\\) ו-\\(q\\), הוא \\(\\|p-q\\|=\\sqrt{(p_x-q_x)^2+(p_y-q_y)^2}\\).","code":""},{"path":"intro.html","id":"ישר-line.","chapter":"יחידה 1 מבוא","heading":"ישר (line).","text":"ישר (line) \\(\\ell\\) הוא תת-מרחב חד-ממדי, וניתן לתאר אותו על ידי זוג נקודות \\(p\\) ו-\\(q\\), בתור אוסף הנקודות שמקיימות את המשוואה \\(\\ell=(1-\\lambda)p+\\lambda q\\) עבור \\(\\lambda\\\\mathbb{R}\\) כלשהו.שימו לב שכל שתי נקודות שונות מגדירות ישר יחיד, אך כל ישר יכול להיות מוגדר על ידי כל זוג נקודות שונות שנמצאות עליו.","code":""},{"path":"intro.html","id":"קרן-ray.","chapter":"יחידה 1 מבוא","heading":"קרן (ray).","text":"קרן (ray) \\(\\rho\\) מוגדרת על ידי זוג נקודות \\(p\\) ו-\\(q\\), כאשר \\(p\\) מגדירה את המקור ו-\\(q\\) את הכיוון, וניתן לתאר אותה כאוסף הנקודות שמקיימות את המשוואה \\(\\ell=(1-\\lambda)p+\\lambda q\\) עבור \\(\\lambda\\ge 0\\) כלשהו.","code":""},{"path":"intro.html","id":"קטע-segment.","chapter":"יחידה 1 מבוא","heading":"קטע (segment).","text":"קטע (segment) \\(s\\) מוגדר על ידי זוג נקודות \\(p\\) ו-\\(q\\) שהן הקצוות שלו, וניתן לתאר אותו בתור אוסף הנקודות שנמצאות בין \\(p\\) ו-\\(q\\) על הישר שהן מגדירות.קטע נקרא סגור אם הוא מכיל את נקודות הקצה, ופתוח אם אינו מכיל אותן.במילים אחרות, קטע הוא אוסף הנקודות המקיימות את המשוואה \\(\\ell=(1-\\lambda)p+\\lambda q\\) כאשר \\(0\\le\\lambda\\le 1\\) לקטע סגור, ו \\(0<\\lambda<1\\) -לקטע פתוח.","code":""},{"path":"intro.html","id":"על-מישור-hyperplane.","chapter":"יחידה 1 מבוא","heading":"על-מישור (hyperplane).","text":"על-מישור (hyperplane) \\(h\\) הוא תת-מרחב אוקלידי מממד \\((d-1)\\) בתוך מרחב אוקלידי מממד \\(d\\). למשל, במרחב הדו-ממדי אלו ישרים, ובמרחב התלת-ממדי אלו מישורים. על-מישור חוצה את המרחב לשני חצאי מרחבים – כל חצי מרחב כזה נקרא חצי מישור (halfplane).פורמלית, עבור סקלרים \\(a_1,a_2,\\dots,a_d\\) שלא כולם אפס, על-מישור הוא כל הנקודות המקיימות את המשוואה \\(a_1 x _1+a_2 x_2 +\\dots+ a_d x_d = b\\), וחצי מישור הוא כל הנקודות המקיימות את המשוואה \\(a_1 x _1+a_2 x_2 +\\dots+ a_d x_d \\ge b\\).","code":""},{"path":"intro.html","id":"מעגל-דיסק-ספרה-וכדור.","chapter":"יחידה 1 מבוא","heading":"מעגל, דיסק, ספֵרה וכדור.","text":" במישור, מעגל (circle) מוגדר על ידי מרכז (נקודה \\(o\\)) ורדיוס (סקלר \\(r\\)), והוא המיקום הגיאומטרי של כל הנקודות שהמרחק שלהן מ-\\(o\\) הוא בדיוק \\(r\\). כלומר עבור \\(o=(,b)\\), אלו כל הנקודות המקיימות את המשוואה \\((x-)^2+(y-b)^2=r^2\\).דיסק (disk) או עיגול הוא קבוצת הנקודות החסומה בתוך מעגל. הדיסק הסגור מכיל גם את הנקודות שהמרחק שלהן מ-\\(o\\) הוא בדיוק \\(r\\), והדיסק הפתוח אינו מכיל אותן. כלומר הדיסק הסגור אלו כל הנקודות המקיימות את המשוואה \\((x-)^2+(y-b)^2\\le r^2\\), והדיסק הפתוח אלו כל הנקודות המקיימות את המשוואה \\((x-)^2+(y-b)^2<r^2\\).בהכללה לממדים גבוהים יותר, משתמשים במונחים ספרה (sphere) במקום מעגל, וכדור (ball) במקום דיסק.","code":""},{"path":"intro.html","id":"curves-polygons","chapter":"יחידה 1 מבוא","heading":"1.3.2 עקומים ופוליגונים","text":"עד עכשיו הגדרנו אובייקטים גיאומטריים בעלי גודל תיאור קבוע, כלומר כאלו שניתן לתאר בעזרת מספר קבוע של פרמטרים ונקודות במרחב. כעת נדון באובייקטים מורכבים יותר – פוליגונים ועקומים.תלמידי בית הספר היסודי לומדים על מגוון של צורות גיאומטריות מיוחדות: משולש, ריבוע, מלבן, מקבילית, טרפז, משושה, ועוד. כל אלו הם סוגים של פוליגונים (מצולעים). אך מהו פוליגון באופן כללי?הסתכלו בדוגמאות המופיעות באיור הבא. האם כולן דוגמאות לפוליגונים? אם לא, כיצד נוכל להגדיר מהו פוליגון?\nאין תשובה אחת נכונה לשאלה מהו פוליגון, ולמעשה קיימים סוגים שונים של פוליגונים. הסוג הבסיסי ביותר נקרא פוליגון פשוט. כדי להגדיר מהו פוליגון, תחילה נדון במושג עקום.הגדרה: עקוֹם\nעקום \\(C\\) באורך \\(n\\) במישור הוא סדרה של \\(n\\) נקודות \\(p_1, p_2,..., p_n\\) הנקראות קודקודים, וסדרת הקטעים \\(\\overline{p_1, p_2}, \\overline{p_2, p_3} ,\\dots, \\overline{p_{n-1},p_n}\\) הנקראים צלעות.עקום הוא סגור אם \\(p_1 = p_n\\), ופשוט אם צלעותיו אינן חותכות זו את זו (מלבד בקודקודים המשותפים לשתי צלעות עוקבות).ניתן לראות שרק עקומים ב’, ד’ ו-ו’ הם סגורים, שכן הם מתחילים ונגמרים באותה נקודה.רק עקומים ג’ ו-ו’ הם פשוטים, מכיוון שכל העקומים האחרים חותכים את עצמם לפחות פעם אחת: אם זה בצלעות (ב), בקודקודים שאינם עוקבים (ד), או בקודקוד וצלע (ה).הגדרה: פוליגון פשוט פוליגון פשוט \\(P\\) הוא האזור החסום בתוך עקום סגור ופשוט \\(C\\).העקום \\(C\\) נקרא השפה של \\(P\\) (ומסומן גם \\(\\partial P\\)), ואילו קבוצת הנקודות בפוליגון \\(P\\) שאינן על \\(C\\) נקראת הפְּנים של \\(P\\) (ומסומנת \\(\\text{int}(P)\\)). באיור, פנים הפוליגון מוצלל באפור.שימו לב כי מהדוגמאות באיור שהצגנו בהתחלה, רק איור א’ הוא פוליגון פשוט.מעניין לדעת: משפט העקום של ז’ורדן באופן כללי, עקום ז’ורדן הוא מסילה סגורה ופשוטה במישור. משפט העקום של ז’ורדן (שניסח לראשונה המתמטיקאי קאמי ז’ורדן ב-1887) קובע כי כל עקום ז’ורדן מחלק את המישור לשני תחומים קשירים: התחום ה”פנימי” החסום במסילה, והמשלים שלו – התחום ה”חיצוני” שאינו חסום. המשפט נראה מובן מאליו, ואכן הוכחת המשפט עבור עקומי ז’ורדן מצולעים (כלומר עקומים) היא אלמנטרית. לעומת זאת, ההוכחה עבור עקום ז’ורדן כללי אינה פשוטה כלל! הציעו אלגוריתם המקבל נקודה \\(q\\) ופוליגון פשוט \\(P\\) בעל \\(n\\) קודקודים במישור, ומחליט אם \\(q\\) נמצאת בפנים\\(\\text{int}(P)\\) של \\(P\\), על שפתו \\(\\partial P\\), או מחוץ ל-\\(P\\). ניתן להניח כי \\(P\\) נתון כאוסף קודקודיו \\((v_1,v_2,\\dots,v_n)\\) המסודרים עם כיוון השעון. מה תהיה סיבוכיות זמן הריצה הטובה ביותר שניתן להשיג?רמז: ציירו קרן כלשהי היוצאת מ-\\(q\\). מה ניתן לומר על מספר החיתוכים שלה עם \\(\\partial P\\)?נתבונן בקרן \\(\\rho\\) כלשהי היוצאת מ-\\(q\\), ונדמיין שאנחנו מתחילים ללכת על \\(\\rho\\) החל מ-\\(q\\) ועד לאינסוף.אם \\(q\\) נמצאת מחוץ ל-\\(P\\), אז בכל פעם שניכנס ל-\\(P\\) נצטרך גם לצאת ממנו, כך שמספר החיתוכים עם \\(\\partial P\\) הוא בהכרח זוגי.לעומת זאת, אם \\(q\\) נמצאת בפנים של \\(P\\), אז קודם נפגוש את \\(\\partial P\\) כשנצא מ-\\(P\\), ואז אולי נפגוש את \\(\\partial P\\) מספר זוגי של פעמים, כמו במקרה הקודם. לכן במקרה הזה, סך כל מספר החיתוכים עם \\(\\partial P\\) הוא בהכרח אי-זוגי.המסקנה היא שכדי לדעת איפה \\(q\\) נמצאת ביחס ל-\\(P\\), מספיק לבדוק את מספר הצלעות שהקרן \\(\\rho\\) חותכת (קרן יכולה לחתוך כל צלע פעם אחת בלבד). בדיקה זו מתבצעת בזמן לינארי.ההבחנה בין הפנים לחוץ של פוליגון היא עקרונית להגדרה של פוליגון, ולכן הדרישה ששפת הפוליגון תהיה עקום פשוט היא הכרחית. התבוננו שוב באוסף הדוגמאות שראינו קודם:באיור ב’ קיימים אזורים שלא ניתן להחליט אם הם שייכים לפנים הפוליגון או נמצאים מחוצה לו. גם באיור ו’ לא ברור לאן שייכים האזורים הפנימיים. עם זאת, קיימות מספר הגדרות כלליות יותר לפוליגונים שמתאימות לשאר הדוגמאות באיור. נדון כאן רק בזו המתאימה לאיור ד’.הגדרה: פוליגון עם חורים\nפוליגון עם חורים הוא אזור הניתן לתיאור בתור ההפרש \\(P=F\\setminus\\cup_{H\\\\mathcal H}\\text{int}(H)\\) כאשר \\(F\\) הוא פוליגון פשוט ו-\\(\\mathcal{H}\\) הוא אוסף סופי של פוליגונים פשוטים וזרים (אינם חותכים זה את זה) הנקראים חורים של \\(P\\), כך שאיחודם מוכל בפנים של \\(F\\), כלומר \\(\\cup_{H\\\\mathcal H}\\text{int}(H)\\subset F\\).שימו לב שפוליגון עם חורים הוא הכללה של פוליגון פשוט. כלומר, כל פוליגון פשוט הוא גם פוליגון עם חורים, שכן קבוצת החורים יכולה להיות ריקה.דוגמה:הפוליגון באיור הבא מורכב מפוליגון פשוט המכיל שלושה חורים המוצללים באפור. שימו לב שהחורים אינם חותכים זה את זה או את שפת הפוליגון.","code":""},{"path":"intro.html","id":"special-polygons","chapter":"יחידה 1 מבוא","heading":"1.3.3 פוליגונים מיוחדים","text":"באופן כללי, פוליגון יכול להיות צורה מורכבת מאוד, אך קיימים גם סוגים של פוליגונים בעלי מבנה מסוים או תכונות נוספות שהם “מיוחדים” או “פשוטים” יותר. אחת הסיבות לכך שאנו מעוניינים להגדיר פוליגונים מיוחדים כאלה נעוצה בעובדה שפעמים רבות הגדרות אלו מאפשרות אלגוריתמים יעילים ופשוטים יותר, המשמשים כאבני בניין למקרים המורכבים. נראה מספר דוגמאות לכך במהלך הקורס.כעת נדון בכמה מהדוגמאות הבסיסיות ביותר לפוליגונים “מיוחדים”.הגדרה: פוליגון קמור\nפוליגון פשוט \\(P\\) הוא קמור אם לכל שתי נקודות \\(p,q\\P\\) מתקיים שהקטע \\(\\overline{pq}\\) מוכל ב-\\(P\\).הגדרה: פוליגון כוכבי\nפוליגון פשוט \\(P\\) הוא כוכבי אם קיימת נקודה \\(p\\P\\) כך שלכל נקודה \\(q\\P\\) מתקיים שהקטע \\(\\overline{pq}\\) מוכל ב-\\(P\\). הנקודה \\(p\\) נקראת המרכז של הפוליגון \\(P\\).דוגמה:\nבאיור הבא, הפוליגון הימני הוא קמור.\nהפוליגון האמצעי אינו קמור, מכיוון שקיימות שתי נקודות שהקטע המוגדר עליהן אינו מוכל בפוליגון.\nהפוליגון משמאל הוא כוכבי, מכיוון שהנקודה המסומנת מקיימת את תנאי ההגדרה. נכון או לא נכון?\nא. באיור למעלה, הפוליגון האמצעי הוא כוכבי.\nב. כל פוליגון קמור הוא כוכבי.\nג. כל פוליגון פשוט בעל 5 צלעות הוא כוכבי.א. נכון.\nב. נכון. למעשה, כל נקודה יכולה להיות “מרכז” הכוכב.\nג. לא נכון.סיבה נוספת להתעניין בפוליגונים מיוחדים היא שבמציאות (שממנה אנחנו בדרך כלל שואבים השראה לבעיות שאנו מגדירים), לפוליגונים יש מבנה מסוים שהוא מוגבל. למשל, אם פוליגון מתאר רצפה של מבנה מסוים, סביר להניח שהזווית בין שני קירות היא זווית ישרה. לכן נוכל להגדיר פוליגון המתאים למקרה זה (נדון בבעיה כזו בהמשך הקורס).הגדרה: פוליגון אורתוגונלי\nפוליגון אורתוגונלי הוא פוליגון פשוט שכל צלעותיו מקבילות לצירים. נסו לצייר פוליגון אורתוגונלי שהוא כוכבי אך אינו קמור.\nמה ניתן לומר על סדרת הזוויות בין צלעות עוקבות של פוליגון כזה?\nא. מכילה לכל היותר שתי זוויות ישרות עוקבות.\nב. מכילה זווית ישרה ואז זווית של 270 מעלות, לסירוגין.\nג. אינה מכילה שתי זוויות עוקבות של 270 מעלות.\nד. אינה מכילה שתי זוויות ישרות עוקבות.\nה. מכילה לכל היותר ארבע זוויות ישרות עוקבות.סעיפים ג’ ו-ה’ נכונים.","code":""},{"path":"intro.html","id":"convex-hull","chapter":"יחידה 1 מבוא","heading":"1.4 הקמור של קבוצת נקודות במישור","text":"","code":""},{"path":"intro.html","id":"convex-hull-def","chapter":"יחידה 1 מבוא","heading":"1.4.1 הגדרת הקמור","text":"הדוגמה הראשונה לבעיה גיאומטרית שנלמד בקורס היא בעיית חישוב הקמור. הקמור של קבוצת נקודות הוא מושג בסיסי וחשוב ביותר, מכיוון שיש לו אינספור שימושים בתחומים שונים ומגוונים. בסרטון הבא נגדיר מהו הקמור של קבוצת נקודות, ונציג דוגמה אחת לשימוש בו – דווקא בבעיה שבמבט ראשון נראה שאין לה קשר לגיאומטריה, ובהמשך נראה איך בכל זאת הגיאומטריה תעזור לנו בפתרונה.","code":""},{"path":"intro.html","id":"צפו-בסרטון-הבא.-1","chapter":"יחידה 1 מבוא","heading":"צפו בסרטון הבא.","text":"הגדרה: קבוצה קמורהקבוצת נקודות \\(S\\) היא קבוצה קמורה אם לכל זוג נקודות \\(p,q\\S\\) מתקיים שהקטע \\(pq\\) מוכל בקבוצה \\(S\\).הגדרה: הקמורעבור קבוצת נקודות \\(S\\), הקמור (Convex Hull) של S מסומן \\(CH(S)\\).לקמור של קבוצת נקודות יש מספר הגדרות שקולות:הקמור של קבוצת נקודות \\(S\\) הוא הקבוצה הקמורה הקטנה ביותר שמכילה את \\(S\\). (כלומר לא קיימת קבוצה קמורה שמכילה את \\(S\\) ומוכלת ממש בקמור של \\(S\\)).הקמור של קבוצת נקודות \\(S\\) הוא הקבוצה הקמורה הקטנה ביותר שמכילה את \\(S\\). (כלומר לא קיימת קבוצה קמורה שמכילה את \\(S\\) ומוכלת ממש בקמור של \\(S\\)).הקמור של קבוצת נקודות \\(S\\) הוא הפוליגון הקמור היחיד שקודקודיו הם נקודות מ-\\(S\\) ושמכיל את \\(S\\).הקמור של קבוצת נקודות \\(S\\) הוא הפוליגון הקמור היחיד שקודקודיו הם נקודות מ-\\(S\\) ושמכיל את \\(S\\).הקמור של קבוצת נקודות \\(S\\) הוא החיתוך של כל חצאי המרחבים הסגורים שמכילים את \\(S\\).הקמור של קבוצת נקודות \\(S\\) הוא החיתוך של כל חצאי המרחבים הסגורים שמכילים את \\(S\\).","code":""},{"path":"intro.html","id":"naive-alg","chapter":"יחידה 1 מבוא","heading":"1.4.2 אלגוריתם נאיבי","text":"בחלק הראשון של סעיף 1.1 בספר הלימוד מופיעות הגדרות הקמור שראינו קודם, וכן מתואר האלגוריתם SlowConvexHull, שהוא אלגוריתם נאיבי. סיבוכיות זמן הריצה שלו היא \\(O(n^3)\\), והיא רחוקה מלהיות אופטימלית, אך הוא אינטואיטיבי ונכונותו נובעת ישירות מהאבחנות שהצגנו קודם לגבי התכונות הגיאומטריות של הקמור.באלגוריתם זה עולה הנושא של מצבים מנוונים (degeneracies), שהם למעשה מקרי קצה של הקלט שיש להביא בחשבון. נוסף על כך, באלגוריתם עולה גם בעיה של עמידות החישוב (robustness), כלומר במצבים מסוימים של טעויות עיגול בחישובים עם נקודה צפה (floating point), ייתכן שהאלגוריתם אפילו לא יחזיר פוליגון. בחלק הרביעי של יחידה זו תוכלו לקרוא עוד על עמידות החישוב ומצבים מנוונים.","code":""},{"path":"intro.html","id":"קראו-את-חלקו-הראשון-של-סעיף-1.1-בספר-הלימוד-עמודים-25-.unnumbered.","chapter":"יחידה 1 מבוא","heading":"1.4.2.1 קראו את חלקו הראשון של סעיף 1.1 בספר הלימוד (עמודים 2–5) {.unnumbered}.","text":"","code":""},{"path":"intro.html","id":"incremental-alg","chapter":"יחידה 1 מבוא","heading":"1.4.3 אלגוריתם אינקרמנטלי","text":"בסרטון הבא נתאר את האלגוריתם ConvexHull המופיע בחלקו השני של סעיף 1.1 בספר הלימוד. האלגוריתם הזה נקרא גם האלגוריתם האינקרמנטלי, או סריקת גרהם (Graham Scan). הוא מתוחכם יותר, וסיבוכיות זמן הריצה שלו היא כמעט לינארית. זהו שיפור משמעותי מאוד לעומת האלגוריתם הנאיבי שראינו בחלק הקודם.","code":""},{"path":"intro.html","id":"צפו-בסרטון-הבא-.unnumbered.","chapter":"יחידה 1 מבוא","heading":"1.4.3.1 צפו בסרטון הבא {.unnumbered}.","text":"","code":""},{"path":"intro.html","id":"קראו-את-חלקו-השני-של-סעיף-1.1-בספר-הלימוד-עמודים-68.","chapter":"יחידה 1 מבוא","heading":"קראו את חלקו השני של סעיף 1.1 בספר הלימוד (עמודים 6–8).","text":"","code":""},{"path":"intro.html","id":"output-sens","chapter":"יחידה 1 מבוא","heading":"1.4.4 אלגוריתם רגיש לפלט","text":"האם ניתן לשפר את זמן הריצה של האלגוריתם האינקרמנטלי שראינו קודם? בסרטון הבא נתאר אלגוריתם נוסף לחישוב הקמור, שנקרא אלגוריתם עטיפת המתנה (Gift Wrapping) או Jarvis’s March. זמן הריצה שלו הוא \\(O(nh)\\), כאשר \\(h\\) הוא מספר קודקודי הקמור. סוג כזה של אלגוריתם נקרא output sensitive, כלומר אלגוריתם שזמן הריצה שלו תלוי בגודל הפלט.","code":""},{"path":"intro.html","id":"צפו-בסרטון-הבא.-2","chapter":"יחידה 1 מבוא","heading":"צפו בסרטון הבא.","text":"","code":""},{"path":"intro.html","id":"deg-robust","chapter":"יחידה 1 מבוא","heading":"1.5 מצבים מנוונים ועמידות החישוב","text":"כדי לפשט את התיאור של אלגוריתמים גיאומטריים, במקרים רבים משתמשים בהנחה שנקראת מצב כללי (general position). משמעות ההנחה היא שהקלט אינו מכיל מצבים מנוונים (degenerate), למשל שתי נקודות עם אותה קואורדינטת \\(x\\), שלוש נקודות על ישר אחד או ארבע נקודות על מעגל. המטרה היא להימנע מסרבול האלגוריתם כאשר יש צורך בטיפול במקרי קצה. לדוגמה, באלגוריתם האינקרמטלי לחישוב הקמור (סריקת גרהם), יש למיין את הנקודות לפי קואורדינטת ה-\\(x\\) שלהן. אך מה עושים אם לשתי נקודות יש אותה קואורדינטת \\(x\\)? נצטרך להחליט מי מהן תופיע ראשונה במיון. אמנם כאן נוכל להוסיף תיאור פשוט יחסית, אך קל יותר להניח שהקלט נמצא במצב כללי, כלומר שאין שתי נקודות בעלות אותה קואורדינטת \\(x\\). הנחות מסוג זה הן מקובלות באלגוריתמים גיאומטריים, ומשתנות בהתאם לצורכי האלגוריתם.מצבים מנוונים קשורים בנושא עמידות החישוב (robustness), מכיוון שלעיתים הטיפול בהם כרוך בבדיקה הגוררת חישוב שתוצאתו היא אפס. לדוגמה, במימוש האלגוריתם האינקרמנטלי, אנו נדרשים לבדוק אם שלוש הנקודות האחרונות יוצרות פנייה ימינה. כלומר, בהינתן שלוש נקודות, \\(p_1, p_2, p_3\\), נרצה לבדוק אם הזווית שהן יוצרות, כלומר הזוית \\(\\alpha = \\angle p_1 p_2 p_3\\), קטנה מ- \\(180^\\circ\\). ניתן לעשות זאת על ידי חישוב של הישר העובר דרך \\(p_1 p_2\\) ובדיקה אם \\(p_3\\) נמצאת מעליו או מתחתיו, או על ידי מכפלה וקטורית, כפי שנראה בפרק הבא. אם שלוש הנקודות נמצאות על ישר אחד, נקבל שוויון, כלומר \\(\\alpha= 180^\\circ\\). כאשר מבצעים חישוב של מספרים ממשיים במחשב, התוצאה תלויה ברמת הדיוק של המחשב, אשר אינה אינסופית, ולכן בדרך כלל לא נקבל מצב של שוויון מדויק. לכן, אם שלוש הנקודות נמצאות כמעט על אותו ישר, אי-דיוק מזערי בחישוב עלול להביא לתוצאה שגויה, מה שמעלה את השאלה של נכונות האלגוריתם במצבים כגון זה, וזוהי בעצם השאלה של עמידות החישוב.","code":""},{"path":"intro.html","id":"קראו-את-סעיף-1.2-בספר-עמודים-810.","chapter":"יחידה 1 מבוא","heading":"קראו את סעיף 1.2 בספר (עמודים 8–10).","text":"","code":""},{"path":"map-overlay.html","id":"map-overlay","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","text":"","code":""},{"path":"map-overlay.html","id":"preface-2","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"2.1 הקדמה","text":"","code":""},{"path":"map-overlay.html","id":"them-map","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"2.1.1 שכבות מידע במפה","text":"תחילה נראה כיצד ניתן למצוא את כל החיתוכים באוסף קטעים נתון, ולשם כך\nנשתמש בטכניקה חשובה ושימושית מאוד: טכניקת הישר הסורק (sweep-line). לאחר\nמכן נדבר על ייצוג של מפות מישוריות (גרפים מישוריים), ונתאר מבנה נתונים\nיעיל לאחסונם – DCEL. לבסוף, נראה כיצד ניתן לאחד שני מבנים כאלה, המייצגים\nשתי מפות מישוריות, למפה מישורית אחת המאגדת את כל המידע.","code":""},{"path":"map-overlay.html","id":"קראו-את-ההקדמה-לפרק-2-עמודים-1920.","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"קראו את ההקדמה לפרק 2 (עמודים 19–20).","text":"","code":""},{"path":"map-overlay.html","id":"sweep-line","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"2.2 טכניקת הישר הסורק","text":"","code":""},{"path":"map-overlay.html","id":"line-int","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"2.2.1 חיתוך קטעים במישור","text":"טכניקת הישר הסורק (sweep-line) היא חשובה ושימושית מאוד בגיאומטריה\nחישובית. כדי להדגים את השימוש בטכניקה זו, ולפני שנדבר על מפות מישוריות,\nנציג בעיה פשוטה לכאורה שנקראת בעיית חיתוך קטעים במישור (line segment\nintersection). בבעיה זו, הקלט הוא אוסף של קטעים במישור, והמטרה היא למצוא\nאת כל נקודות החיתוך בין קטעים. בסרטון הבא נתאר את רעיון השימוש בישר\nהסורק עבור בעיית חיתוך קטעים במישור.","code":""},{"path":"map-overlay.html","id":"צפו-בסרטון-הבא.-3","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"צפו בסרטון הבא.","text":"בטכניקת הישר הסורק, הרעיון הוא “לסרוק” את הקטעים בעזרת ישר אופקי \\(\\ell\\)\nהנע מלעלה למטה. ה”סטטוס” (status) של הישר הוא אוסף הקטעים הנחתכים עם\nהישר במיקומו הנוכחי. את הסטטוס יש לעדכן בזמן שהישר נע מטה, אך הוא אינו\nמתעדכן באופן רציף – העדכון מתבצע רק כאשר הישר מגיע לנקודות מסוימות\nשאנו מכנים “מאורעות” (event points). בבעיית חיתוך הקטעים, המאורעות\nהם נקודות הקצה של הקטעים, וגם נקודות החיתוך עצמן, שמתגלות במהלך\nהאלגוריתם. בכל פעם שהישר מגיע למאורע, יש לעדכן את הסטטוס ואת תור\nהמאורעות, ולבצע בדיקות של חיתוכים בין הקטעים בסטטוס.\nזמן הריצה של האלגוריתם הראשון שמתואר בסרטון ומשתמש בשיטת הישר הסורק, הוא\n\\(O(n^2)\\). האם קיים אוסף של קטעים ללא נקודות חיתוך כלל, שעבורו זמן הריצה\nשל האלגוריתם הזה יהיה \\(\\Theta(n^2)\\)? אם לא, הסבירו מדוע. אם כן, ציירו\nדוגמה לאוסף כזה.באוסף הקטעים שבאיור למטה אין נקודות חיתוך, אך בשלב שבו הקטע ה- \\(\\) נוסף\nלסטטוס, כבר מופיעים בסטטוס \\(-1\\) הקטעים הראשונים, ולכן יהיו \\(-1\\)\nבדיקות. בסך הכול מספר הבדיקות בכל השלבים יהיה \\(\\Theta(n^2)\\).\n","code":""},{"path":"map-overlay.html","id":"line-sweep-impl","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"2.2.2 טכניקת הישר הסורק – מימוש","text":"בסעיף הקודם ראינו סקיצה של אלגוריתם המשתמש בטכניקת הישר הסורק, והסברנו\nבאופן אינטואיטיבי מדוע גישה כזו תיתן לנו אלגוריתם יעיל שהוא רגיש לפלט,\nושאינו בודק חיתוכים בין כל זוג קטעים.כיצד מממשים אלגוריתם כזה ביעילות? בסעיף 2.1 בספר הלימוד מתואר בפירוט\nהאלגוריתם FindIntersections, מבני הנתונים שנזדקק להם עבור תור\nהמאורעות והסטטוס, והפרוצדורה HandleEvenPoint לטיפול במאורעות. זמן\nהריצה של האלגוריתם הוא \\(O((n+k)\\log n)\\), כאשר \\(k\\) הוא מספר נקודות\nהחיתוך.","code":""},{"path":"map-overlay.html","id":"קראו-בעיון-את-סעיף-2.1-בספר-הלימוד-עמודים-2029.","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"קראו בעיון את סעיף 2.1 בספר הלימוד (עמודים 20–29).","text":"","code":""},{"path":"map-overlay.html","id":"euiler","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"נוסחת אוילר.","text":"בסעיף 2.1 בספר הלימוד, יש שימוש בנוסחת אוילר להשגת חסם על מספר המאורעות.עבור גרף מישורי עם \\(n_v\\) קודקודים, \\(n_e\\) צלעות, ו-\\(n_f\\) פאות, נוסחת\nאוילר מתארת את הקשר ביניהם באופן הבא.נוסחת אוילר: \\(n_v-n_e+n_f\\ge 2\\).זוהי נוסחה חשובה ביותר, ונעשה בה שימוש גם בהמשך הקורס.שימו לב שניתן להשתמש באותו אלגוריתם שראינו למציאת כל נקודות החיתוך, אך\nלעצור מייד במציאת נקודת החיתוך הראשונה. נקבל זמן ריצה של \\(O(n\\log n)\\).","code":""},{"path":"map-overlay.html","id":"check-line-int","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"2.2.3 כיצד נבדוק אם זוג קטעים חותכים זה את זה?","text":"במהלך האלגוריתם הסורק שראינו קודם, אנו נדרשים למצוא את נקודת החיתוך בין\nשני קטעים נתונים. בהינתן שני קטעים, \\(S=\\overline{pq}\\) ו-\n\\(S'=\\overline{p'q'}\\), כיצד נבדוק אם הם חותכים זה את זה?\n","code":""},{"path":"map-overlay.html","id":"גישה-ראשונה-חישוב-הישרים-המכילים-את-הקטעים.","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"גישה ראשונה: חישוב הישרים המכילים את הקטעים.","text":" נחשב את הישר\n\\(\\ell\\) המכיל את הקטע \\(S\\), ואת הישר \\(\\ell'\\) המכיל את הקטע \\(S'\\).נחשב את נקודת החיתוך \\(t\\) בין הישרים \\(\\ell\\) ו-\\(\\ell'\\).נבדוק אם \\(t\\) שייכת לשני הקטעים \\(S\\) ו-\\(S'\\).בשיטה זו אנו מוצאים את נקודת החיתוך, אם היא קיימת.","code":""},{"path":"map-overlay.html","id":"מציאת-הישר-המכיל-קטע.","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"מציאת הישר המכיל קטע.","text":"מציבים את שתי נקודות הקצה של הקטע במשוואת הישר \\(y=m x + c\\), ולאחר מכן\nפותרים מערכת של שתי משוואות כדי למצוא את \\(m\\).למשל, עבור הקטע \\(\\overline{pq}\\) נסמן \\(p=(p_x,p_y)\\), \\(q=(q_x,q_y)\\), ונקבל\n\\(m=\\frac{q_y-p_y}{q_x-p_x}\\).לאחר מכן, מוצאים את \\(c\\) על ידי הצבה של אחת מהנקודות במשוואה.שימו לב שאם הקטע \\(\\overline{p q}\\) הוא אנכי, אז המכנה של \\(m\\) מתאפס.","code":""},{"path":"map-overlay.html","id":"מציאת-נקודת-החיתוך-בין-שני-ישרים.","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"מציאת נקודת החיתוך בין שני ישרים.","text":"בהינתן שני ישרים לא אנכיים,\\(\\ell: y= m x + c\\) ו-\\(\\ell': y= m'x+ c'\\),\nנציב את נקודת החיתוך \\(t=(t_x,t_y)\\) בשתי המשוואות. נפתור ונקבל:\n\\(t_x=\\frac{c-c'}{m'-m}\\), \\(t_y=\\frac{cm'-c'm}{m'-m}\\).גם כאן נשים לב שהמכנה מתאפס אם הישרים אנכיים או מקבילים זה לזה.","code":""},{"path":"map-overlay.html","id":"בדיקה-אם-נקודת-החיתוך-שייכת-לקטע.","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"בדיקה אם נקודת החיתוך שייכת לקטע.","text":"נניח שמתקיים \\(p_x\\le q_x\\), \\(p_y\\le q_y\\). אז נקודת החיתוך \\(t\\) שייכת לקטע\n\\(\\overline{p q}\\) אם \\(t_x\\[p_x, q_y]\\), \\(t_y\\[p_y, q_y]\\).בדוגמה המופיעה כאן, הקטעים אינם חותכים זה את זה, אך נקודת החיתוך בין הישרים\nהמכילים את הקטעים מופיעה על אחד מהם.","code":""},{"path":"map-overlay.html","id":"כיצד-מטפלים-במקרים-מיוחדים","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"כיצד מטפלים במקרים מיוחדים?","text":"שימו לב שבגישה הראשונה התעלמנו ממספר מצבים מיוחדים של הקלט, למשל כאשר\nהקטעים הם אנכיים. נסו לבדוק בעצמכם מהם מצבי הקלט שאנחנו מתעלמים מהם,\nוחשבו כיצד ניתן לטפל בהם.ביחידה הראשונה של הקורס דנו בנושא של מצבים מנוונים. ראינו שניתן לטפל\nבמצבים מנוונים על ידי חלוקה למקרים נפרדים, אך חלוקה כזו היא בדרך כלל\nמתישה ומועדת לטעויות. דרך נוספת לטיפול במצבים כאלו היא למצוא מערכת\nגיאומטרית אחרת שבה המקרים המיוחדים נעלמים, למשל על ידי סיבוב מערכת\nהצירים, אך פעולה זו לא תמיד אפשרית. אפשרות אחרת היא להשתמש בהנחת מצב\nכללי: מניחים שהקלט אינו מכיל מצבים מנוונים.במקרה של חיתוך ישרים, ניתן למצוא פתרון אחר שבו המקרים המיוחדים אינם\nדורשים טיפול נפרד, כמו בגישה הבאה.","code":""},{"path":"map-overlay.html","id":"גישה-שנייה-חישוב-דטרמיננטה.","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"גישה שנייה: חישוב דטרמיננטה.","text":"אבחנה:\nהקטעים \\(S\\) ו-\\(S'\\) חותכים זה את זה אם ורק אם הישר \\(\\ell\\) שמכיל את \\(S\\)\n“מפריד” בין הנקודות \\(p'\\) ו-\\(q'\\) , והישר \\(\\ell'\\) שמכיל את \\(S'\\) “מפריד”\nבין הנקודות \\(p\\) ו-\\(q\\).כיצד נבדוק אם ישר מפריד בין שתי נקודות? נוכל להמיר את הבעיה הזו\nלבעיה הבאה: בהינתן שלוש נקודות, \\(,b,c\\), נרצה לדעת אם כאשר נעים מ-\\(\\)\nל-\\(b\\) ואחר כך ל-\\(c\\), מבצעים פנייה ימינה, שמאלה, או שממשיכים באותו הכיוון.\nלשם כך נחשב את הדטרמיננטה הבאה:\n\\(det\\begin{bmatrix}a_x&a_y&1\\\\b_x&b_y&1\\\\c_x&c_y&1\\end{bmatrix}=a_xb_y+a_yc_x+b_xc_y-a_yb_x-a_xc_y-b_yc_x\\)הערך המוחלט של הדטרמיננטה הזו שווה בדיוק לפעמיים שטח המשולש\n\\(\\triangle b c\\).ערכה חיובי אם פונים שמאלה ב-\\(b\\), שלילי אם פונים ימינה ב-\\(b\\), ו-0 אם\nממשיכים באותו הכיוון. לכן, בשיטה זו\nנוכל לבדוק אם הנקודות \\(p'\\) ו-\\(q'\\) נמצאות בשני צדדים שונים של הישר\n\\(\\ell\\) המכיל את \\(\\overline{pq}\\), על ידי חישוב של שתי הדטרמיננטות\nהמתאימות. לאחר מכן נוכל לבדוק אם הנקודות \\(p\\) ו-\\(q\\) נמצאות בשני צדדים\nשונים של הישר \\(\\ell'\\) המכיל את \\(\\overline{p'q'}\\).","code":""},{"path":"map-overlay.html","id":"dcel","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"2.3 מבנה DCEL","text":"","code":""},{"path":"map-overlay.html","id":"plan-map","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"2.3.1 יצוג של מפה מישורית","text":"","code":""},{"path":"map-overlay.html","id":"צפו-בסרטון-הבא.-4","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"צפו בסרטון הבא.","text":"","code":""},{"path":"map-overlay.html","id":"קראו-את-סעיף-2.2-בספר-עמודים-2933.","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"קראו את סעיף 2.2 בספר (עמודים 29–33).","text":"","code":""},{"path":"map-overlay.html","id":"problem-def","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"2.3.2 בעיית map overlay","text":"לאחר שראינו כיצד ניתן לייצג מפה מישורית, בחלק זה נראה כיצד ניתן לחשב את\nה-overlay של שתי מפות מישוריות. ה-overlay הוא הייצוג המאוחד של שתי שכבות\nמפה כאשר הן מונחות זו על גבי זו.בהינתן שתי מפות \\(\\mathcal{S_1}\\) ו-\\(\\mathcal{S_2}\\) המיוצגות על ידי מבני\nDCEL, נרצה לחשב מבנה DCEL עבור ה-overlay של \\(\\mathcal{S_1}\\) ו-\n\\(\\mathcal{S_1}\\), שמסומן \\(\\mathcal{O}=(\\mathcal{S_1},\\mathcal{S_2})\\).\nה-overlay הוא מפה מישורית, שבה לכל זוג פאות \\(f_1\\) מ-\\(\\mathcal{S_1}\\)\nו-\\(f_2\\) מ-\\(\\mathcal{S_2}\\) שהחיתוך שלהן לא ריק, קיימת פאה \\(f\\) שהיא בדיוק\nאחד מרכיבי הקשירות של \\(f_1\\cap f_2\\). (שימו לב ש-\\(f_1\\) או \\(f_2\\) יכולות\nלהיות הפאה החיצונית שאינה חסומה). נוסף על כך, נרצה לסמן את הפאה \\(f\\) בסימונים\nשל הפאות \\(f_1\\) ו-\\(f_2\\). למשל, נוכל לסמן \\(f=f_1f_2\\), כמו בדוגמה הבאה:בפרק 2.3 בספר הלימוד מתואר אלגוריתם MapOverlay, המחשב את\n\\(\\mathcal{O}=(\\mathcal{S_1},\\mathcal{S_2})\\) בשיטת הישר הסורק שראינו\nקודם.","code":""},{"path":"map-overlay.html","id":"קראו-את-סעיף-2.3-בספר-עמודים-3339.","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"קראו את סעיף 2.3 בספר (עמודים 33–39).","text":"","code":""},{"path":"map-overlay.html","id":"bool-op","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"2.3.3 פעולות בוליאניות","text":"אלגוריתם MapOverlay הוא כלי חזק ושימושי במגוון של בעיות. בסעיף 2.4 בספר הלימוד\nמופיעה דוגמה אחת לכך: חישוב של פעולות בוליאניות על שני\nפוליגונים. בהינתן שני פוליגונים \\(P_1,P_2\\), האלגוריתם מאפשר לנו לחשב את\nהאיחוד והחיתוך שלהם, ואת ההפרש ביניהם. הרעיון הוא שלאחר חישוב ה-overlay, לכל פאה\nבייצוג המאוחד יש תווית שקובעת אם פאה זו שייכת ל-\\(P_1\\), ל-\\(P_2\\), או\nלשניהם. לכן בעזרת התוויות נוכל להחליט עבור כל פאה אם היא נמצאת באיחוד,\nבחיתוך, או בהפרש.","code":""},{"path":"map-overlay.html","id":"קראו-את-סעיף-2.4-בספר-הלימוד-עמודים-3940.","chapter":"יחידה 2 מפות מישוריות וטכניקת הישר הסורק","heading":"קראו את סעיף 2.4 בספר הלימוד (עמודים 39–40).","text":"","code":""},{"path":"pol-tringle.html","id":"pol-tringle","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","text":"","code":""},{"path":"pol-tringle.html","id":"preface-3","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"3.1 הקדמה","text":"","code":""},{"path":"pol-tringle.html","id":"agp","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"3.1.1 בעיית הגלריה לאמנות","text":"אם כן, כמה מצלמות נצטרך להציב כדי לשמור על כל הגלריה? והיכן נצטרך להציב אותן? בעיה זו הייתה ההשראה לאחת הבעיות המפורסמות והמרתקות ביותר בתחום הגיאומטריה החישובית: בעיית הגלריה לאמנות.","code":""},{"path":"pol-tringle.html","id":"קראו-את-ההקדמה-לפרק-3-בספר-הלימוד-עמוד-45.","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"קראו את ההקדמה לפרק 3 בספר הלימוד (עמוד 45).","text":"","code":""},{"path":"pol-tringle.html","id":"geom-model","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"3.1.2 מודל גיאומטרי לבעיה","text":"בעיית הגלריה לאמנות נוסחה ב-1973 בידי המתמטיקאי ויקטור קלי.מנקודת מבט גיאומטרית, נוכל לתאר גלריה בעלת \\(n\\) קירות בעזרת פוליגון פשוט \\(P\\) בעל \\(n\\) צלעות (וכמובן גם \\(n\\) קודקודים), ואת מיקומי המצלמות בתור נקודות בתוך \\(P\\). נניח שמצלמה יכולה לצלם כל נקודה בגלריה שאינה מוסתרת ממנה על ידי אחד הקירות. במילים אחרות, מצלמה (נקודה) \\(g\\) שומרת על נקודה \\(p\\P\\) אם הקטע \\(\\overline{pq}\\) מוכל בתוך \\(P\\) (הפנים והשפה של \\(P\\)).באיור למטה מתואר פוליגון עם מצלמה יחידה בתוכו, והאיזור המוצלל הוא כל הנקודות שמצלמה זו שומרת עליהן, או “רואה” אותן.מהו המספר המינימלי של מצלמות שנצטרך כדי לשמור על כל \\(P\\)? כאן, ברור שהתשובה תלויה במבנה של הפוליגון \\(P\\).","code":""},{"path":"pol-tringle.html","id":"worst-case","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"3.1.3 מהו המקרה הגרוע ביותר?","text":"מציאת המספר המינימלי של מצלמות הנדרשות לשמירה על פוליגון נתון \\(P\\) היא בעיית אופטימיזציה אלגוריתמית, כלומר הפתרון לה הוא אלגוריתם המחזיר קבוצת נקודות \\(G\\) מגודל מינימלי, כך שלכל \\(p\\P\\) קיימת \\(g \\G\\) כך שהקטע \\(\\overline{pg}\\) מוכל בתוך \\(P\\) (כלומר \\(g\\) שומרת על \\(p\\)). בעיה זו היא NP-קשה, ובפרט לא ידוע אם קיים אלגוריתם כזה עם זמן ריצה פולינומי (ויותר מכך, ההשערה הרווחת היא שלא קיים כזה).נוכל גם לשאול את השאלה הקומבינטורית הבאה: מהו מספר המצלמות המינימלי הנדרש במקרה הגרוע ביותר? במילים אחרות, היינו רוצים למצוא פונקציה \\(g(n)\\), כך ש-:\\(g(n)\\) מצלמות מספיקות לכל פוליגון בעל \\(n\\) קודקודים; וגםקיים פוליגון בעל \\(n\\) קודקודים שעבורו נדרשות \\(g(n)\\) מצלמות.התבוננו במשפחת הפוליגונים הבאה, שלהם צורה דמוית מסרק.שימו לב שכדי לשמור על פוליגון מסרק בעל שתי “שיניים” נדרשות שתי מצלמות: המשולשים שהם שיני המסרק אינם נחתכים, ולכן אין נקודה אחת ש”רואה” את שני הקודקודים העליונים שלהם. עבור מסרק בעל שלוש שיניים נדרשות שלוש מצלמות, וכן הלאה. מהו מספר המצלמות שנצטרך עבור מסרק בעל \\(k\\) שיניים? כמה קודקודים יש למסרק כזה?ניתן להציג את משפחת פוליגוני המסרק באופן כללי כך: לכל \\(n \\ge 3\\), פוליגון מסרק בעל \\(n\\) קודקודים מורכב מבסיס שהוא צלע אופקית, ומעליו \\(\\lfloor \\frac{n}{3} \\rfloor\\) שיניים, שכל אחת מהן מורכבת משתי צלעות כל אחת, ומחוברות ביניהן על ידי צלעות אופקיות, כמו באיור הבא:קל לראות שניתן לבנות את המסרק כך שלא ניתן להציב מצלמה ששומרת על שני קודקודים שנמצאים בקצוות של שיניים שונות. לכן, מספר המצלמות הנדרש עבור מסרק בעל \\(n\\) קודקודים הוא \\(\\lfloor \\frac{n}{3} \\rfloor\\).אם כך, ראינו שלכל n קיים פוליגון בעל n קודקודים שעבורו מספר המצלמות הנדרש הוא\\(\\lfloor \\frac{n}{3}. \\rfloor\\) במילים אחרות, \\(g(n)\\ge \\lfloor \\frac{n}{3} \\rfloor\\). אך האם זהו המקרה הגרוע ביותר? האם \\(\\lfloor \\frac{n}{3} \\rfloor\\) מצלמות תמיד מספיקות כדי לשמור על פוליגון בגודל \\(n\\)? את זה נגלה בחלק הבא.","code":""},{"path":"pol-tringle.html","id":"guarding","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"3.2 שמירה ושילושים","text":"","code":""},{"path":"pol-tringle.html","id":"diagonals","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"3.2.1 חלוקה בעזרת אלכסונים","text":"הגדרה: אלכסון של פוליגון\nאלכסון של פוליגון P הוא קטע פתוח המחבר שני קודקודים של P ומוכל בפנימו.דוגמה:התבוננו בפוליגונים שבאיור הבא, כולם בעלי חמישה קודקודים, ואלכסוניהם מסומנים בקו מקווקו. לפוליגון מימין יש שלושה אלכסונים. לעומת זאת, לפוליגון האמצעי יש רק שני אלכסונים. באופן כללי, בפוליגון בעל חמישה קודקודים קיימים לכל היותר חמישה אלכסונים. ניתן לראות זאת בפוליגון משמאל.שימו לב למקרה של פוליגון קמור: מכל קודקוד ניתן למתוח \\(n-3\\) אלכסונים (לכל קודקוד שהוא לא הוא עצמו או אחד משכניו). מכיוון שבאופן זה כל אלכסון נספר פעמיים (פעם אחת לכל אחד מקודקודיו), נחלק ב-2. לכן התשובה היא \\(\\frac{n(n-3)}{2}\\).","code":""},{"path":"pol-tringle.html","id":"triangulation","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"3.2.2 שילוש של פוליגונים","text":"שילוש של פוליגונים הוא כלי מרכזי וחשוב בגיאומטריה של המישור, ויש לו שימוש רבים, בעיקר בתחום הגרפיקה הממוחשבת.הגדרה: שילוש (טריאנגולציה)\nלחלוקה של פוליגון למשולשים על ידי מספר מקסימלי של אלכסונים שאינם חותכים זה את זה אנו קוראים “שילוש” (טריאנגולציה).דוגמה:בדרך כלל קיים יותר משילוש אחד לפוליגון. למשל, את הפוליגון באיור הבא ניתן לשלש בכמה דרכים שונות. נסו למצוא שילוש השונה מהשניים המוצעים כאן.","code":""},{"path":"pol-tringle.html","id":"מדוע-נדרוש-מספר-מקסימלי-של-אלכסונים","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"מדוע נדרוש מספר מקסימלי של אלכסונים?","text":"כדי להבטיח שלא יהיו קודקודים של הפוליגון שאינם קודקודים של אחד המשולשים. מצב כזה יכול לקרות כאשר שלושה קודקודים עוקבים מופיעים על ישר אחד. ראו למשל את שלושת הקודקודים משמאל למטה באיור הקודם.ראינו דוגמה לפוליגון עם יותר משילוש אחד, אך האם תמיד קיים שילוש? התשובה היא כן! כדי להוכיח זאת, נראה קודם שתמיד נוכל למצוא אלכסון בפוליגון בעל לפחות ארבעה קודקודים.","code":""},{"path":"pol-tringle.html","id":"משפט-לכל-פוליגון-פשוט-בעל-ארבעה-קודקודים-לפחות-קיים-אלכסון.","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"משפט: לכל פוליגון פשוט בעל ארבעה קודקודים לפחות, קיים אלכסון.","text":"הוכחה: יהי \\(P\\) פוליגון בעל \\(n\\ge 4\\) קודקודים, ויהי \\(v\\) הקודקוד השמאלי ביותר של \\(P\\) (במקרה שיש יותר מאחד כזה, נבחר בנמוך ביותר). נסמן ב-\\(u,w\\) את שני הקודקודים השכנים ל-\\(v\\) על שפת הפוליגון. מכיוון של-\\(P\\) יש לפחות ארבעה קודקודים, לא ייתכן שהקטע \\(\\overline{uw}\\) הוא צלע של \\(P\\). אם הקטע הפתוח \\(\\overline{u w}\\) מוכל בפנים של \\(P\\), אזי מצאנו אלכסון של \\(P\\). אחרת, קיים לפחות קודקוד אחד של \\(P\\) בפנימו של המשולש המוגדר על ידי הקודקודים \\(u,v,w\\), או על הקטע \\(\\overline{u w}\\) (נשים לב כי מבחירת \\(v\\), הקודקודים \\(u, v, w\\) לא יכולים להיות כולם על ישר אחד). יהי \\(v'\\) הקודקוד השמאלי ביותר בתוך המשולש הזה. הקטע \\(\\overline{v v'}\\) לא חותך אף צלע של \\(P\\), אחרת אחד מהקודקודים של צלע כזו היה בפנים המשולש ושמאלי יותר מ-\\(v'\\). לכן הקטע הפתוח \\(\\overline{v v'}\\) הוא אלכסון של \\(P\\).","code":""},{"path":"pol-tringle.html","id":"משפט-לכל-פוליגון-קיים-שילוש.","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"משפט: לכל פוליגון קיים שילוש.","text":"נוסף על כך, כל שילוש של פוליגון פשוט בעל \\(n\\) קודקודים מכיל בדיוק \\(n-2\\) משולשים ו- \\(2n-3\\) צלעות.הוכחה: יהי \\(P\\) פוליגון בעל \\(n\\) קודקודים. נוכיח את המשפט באינדוקציה על \\(n\\). עבור \\(n=3\\), \\(P\\) הוא משולש והמשפט מתקיים. יהי \\(n>3\\), ונניח שהמשפט מתקיים לכל \\(m<n\\). לפי המשפט שהוכחנו קודם, קיים ב-\\(P\\) אלכסון. כל אלכסון כזה מחלק את \\(P\\) לשני פוליגונים \\(P_1,P_2\\). מספר הקודקודים של כל אחד מהפוליגונים האלו קטן ממש מ-\\(n\\), ולכן לפי הנחת האינדוקציה קיים שילוש של \\(P_ 1\\) ו-\\(P_ 2\\), והאיחוד שלהם הוא שילוש של \\(P\\).\nכדי לחסום את מספר המשולשים, נתבונן בשילוש כלשהו של \\(P\\), ונבחר אלכסון \\(\\overline{uv}\\) כלשהו בשילוש (כאשר \\(u, v\\) הם קודקודים של \\(P\\)). אלכסון זה מחלק את \\(P\\) לשני פוליגונים \\(P_ 1, P_ 2\\), בעלי \\(m_ 1, m_ 2\\) קודקודים, בהתאמה. כל קודקוד של \\(P\\), פרט לקודקודים \\(u, v\\), מופיע בדיוק באחד מ-\\(P_ 1, P_ 2\\), והקודקודים \\(u, v\\) מופיעים בשניהם. לכן מתקיים \\(m_1+m_2= n+2\\). לפי הנחת האינדוקציה, מספר המשולשים בשילוש של \\(P_1\\) הוא \\(m_1-2\\), ומספר המשולשים בשילוש של \\(P_2\\) הוא \\(m_2- 2\\). לכן השילוש של מכיל בסך הכול \\(m_1-2+ m_2-2 = n- 2\\) משולשים.\nבאופן דומה, כל אלכסון בשילוש של \\(P\\)’ פרט ל-\\(\\overline{u v}\\), מופיע בדיוק באחד מהשילושים של \\(P_1, P_2\\), והאלכסון \\(\\overline{u v }\\) מופיע כצלע בשניהם. לכן לפי הנחת האינדוקציה, מספר הצלעות בשילוש של \\(P\\) הוא \\((2m_1 - 3)+ (2m_2- 3 )- 1 = 2 (m_1+m_2)-7=2(n+2)-7=2n-3\\).","code":""},{"path":"pol-tringle.html","id":"agp-thm","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"3.2.3 משפט הגלריה לאמנות","text":"ראינו קודם שכדי לשמור על פוליגון מסרק בעל \\(n\\) קודקודים, נזדקק ל-\\(\\lfloor \\frac{n}{3} \\rfloor\\) מצלמות. במילים אחרות, זה אומר ש-\\(g(n)\\ge \\lfloor \\frac{n}{3} \\rfloor\\). האם זהו המקרה הגרוע ביותר? כלומר, האם \\(\\lfloor \\frac{n}{3} \\rfloor\\) מצלמות יספיקו לכל פוליגון בגודל \\(n\\) שנבחר? או שקיימיים פוליגונים “גרועים” יותר?התשובה היא שתמיד ניתן להסתפק ב-\\(\\lfloor \\frac{n}{3} \\rfloor\\) מצלמות! כלומר, נוכל להראות שמתקיים \\(g(n)\\le \\lfloor \\frac{n}{3} \\rfloor\\), ובכך להוכיח את המשפט המפורסם:","code":""},{"path":"pol-tringle.html","id":"משפט-הגלריה-לאמנות-gnlfloor-fracn3-rfloor.","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"משפט הגלריה לאמנות: \\(g(n)=\\lfloor \\frac{n}{3} \\rfloor\\).","text":"מעניין לדעת: הראשון שניסח והוכיח את משפט הגלריה לאמנות היה ואצלב כבטל (Václav Chvátal), אך את ההוכחה שנראה כאן גילה סטיב פיסק (Steve Fisk). ההוכחה של פיסק הייתה קצרה ופשוטה יותר, ונחשבה אלגנטית כל כך עד שנכללה בספר “Proofs BOOK” - המכיל אוסף של הוכחות בהשראת אמרתו של פול ארדש (Paul Erdős): “place God keeps aesthetically perfect proofs”.לפני שנראה את ההוכחה לכך ש-\\(\\lfloor \\frac{n}{3} \\rfloor\\) מצלמות מספיקות תמיד, ננסה להבין כיצד ניתן להוכיח חסמים פשוטים יותר. כיצד ניתן להראות שמספר מסוים של מצלמות מספיק לכל פוליגון \\(P\\) בעל \\(n\\) קודקודים?דוגמה:נתבונן בשילוש של \\(P\\). קל להראות שמספיקות \\(n\\) מצלמות המוצבות על קודקודי \\(P\\). מדוע?קודקודי המשולשים הם קודקודים של \\(P\\), ומשולש הוא פוליגון קמור, ולכן קבוצה זו של מצלמות שומרת על כל \\(P\\). למעשה, מכיוון שבכל שילוש יש \\(n-2\\) משולשים, נוכל להסתפק ב-\\(n-2\\) מצלמות.כעת נראה הוכחה למשפט הגלריה לאמנות. אולי בשלב זה כבר ניחשתם כי הוכחה זו מבוססת גם היא על שילוש של הפוליגון. נוסף על השילוש, ההוכחה תתבסס גם על צביעה של הגרף המוגדר על ידי צלעות המשולשים וקודקודי הפוליגון. נזכיר כי גרף הוא \\(k\\)-צביע (ניתן לצביעה ב-\\(k\\) צבעים) אם ניתן להתאים לכל אחד מקודקודיו צבע (מספר) בין 1 ל-\\(k\\), כך שכל שני קודקודים המחוברים בצלע משותפת צבועים בצבעים שונים.","code":""},{"path":"pol-tringle.html","id":"טענה-כל-שילוש-ניתן-לצביעה-בשלושה-צבעים.","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"טענה: כל שילוש ניתן לצביעה בשלושה צבעים.","text":"הוכחה: נוכיח את המשפט באינדוקציה על מספר הקודקודים \\(n\\). עבור \\(n=3\\) הפוליגון הוא משולש, והוא ניתן לצביעה בשלושה צבעים. יהי \\(n> 3\\), ונניח שהמשפט מתקיים לכל \\(m<n\\). יהי \\(P\\) פוליגון בעל \\(n\\) קודקודים, נתבונן בשילוש כלשהו של \\(P\\), ונבחר אלכסון \\(overline{u v}\\) כלשהו בשילוש (כאשר \\(u,v\\) הם קודקודים של \\(P\\)). אלכסון זה מחלק את \\(P\\) לשני פוליגונים \\(P_1,P_2\\). לפי הנחת האינדוקציה, נוכל לצבוע את \\(P_1\\) בשלושה צבעים: אדום, כחול וצהוב, ואת \\(P_2\\) בצבעים: כתום, סגול וירוק. כעת נרצה “להדביק” את שני הפוליגונים כך שנקבל צביעה של \\(P\\). מכיוון שבחירת הצבעים היא שרירותית, נוכל להניח בלי הגבלת הכלליות שבצביעה של \\(P_1\\) הקודקודים \\(u,v\\) נצבעו באדום וכחול בהתאמה, ובצביעה של \\(P_2\\) הם נצבעו בכתום וסגול בהתאמה. לכן נחליף את הצבע של כל קודקוד כתום לאדום, סגול לכחול, וירוק לצהוב. קיבלנו צביעה של \\(P\\) בשלושה צבעים.","code":""},{"path":"pol-tringle.html","id":"משפט-gnle-lfloor-fracn3-rfloor.","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"משפט: \\(g(n)\\le \\lfloor \\frac{n}{3} \\rfloor\\).","text":"כלומר, ניתן לשמור על כל פוליגון פשוט \\(P\\) בעל \\(n\\) קודקודים בעזרת \\(\\lfloor \\frac{n}{3} \\rfloor\\) מצלמות.הוכחה: נבחר שילוש כלשהו \\(T\\) של \\(P\\) ונצבע אותו בשלושה צבעים: אדום, כחול, וצהוב. מעקרון שובך היונים, קיים לפחות צבע אחד שבו צבועים לכל היותר \\(\\lfloor \\frac{n}{3} \\rfloor\\) קודקודים (אחרת, נקבל שסכום הקודקודים גדול מ-\\(n\\)). נניח שצבע זה הוא האדום, ונמקם מצלמה בכל קודקוד הצבוע באדום. נשים לב שבכל משולש ב-T יש בדיוק קודקוד אחד הצבוע באדום: אחרת, נקבל צלע במשולש ששני קודקודיה צבועים באותו הצבע. מכיוון שכל משולש הוא קמור, המצלמה הממוקמת על הקודקוד האדום שומרת על כולו, ולכן המצלמות שהצבנו שומרות על כל P.","code":""},{"path":"pol-tringle.html","id":"גלריות-אורתוגונליות.","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"גלריות אורתוגונליות.","text":"עבור פוליגון פשוט אורתוגונלי, ניתן להראות כי מספיקים \\(\\lfloor \\frac{n}{4} \\rfloor\\) שומרים. קווי ההוכחה דומים: תחילה “מרבעים” את הפוליגון, כלומר מחלקים את הפוליגון למרובעים קמורים בעזרת אלכסונים. לאחר מכן, מוסיפים לכל מרובע את שני האלכסונים שלו (שימו לב שהאלכסונים חוצים זה את זה), ולבסוף מראים שקיימת צביעה של הגרף שהתקבל בארבעה צבעים. מכאן, לפי עקרון שובך היונים, קיים צבע אחד שהשתמשנו בו לכל היותר \\(\\lfloor \\frac{n}{4} \\rfloor\\) פעמים, ומכיוון שלכל אחד מהמרובעים יש בדיוק קודקוד אחד הצבוע בצבע זה, קיבלנו קבוצה של מצלמות ששומרות על הפוליגון כולו.","code":""},{"path":"pol-tringle.html","id":"dual-graph","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"3.2.4 הגרף הדואלי לשילוש","text":"תכונה מעניינת (ושימושית!) נוספת של שילושים מתקבלת כשמתבוננים בגרף הדואלי לשילוש. למעשה, הייצוג של שילוש באמצעות גרף מאפשר לנו לתרגם את הבעיה הגיאומטרית לבעיה קומבינטורית.נסמן ב-\\(T\\) את אוסף המשולשים בשילוש כלשהו של פוליגון \\(P\\). הגרף הדואלי \\(G_T\\) לשילוש \\(T\\) הוא הגרף שקבוצת הקודקודים שלו מכילה קודקוד אחד לכל משולש ב-\\(T\\), וקבוצת הצלעות שלו מכילה צלע בין שני קודקודים \\(u,v\\) של הגרף אם המשולשים המתאימים לקודקודים אלו חולקים אלכסון משותף.דוגמה:באיור למטה ניתן לראות שילוש \\(T\\) ואת הגרף \\(G_T\\) המתאים לו.כל קודקוד של \\(G_T\\) מתאים למשולש מ-\\(T\\), וכל צלע של \\(G_T\\) מתאימה לאלכסון בשילוש (כל צלע חוצה אלכסון אחד). שימו לב שהגרף \\(G_T\\) הוא עץ. האם זה מקרי?","code":""},{"path":"pol-tringle.html","id":"אבחנה-הגרף-הדואלי-לשילוש-הוא-עץ.","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"אבחנה: הגרף הדואלי לשילוש הוא עץ.","text":"נראה שלכל שילוש \\(T\\), הגרף הדואלי \\(G_T\\) הוא עץ.הוכחה: ראשית, נשים לב שהגרף \\(G_T\\) הוא קשיר מכיוון שפנים הפוליגון קשיר. שנית, כל אלכסון מחלק את \\(P\\) לשני פוליגונים, לכן מחיקה של צלע מהגרף \\(G_T\\) מחלקת את הגרף לשני רכיבי קשירות. במילים אחרות, הגרף \\(G_T\\) הוא קשיר ואינו מכיל מעגלים, כלומר הוא עץ. שימו לב: טענה זו אינה נכונה עבור פוליגון עם חורים! הגרף הדואלי לשילוש של פוליגון עם חורים עשוי להכיל מעגלים, כמו באיור למטה.חשבו, מדוע זה קורה? אילו אלכסונים אינם מחלקים את הפוליגון לשני חלקים?","code":""},{"path":"pol-tringle.html","id":"אלגוריתם-למציאת-מיקומי-המצלמות.","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"אלגוריתם למציאת מיקומי המצלמות.","text":"משפט הגלריה לאמנות אומר שתמיד מספיקות \\(\\lfloor \\frac{n}{3} \\rfloor\\) מצלמות כדי לשמור על כל פוליגון נתון, אך כיצד נוכל לדעת היכן למקם אותן? נוכל בקלות להפוך את הוכחת הקיום שראינו בעמוד הקודם, לאלגוריתם בזמן לינארי המוצא את מיקומי המצלמות – בעזרת הגרף הדואלי לשילוש. בהינתן הגרף הדואלי, נוכל למצוא צביעה של קודקודי הגרף בשלושה צבעים בזמן לינארי על ידי סריקת DFS פשוטה. נסו לחשוב ולהראות בעצמכם כיצד ניתן לעשות זאת (הפתרון מופיע בסעיף 3.1 בספר הלימוד).בחלק הבא נראה כיצד ניתן למצוא שילוש של פוליגון בזמן \\(O(n \\log n)\\), ולכן נוכל להסיק שלכל פוליגון ניתן למצוא בזמן כמעט לינארי קבוצה של \\(\\lfloor \\frac{n}{3} \\rfloor\\) מצלמות ששומרות עליו.","code":""},{"path":"pol-tringle.html","id":"לחזרה-קריאה-בספר-הלימוד","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"3.2.5 לחזרה: קריאה בספר הלימוד","text":"בסעיפים הקודמים של חלק זה ראינו הוכחות מלאות לקיום של שילוש ומשפט הגלריה לאמנות. לשם השלמות של החומר באתר, ולמי שמעוניין בחזרה ובהרחבה, ניתן לקרוא כאן את הסעיף המתאים בספר הלימוד.","code":""},{"path":"pol-tringle.html","id":"קראו-את-סעיף-3.1-בספר-עמודים-4649.","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"קראו את סעיף 3.1 בספר (עמודים 46–49).","text":"","code":""},{"path":"pol-tringle.html","id":"אלגוריתם-לשילוש-של-פוליגון","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"3.3 אלגוריתם לשילוש של פוליגון","text":"","code":""},{"path":"pol-tringle.html","id":"איך-נחשב-שילוש","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"3.3.1 איך נחשב שילוש?","text":"בחלק הקודם ראינו ששילוש קיים תמיד, אך כדי להשתמש בו, נרצה גם להראות אלגוריתם שיודע למצוא שילוש ביעילות.שימו לב שההוכחות לקיום אלכסון ושילוש שראינו בחלק הקודם הן קונסטרוקטיביות, כלומר הן מציגות דרך למציאה של אלכסון ושילוש של פוליגון פשוט בעל \\(n\\) קודקודים בזמן \\(O(n^2)\\). נסו לחשוב בעצמכם: השתמשו בהוכחות המשפטים לקיום אלכסון ושילוש כדי להראות אלגוריתם המוצא שילוש של פוליגון פשוט בעל \\(n\\) קודקודים בזמן \\(O(n^2)\\). (התשובה מופיעה בפסקה הראשונה של פרק 3.2 בספר הלימוד).","code":""},{"path":"pol-tringle.html","id":"האם-ניתן-למצוא-אלגוריתם-שילוש-יעיל-יותר","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"האם ניתן למצוא אלגוריתם שילוש יעיל יותר?","text":"בהחלט ניתן למצוא שילוש ביעילות עבור משפחות מסוימות של פוליגונים מיוחדים. למשל, אם הפוליגון שלנו קמור, נוכל לבחור קודקוד באופן שרירותי, ולהוסיף את כל האלכסונים המחברים אותו לכל הקודקודים שהם לא שכנים שלו. זמן הריצה יהיה לינארי, כלומר \\(O(n)\\).לפיכך, גישה אפשרית למציאת שילוש במקרה הכללי תהיה כזו: נחלק את הפוליגון שלנו לחלקים שניתן לשלש ביעילות, ולאחר מכן נשלש כל חלק בנפרד.בסעיפים הבאים נראה אלגוריתם למציאת שילוש שמשתמש בגישה הזו, על ידי חלוקה של הפוליגון לחלקים מונוטוניים. זמן הריצה של האלגוריתם הוא \\(O(n \\log n)\\), והוא משתמש ב-\\(O(n)\\) זיכרון.הגדרה: פוליגון מונוטוני פוליגון פשוט \\(P\\) נקרא מונוטוני ביחס לישר \\(\\ell\\) אם לכל ישר \\(\\ell'\\) שמאונך ל-\\(\\ell\\), החיתוך של \\(\\ell'\\)עם הפוליגון הוא קשיר. במילים אחרות, \\(\\ell'\\cap P\\) יכול להיות קטע, נקודה או הקבוצה הריקה.פוליגון שהוא מונוטוני ביחס לציר ה-\\(y\\) נקרא \\(y\\)-מונוטוני, ופוליגון שהוא מונוטוני ביחס לציר ה-\\(x\\) נקרא \\(x\\)-מונוטוני.באיור משמאל מופיע פוליגון \\(y\\)-מונוטוני: החיתוך שלו עם כל ישר המקביל לציר ה-\\(x\\) (מאונך לציר ה-\\(y\\)) הוא קשיר. אילו מהפוליגונים הבאים הם \\(y\\)-מונוטוניים? ואילו \\(x\\)-מונוטוניים?(א) הוא גם \\(y\\)-מונוטוני וגם \\(x\\)-מונוטוני (ד) הוא רק \\(x\\)-מונוטוני (ה) הוא רק \\(y\\)-מונוטוני","code":""},{"path":"pol-tringle.html","id":"חלוקה-לפוליגונים-מונוטוניים","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"3.3.2 חלוקה לפוליגונים מונוטוניים","text":"בסרטון הבא נדבר על אלגוריתם MakeMonotone, המוצא חלוקה של פוליגון \\(P\\) בעל \\(n\\) קודקודים לפוליגונים \\(y\\)-מונוטוניים. האלגוריתם משתמש בשיטת הישר הסורק שלמדנו בחלק השני של פרק 2, ולכן מומלץ להיזכר בשיטה ולוודא קודם שהבנתם את הפרטים שלה.","code":""},{"path":"pol-tringle.html","id":"צפו-בסרטון-הבא.-5","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"צפו בסרטון הבא.","text":"\nהנה התשובה לשאלה האחרונה שנשאלה בסרטון: הייצוג של \\(P\\) ותת-הפוליגונים המונוטוניים בחלוקה שלו יהיה בעזרת מבנה DCEL, כפי שלמדנו בחלק השלישי של פרק 2.כיצד נממש את האלגוריתם הסורק ביעילות? על אופן המימוש ופרטי האלגוריתם MakeMonotone תקראו בסעיף 3.2 בספר הלימוד. זמן הריצה של האלגוריתם הוא \\(O(n \\log n)\\), והוא משתמש ב-\\(O(n)\\) זיכרון.","code":""},{"path":"pol-tringle.html","id":"קראו-את-סעיף-3.2-בספר-עמודים-4955.","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"קראו את סעיף 3.2 בספר (עמודים 49–55).","text":"","code":""},{"path":"pol-tringle.html","id":"שילוש-של-פוליגון-מונוטוני","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"3.3.3 שילוש של פוליגון מונוטוני","text":"לאחר שראינו כיצד ניתן לחלק פוליגון פשוט בעל \\(n\\) קודקודים לפוליגונים \\(y\\)-מונוטוניים בזמן \\(O(n \\log n)\\), נותר לנו להראות שכל פוליגון מונוטוני ניתן לשילוש בזמן לינארי.","code":""},{"path":"pol-tringle.html","id":"צפו-בסרטון-הבא.-6","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"צפו בסרטון הבא.","text":"\nבסעיף 3.3 בספר הלימוד תקראו בפירוט רב יותר על האלגוריתם TriangulateMonotonePolygons שתואר בסרטון. זמן הריצה של האלגוריתם הזה הוא אכן \\(O(n)\\), ומכאן שקיבלנו אלגוריתם שילוש בזמן \\(O(n\\log n)\\) – שיפור משמעותי לעומת האלגוריתם בזמן ריבועי (\\(O(n^2)\\)) המבוסס על ההוכחה לקיום שילוש. למעשה, נוכל להסיק שכל מפה מישורית בעלת \\(n\\) קודקודים ניתנת לשילוש בזמן \\(O(n\\log n)\\)!","code":""},{"path":"pol-tringle.html","id":"קראו-את-סעיף-3.3-בספר-עמודים-5558.","chapter":"יחידה 3 שילושי פוליגונים ובעיית הגלריה לאמנות","heading":"קראו את סעיף 3.3 בספר (עמודים 55–58).","text":"","code":""},{"path":"linear-prog.html","id":"linear-prog","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","text":"","code":""},{"path":"linear-prog.html","id":"preface-4","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"4.1 הקדמה","text":"","code":""},{"path":"linear-prog.html","id":"contents-4","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"4.1.1 מה ביחידה?","text":"יחידה זו מקבילה לפרק הרביעי בספר הלימוד.המושגים והרעיונות העיקריים שיילמדו ביחידה:מציאת החיתוך של חצאי מישורים.בעיית תכנון לינארי במישור.אלגוריתם אינקרמנטלי-רנדומי, וניתוחו בשיטת אנליזה לאחור.למידה מהנה!","code":""},{"path":"linear-prog.html","id":"molding-prob","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"4.1.2 בעיית הייצור באמצעות תבניות","text":" חפצים רבים שמשמשים אותנו ביום-יום מיוצרים בתהליך אוטומטי שבו יוצקים נוזל לתבנית רב-פעמית, ולאחר שהוא מתמצק שולפים אותו החוצה מבלי לפגוע בתבנית. מובן שלא כל צורה תלת-ממדית ניתנת לייצור באופן הזה, למשל צורה כדורית. נניח שנתון לנו פוליהדרון (גוף תלת-ממדי המורכב מפאות שהן פוליגונים, צלעות שהן קווים ישרים, וקודקודים שהם נקודות), איך נדע אם ניתן לייצר אותו על ידי יציקה לתבנית רב-פעמית?","code":""},{"path":"linear-prog.html","id":"קראו-את-ההקדמה-לפרק-4-בספר-הלימוד-עמודים-6364.","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"קראו את ההקדמה לפרק 4 בספר הלימוד (עמודים 63–64).","text":"","code":""},{"path":"linear-prog.html","id":"geom-model","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"4.1.3 מודל גיאומטרי לבעיה","text":" בהינתן פוליהדרון \\(P\\) בעל \\(n\\) פאות שהן פוליגונים, נרצה לתכנן תבנית שתאפשר לנו לייצר את \\(P\\). כדי שנוכל לחלץ את \\(P\\) מהתבנית במשיכה בכיוון אחד, נדרוש שבדיוק אחת מהפאות של \\(P\\) תהיה מוכלת בפאה העליונה של התבנית. התבנית חייבת להתאים לצורה של \\(P\\), אבל את הפאה העליונה נוכל לבחור מתוך \\(n\\) הפאות של \\(P\\), ולכן יש לכל היותר \\(n\\) תבניות אפשריות. מובן שלא כל תבנית תאפשר לנו לחלץ את \\(P\\).(לשם הפשטות, האיורים מציגים חתך עומק של התבנית והפוליהדרון בדו-ממד. הניחו שכל חתכי העומק של הפוליהדרון זהים לזה שבאיור.)שלוש התבניות השמאליות.אובייקט שניתן לייצור על ידי יציקה לתבנית רב-פעמית נקרא castable. כדי לבדוק אם \\(P\\) הוא castable, נבדוק את כל האפשרויות לתבנית עבורו. בהינתן אחת מהאפשרויות האלה (כלומר בהינתן הפאה של \\(P\\) שתהיה מוכלת בפאה העליונה של התבנית), נרצה לקבוע אם קיים כיוון (וקטור) \\(\\overrightarrow{d}\\) כך שניתן לשלוף את \\(P\\) מהתבנית על ידי משיכה בכיוון \\(\\overrightarrow{d}\\). שימו לב שלכל פאה \\(f\\) של \\(P\\) שהיא לא הפאה העליונה, יש פאה מתאימה \\(\\hat{f}\\) בתבנית. באופן אינטואיטיבי, כדי שנוכל לחלץ את \\(P\\) מהתבנית, כל פאה \\(f\\) של \\(P\\) צריכה לנוע בכיוון שהוא “נגדי” או לכל היותר “מאונך” ל-\\(\\hat{f}\\). באופן פורמלי, נוכל להסתכל על הנורמל (כלפי חוץ מהפוליגון) של פאה \\(f\\), ונסמן אותו \\(\\overrightarrow{\\mu}( f )\\). הנורמל של \\(f\\) הוא וקטור המאונך למישור המכיל את \\(f\\). נוכל להראות שהפאה המתאימה \\(\\hat{f}\\) של התבנית, מאפשרת תנועה רק בכיוון \\(\\overrightarrow{d}\\) שבו הזווית (הקטנה) שנוצרת בין \\(\\overrightarrow{d}\\) ל-\\(\\overrightarrow{\\mu}( f )\\) היא לפחות \\(90 ^\\circ\\).טענה זו מובילה להגדרת הבעיה באופן הבא: יש למצוא כיוון \\(\\overrightarrow{d}\\), כך שהזווית שלו עם הנורמלים של כל אחת מהפאות של \\(P\\) היא לפחות \\(90 ^\\circ\\). כל פאה של P היא בעצם אילוץ על הכיוון \\(\\overrightarrow{d}\\). כל אילוץ כזה ניתן לתאר על ידי משוואה לינארית: הזווית בין \\(\\overrightarrow{d}\\) ל-\\(\\overrightarrow{\\mu}( f )\\) גדולה או שווה ל-\\(90 ^\\circ\\) אם ורק אם \\(\\overrightarrow{d} \\cdot \\overrightarrow{\\mu}( f ) \\le 0\\). נוכל לייצג את \\(\\overrightarrow{d}\\) על ידי נקודה במישור \\(z = 1\\), כלומר \\(\\overrightarrow{d}\\) יהיה הווקטור \\((x,y,1)\\) שמתחיל בראשית הצירים ומסתיים בנקודה \\((x, y, 1 )\\). לכן עבור \\(\\overrightarrow{\\mu}( f ) =( \\mu_x, \\mu_y, \\mu_z )\\) נקבל אילוץ שהוא בעצם משוואה של חצי מישור: \\(\\mu_x \\cdot x + \\mu_y \\cdot y + \\mu_z \\le 0\\).לפיכך קיים כיוון \\(\\overrightarrow{d}\\) המאפשר לשלוף את \\(P\\) מהתבנית, אם ורק אם קיימת נקודה \\(( x, y )\\) המקיימת את כל האילוצים, כלומר נקודה שנמצאת בחיתוך של אוסף חצאי המישורים המתאימים להם. בעצם המרנו את הבעיה המקורית לבעיה גיאומטרית במישור: בהינתן אוסף של n חצאי מישורים, יש למצוא נקודה בחיתוך שלהם, אם החיתוך לא ריק. בהמשך נראה כיצד ניתן לפתור את הבעיה הזו בזמן צפוי \\(O ( n )\\), ולכן נוכל לפתור את בעיית הייצור באמצעות תבניות בזמן צפוי \\(O ( n^2 )\\).","code":""},{"path":"linear-prog.html","id":"קראו-את-סעיף-4.1-בספר-הלימוד-עמודים-6466.","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"קראו את סעיף 4.1 בספר הלימוד (עמודים 64–66).","text":"","code":""},{"path":"linear-prog.html","id":"line-int","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"4.2 חיתוך של חצאי מישורים","text":"","code":""},{"path":"linear-prog.html","id":"div-con-alg","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"4.2.1 אלגוריתם בשיטת הפרד ומשול","text":"בחלק הקודם ראינו כיצד ניתן להמיר את הבעיה של ייצור באמצעות תבניות לבעיה של מציאת נקודה כלשהי המספקת אוסף של אילוצים לינאריים בשני משתנים, או לחלופין לבעיה גיאומטרית של מציאת נקודה כלשהי בחיתוך של אוסף חצאי מישורים. החיתוך של אוסף חצאי מישורים הוא תחום קמור, אך הוא אינו חייב להיות חסום. הנה דוגמה לתחום קמור שאינו חסום (מימין), ותחום קמור חסום (משמאל).לפני שנדבר על הבעיה של מציאת נקודה כלשהי בחיתוך, נראה קודם כיצד ניתן למצוא את קבוצת כל הנקודות בחיתוך. בחלקו הראשון של סעיף 4.2 בספר הלימוד תקראו על אלגוריתם IntersectHalfPlanes, המקבל כקלט אוסף \\(H\\) של חצאי מישורים, ומחשב את התחום הקמור שהוא החיתוך שלהם. זהו אלגוריתם הפועל בשיטת הפרד ומשול: הוא מחלק את הקבוצה \\(H\\) באופן שרירותי לשתי קבוצות, מחשב את החיתוך של כל אחת מהן באופן רקורסיבי, ולאחר מכן מחשב את החיתוך של שני התחומים הקמורים שהתקבלו בעזרת פרוצדורה נוספת בשם IntesectConvexRegions.את אלגוריתם IntersectConvexRegions לחישוב החיתוך בין תחומים קמורים נתאר בהמשך חלק זה.","code":""},{"path":"linear-prog.html","id":"קראו-את-חלקו-הראשון-של-סעיף-4.2-בספר-הלימוד-עמודים-6668.","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"קראו את חלקו הראשון של סעיף 4.2 בספר הלימוד (עמודים 66–68).","text":"","code":""},{"path":"linear-prog.html","id":"convex-int","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"4.2.2 חיתוך של פוליגונים קמורים","text":"בחלק השלישי של יחידה 2 (המדבר על פעולות בוליאניות), ראינו שבעזרת האלגוריתם MapOverlay ניתן לחשב את החיתוך של שני פוליגונים (לא בהכרח קמורים) בזמן \\(O((n+k)\\log n)\\), כאשר \\(k\\) הוא מספר נקודות חיתוך. מהו המספר המקסימלי האפשרי של נקודות חיתוך בין צלעות של שני פוליגונים קמורים שלכל אחד מהם \\(n\\) קודקודים? נסו לצייר שני פוליגונים קמורים עם מספר מקסימלי של נקודות חיתוך.המספר המקסימלי האפשרי של נקודות חיתוך בין שני פוליגונים קמורים \\(C_1\\) ו-\\(C_2\\) בעלי \\(n\\) נקודות כל אחד, הוא \\(2 n\\). הסיבה היא שכל צלע \\(e\\) של \\(C_1\\) יכולה לחתוך לכל היותר שתי צלעות של \\(C_2\\): אילו \\(e\\) הייתה חותכת יותר משתי צלעות של \\(C_2\\), אז \\(C_2\\) לא היה יכול להיות קמור.הנה דוגמה למשפחה של זוגות פוליגונים קמורים \\(C_1\\) ו-\\(C_2\\) כך שכל צלע של \\(C_1\\) חותכת בדיוק שתי צלעות של \\(C_2\\): אלו זוגות של פוליגונים משוכללים בעלי \\(n\\) צלעות המסובבים בזווית שונה סביב המרכז.אם נשתמש באלגוריתם MapOverlay עבור מציאת החיתוך בין פוליגונים קמורים, זמן הריצה יהיה \\(O ( n \\log n )\\), כי כמו שראינו בשאלה למעלה, \\(k \\le 2 n\\). לכן, לפי שיטת האב (Master Theorem), זמן הריצה הכולל עבור אלגוריתם IntersectHalfPlanes יהיה \\(O ( n \\log^2 n )\\). האם בכל זאת ניתן לחשב את החיתוך באופן יעיל יותר עבור תחומים קמורים? התשובה היא כן! (זכרו שתמיד נשאף לזמן ריצה לינארי, או \\(O ( n \\log n )\\).)אלגוריתם MapOverlay משתמש בשיטת הישר הסורק, ולזמן הריצה שלו תורמים שני גורמים. הגורם הראשון הוא \\(( n + k )\\) – מספר המאורעות. הגורם השני הוא \\(\\log n\\) – הזמן לטיפול במאורע, כלומר עדכון הסטטוס (שיכול להכיל \\(O ( n )\\) קטעים), והוספת מאורע לתור המאורעות בכל פעם שמוצאים נקודת חיתוך. אך האם זהו המצב גם עבור פוליגונים קמורים?למעשה, עבור פוליגונים קמורים יהיו לכל היותר ארבע צלעות שחותכות את הישר הסורק בכל רגע נתון. נוכל לראות זאת אם נחלק כל פוליגון לשרשרת ימנית ולשרשרת שמאלית (מהקודקוד הגבוה ביותר לקודקוד הנמוך ביותר). כל שרשרת כזאת היא \\(y\\)-מונוטונית, ולכן חותכת את הישר הסורק (האופקי) פעם אחת בלבד.עובדה זו מובילה לכך שהטיפול בכל מאורע יתבצע בזמן קבוע, וכבר לא יהיה לנו צורך במאורעות שהם נקודות חיתוך. באופן זה נקבל אלגוריתם למציאת חיתוך של פוליגונים קמורים עם זמן ריצה של \\(O ( n )\\) בלבד, ובכך נשפר את זמן הריצה עבור חיתוך חצאי מישורים ל-\\(O ( n \\log n )\\).","code":""},{"path":"linear-prog.html","id":"קראו-את-חלקו-השני-של-סעיף-4.2-בספר-הלימוד-עמודים-6871.","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"קראו את חלקו השני של סעיף 4.2 בספר הלימוד (עמודים 68–71).","text":"","code":""},{"path":"linear-prog.html","id":"planar-LP","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"4.3 תכנון לינארי במישור","text":"","code":""},{"path":"linear-prog.html","id":"what-is-LP","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"4.3.1 מהו תכנון לינארי?","text":"תכנון לינארי הוא בעיית אופטימיזציה של ביטוי לינארי, תחת אוסף של אילוצים לינאריים. זוהי בעיה מרכזית בתחום של חקר ביצועים, שבו בעיות אופטימיזציה רבות ניתנות לתיאור באמצעות תוכנית לינארית. הבעיה צברה פופולריות רבה משום שהיא שימושית בתחומים רבים נוספים, ולכן במשך השנים נעשו מאמצים רבים למציאת פתרונות יעילים ומהירים עבורה. בסרטון הבא נראה דוגמה לתוכנית כזאת, נזכיר חלק מהכלים הקיימים כיום לפתרון בעיות תכנון לינארי, ונדבר על הקשר בין תכנון לינארי במישור לבעיית החיתוך של חצאי מישורים.","code":""},{"path":"linear-prog.html","id":"צפו-בסרטון-הבא","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"צפו בסרטון הבא:","text":"","code":""},{"path":"linear-prog.html","id":"קראו-את-חלקו-הראשון-של-סעיף-4.3-בספר-הלימוד-עמודים-7172.","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"קראו את חלקו הראשון של סעיף 4.3 בספר הלימוד (עמודים 71–72).","text":"","code":""},{"path":"linear-prog.html","id":"inc-alg","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"4.3.2 אלגוריתם אינקרמנטלי","text":"בחלקו השני של סעיף 4.3 בספר הלימוד מתואר אלגוריתם אינקרמנטלי בשם 2DBoundedLP, לפתרון של תוכנית לינארית בשני ממדים. האלגוריתם פועל תחת ההנחה שהתוכנית הלינארית חסומה. לכן בשלב הזה נניח כי ניתן למצוא ולהוסיף לתוכנית הלינארית שני חצאי מישורים \\(m_1, m_2\\), שיגרמו לכך שהתוכנית תהיה חסומה בכיוון \\(\\overrightarrow{c}\\), אך הם לא ישנו את הפתרון האופטימלי במקרה שבו התוכנית חסומה. בהמשך נראה כיצד להימנע מהנחה זו ולקבוע מראש אם התוכנית חסומה או לא.האלגוריתם האינקרמנטלי מתחיל מפתרון עבור \\(C_0 = m_1 \\cap m_2\\), ואז מוסיף את יתר חצאי המישורים \\(h_1, \\dots, h_n\\) לפי הסדר. בשלב ה-\\(\\)-י, האלגוריתם ימצא קודקוד v_i שהוא הנקודה שממקסמת את פונקציית המטרה בחיתוך \\(C_i = m_1 \\cap m_2 \\cap h_1 \\cap h_2 \\cap \\dots \\cap h_i\\). הרעיון הוא שבכל שלב מצמצמים את התחום הפיזיבילי, ויש שתי אפשרויות עבור \\(v_i\\):אם \\(v_{-1}\\h_i\\) (כמו באיור הימני למטה), אז \\(h_i\\) לא שינה את הפתרון האופטימלי ולכן \\(v_i = v_{-1}\\). אחרת, \\(h_i\\) גרם לכך ש-\\(C_i\\) כבר לא כולל את \\(v_{-1}\\) (כמו באיור השמאלי למטה). בספר הלימוד תראו הוכחה לכך שבמקרה זה, אם \\(C_i\\) לא ריק, אז \\(v_i\\) בהכרח נמצא על הישר \\(\\ell_i\\) המגדיר את חצי המישור \\(h_i\\).למרבה האכזבה, זמן הריצה המתקבל מאלגוריתם זה הוא \\(O(n^2)\\), מכיוון שבמקרה השני נצטרך לחשב את החיתוך של \\(\\ell_i\\) עם חצאי המישורים \\(m_1, m_2, h_1, \\dots, h_{-1}\\). לכן במקרה הגרוע, זמן הריצה עבור השלב ה-\\(\\) יהיה \\(O()\\). כמה פעמים יתעדכן הפתרון? נסו לחשוב על המקרה הגרוע ביותר: כמה פעמים לכל היותר יכול לקרות המקרה השני, שבו נצטרך לעדכן את \\(v_i\\) בזמן \\(O()\\)?(התשובה נמצאת בפסקה האחרונה של סעיף 4.3 בספר הלימוד.)בהמשך נראה כיצד בחירה רנדומית של הסדר שבו האלגוריתם מוסיף את חצאי המישורים מובילה לתוחלת זמן ריצה לינארית.","code":""},{"path":"linear-prog.html","id":"קראו-את-חלקו-השני-של-סעיף-4.3-בספר-הלימוד-עמודים-7376.","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"קראו את חלקו השני של סעיף 4.3 בספר הלימוד (עמודים 73–76).","text":"","code":""},{"path":"linear-prog.html","id":"rand-alg","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"4.3.3 אלגוריתם רנדומי","text":"כמו שהובטח בחלקים הקודמים, תכנון לינארי במישור אכן ניתן לפתרון בזמן צפוי של \\(O( n )\\), בעזרת האלגוריתם 2DRandomizedBoundedLP שנציג בחלק זה. זהו כמובן אלגוריתם רנדומי, והוא זהה כמעט לחלוטין לאלגוריתם האינקרמטלי שהוצג בסעיף הקודם: ההבדל היחיד הוא בשורה השנייה של האלגוריתם, שבה מחשבים פרמוטציה אקראית של חצאי המישורים בעזרת פרוצדורה בשם RandomPermutation.בסרטון הבא נראה כיצד שינוי זה, שלכאורה נראה שאינו משפיע על האלגוריתם, מוביל לתופעה מעניינת ביותר: תוחלת זמן ריצה תהיה לינארית. כלומר כאשר מגרילים את הסדר שבו האלגוריתם האינקרמנטלי בוחן את חצאי המישורים, מקבלים שבממוצע על פני כל הפרמוטציות האפשריות, זמן הריצה הוא \\(O( n )\\).","code":""},{"path":"linear-prog.html","id":"צפו-בסרטון-הבא.-7","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"צפו בסרטון הבא.","text":"","code":""},{"path":"linear-prog.html","id":"קראו-את-סעיף-4.4-בספר-הלימוד-עמודים-7679.","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"קראו את סעיף 4.4 בספר הלימוד (עמודים 76–79).","text":"","code":""},{"path":"linear-prog.html","id":"unbounded-LP","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"4.3.4 תוכנית לינארית שאינה חסומה","text":"בסעיפים הקודמים נמנענו מהטיפול במקרה שבו התוכנית הלינארית אינה חסומה, על ידי הוספת שני אילוצים מלאכותיים, \\(m_1,m_2\\). בחלק זה נראה כיצד ניתן לבדוק אם תוכנית לינארית היא חסומה; ואם היא לא חסומה, נראה כיצד למצוא שני אילוצים \\(h_1,h_2\\) שישמשו אותנו לאתחול האלגוריתם במקום \\(m_1,m_2\\).אם התוכנית הלינארית אינה חסומה, אז קיימת קרן \\(\\rho\\) המוכלת כולה באיזור הפיזיבילי \\(C\\). קרן זו מוגדרת על ידי נקודה p וכיוון \\(\\overrightarrow{d}\\). נשים לב שפונקציית המטרה מקבלת ערכים הולכים וגדלים לאורך הקרן \\(\\rho\\) אם ורק אם הזווית (הקטנה) בין הווקטור \\(\\overrightarrow{d}\\) לווקטור המטרה \\(\\overrightarrow{c}\\) קטנה מ-\\(90 ^\\circ\\). נוסף על כך, לכל חצי מישור \\(h\\), הזווית בין \\(\\overrightarrow{d}\\) לנורמל \\(\\overrightarrow{\\mu}( h )\\) של h (בכיוון הצד הפיזיבילי) היא לכל היותר \\(90^\\circ\\). ניתן לראות דוגמה לכך בציור למטה. כמו כן, אוסף האילוצים שעבורם \\(\\overrightarrow{\\mu}( h )\\) מאונך ל-\\(\\overrightarrow{d}\\) (\\(h_1, h_5\\) באיור), חייב להיות פיזיבילי.שימו לב שהבעיה של מציאת הקרן \\(\\rho\\) דומה לבעיית הייצור באמצעות תבניות שראינו בחלק הראשון של יחידה זו. מכיוון שכאן הבעיה מוגדרת בשני ממדים, נוכל לפתור אותה על ידי תכנון לינארי בממד אחד, בזמן \\(O( n )\\). בסעיף 4.5 בספר הלימוד תוכלו לקרוא תיאור מפורט של פתרון זה.","code":""},{"path":"linear-prog.html","id":"קראו-את-סעיף-4.5-בספר-הלימוד-עמודים-7982.","chapter":"יחידה 4 תכנון לינארי וחיתוך של חצאי מישורים","heading":"קראו את סעיף 4.5 בספר הלימוד (עמודים 79–82).","text":"פתרון אלטרנטיבי: דרך אחרת למציאת הקרן \\(\\rho\\), היא להתבונן בחצי המישור \\(h_i\\) שעבורו הזווית בין \\(\\overrightarrow{c}\\) ל-\\(\\overrightarrow{\\mu}( h_i )\\) היא הגדולה ביותר. החיתוך בין הישר לבין חצי מישור אחר \\(h_j\\) הוא קרן \\(\\rho\\) על \\(\\ell_i\\). אם לכל \\(j \\neq \\) הזווית בין הקרן \\(\\rho\\) שמוגדרת על ידי \\(\\ell_1 \\cap h_j\\) לבין \\(\\overrightarrow{c}\\) קטנה או שווה ל-\\(90^\\circ\\), אז הקרן שראשיתה בנקודה הקיצונית ביותר בכיוון \\(\\overrightarrow{c}\\) היא העדות לכך ש-\\(C\\) אינו חסום ביחס ל-\\(\\overrightarrow{c}\\). אחרת, אם עבור \\(h_j\\) כלשהו הזווית בין \\(\\rho\\) ל-\\(\\overrightarrow{c}\\) גדולה מ-\\(90^\\circ\\), אז חצאי המישורים \\(h_i\\) ו-\\(h_j\\) הם ההוכחה לכך ש-\\(C\\) חסום ביחס ל-\\(\\overrightarrow{c}\\). הסיבה לכך היא שהזווית בין \\(\\overrightarrow{c}\\) ל-\\(\\overrightarrow{\\mu}( h_j )\\) קטנה יותר מהזווית בין \\(\\overrightarrow{c}\\) ל-\\(\\overrightarrow{\\mu}( h_i )\\), ולכן הזווית בין \\(h_j\\) ל-\\(\\overrightarrow{c}\\) גדולה מ-\\(90^\\circ\\).","code":""},{"path":"orthogonal-range-seach.html","id":"orthogonal-range-seach","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"יחידה 5 חיפוש בתחומים אורתוגונליים","text":"","code":""},{"path":"orthogonal-range-seach.html","id":"preface-5","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"5.1 הקדמה","text":"","code":""},{"path":"orthogonal-range-seach.html","id":"contents-5","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"5.1.1 מה ביחידה?","text":"יחידה זו מקבילה לפרק החמישי בספר הלימוד.המושגים והרעיונות העיקריים שילמדו ביחידה:בעיית חיפוש בתחומים אורתוגונליים על הישר, במישור ובממדים גבוהים.עצי kd.עצי תחומים.למידה מהנה!","code":""},{"path":"orthogonal-range-seach.html","id":"data-bases","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"5.1.2 חיפוש במסדי נתונים","text":"הייצוג הגיאומטרי של מסד הנתונים נעשה באמצעות אוסף של נקודות במרחב ה-\\(d\\) ממדי: כל רשומה מיוצגת באמצעות נקודה במרחב, כאשר כל שדה של הרשומה מתאים לקואורדינטה. עבור שאילתה המבקשת את אוסף הרשומות הנמצאות בתחום מסוים של ערכים (בשדה אחד או יותר), הייצוג הגיאומטרי הוא תחום אורתוגונלי \\(R\\), כלומר, תיבה \\(d\\)-ממדית מקבילה לצירים. במישור זהו מלבן שצלעותיו מקבילות לצירים, ובמרחב התלת-ממדי זוהי תיבה שפאותיה מקבילות לצירים.בפרק זה נציג שני מבני נתונים לאחסון אוסף \\(P\\) של נקודות במרחב ה-\\(d\\) ממדי, כך שנוכל לענות ביעילות על שאילתות מהסוג הבא: בהינתן תחום אורתוגונלי \\(R\\), אילו מהנקודות של \\(P\\) נמצאות בתוך \\(R\\).","code":""},{"path":"orthogonal-range-seach.html","id":"קראו-את-ההקדמה-לפרק-5-בספר-הלימוד-עמודים-9596.","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"קראו את ההקדמה לפרק 5 בספר הלימוד (עמודים 95–96).","text":"","code":""},{"path":"orthogonal-range-seach.html","id":"on-the-line","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"5.1.3 חיפוש בתחומים על הישר","text":"בעיות רבות בגיאומטריה חישובית נעשות פשוטות הרבה יותר כאשר הן נתונות בממד אחד, ובמחקר התיאורטי מופיעים לעיתים קרובות פתרונות בממד אחד לבעיות מורכבות, כצעד מקדים לפתרונות בממדים גבוהים יותר. לכן, לפני שניגש לפתרון הבעיה של חיפוש בתחומים בשני ממדים או יותר, ננסה קודם להבין כיצד ניתן לפתור את הבעיה עבור אוסף \\(P\\) של נקודות מממד אחד, כלומר אוסף של נקודות שכולן על ישר אחד. שימו לב שהשאילתה על הישר היא פשוט טווח של ערכים, \\(R=[x,x']\\).אפשרות אחת לפתרון היא למיין את נקודות \\(P\\) ולשמור אותן במערך. בהינתן טווח \\([x,x']\\), נמצא בעזרת חיפוש בינארי את הנקודה הראשונה במערך שגדולה מ-\\(x\\) או שווה לו, ואז נעבור על תאי המערך לפי הסדר החל מנקודה זו, ונדווח על נקודות כל עוד הן קטנות מ-\\(x'\\) או שוות לו. זמן השאילתה הוא \\(O(\\log n + k)\\) כאשר \\(k\\) הוא מספר הנקודות בפלט. זמן העיבוד המקדים הוא \\(O( n \\log n)\\) וסיבוכיות המקום היא \\(O(n)\\). לפתרון המשתמש במערך יש שני חסרונות: הוא לא דינמי (כלומר לא ניתן להוסיף או למחוק נקודות), ולא ניתן להכליל אותו לממדים גבוהים. לכן סעיף 5.1 בספר הלימוד מתאר פתרון המשתמש בעץ חיפוש בינארי, שבו הנקודות מופיעות בעלים. כל קודקוד פנימי מכיל את הערך המקסימלי של עלה המופיע בתת-עץ השמאלי שלו. בהינתן עץ חיפוש \\(T\\) וטווח \\([x,x']\\), אלגוריתם השאילתה 1DRangeQuery מוצא את הקודקוד שבו המסלולים מהשורש ל-\\(x\\) ול-\\(x'\\) מתפצלים, ואז מחזיר את כל הנקודות בעלים שנמצאים מימין להמשך המסלול ל-\\(x\\), ואת הנקודות בעלים שנמצאים משמאל להמשך המסלול ל-\\(x'\\). אלו בדיוק הערכים בעץ הנמצאים בין \\(x'\\) ל-\\(x\\).בהמשך יחידה זו נראה שתי דרכים להכללת פתרון זה עבור ממדים גבוהים.","code":""},{"path":"orthogonal-range-seach.html","id":"קראו-את-סעיף-5.1-בספר-הלימוד-עמודים-9699.","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"קראו את סעיף 5.1 בספר הלימוד (עמודים 96–99).","text":"","code":""},{"path":"orthogonal-range-seach.html","id":"in-the-plane","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"5.2 חיפוש בתחומים במישור","text":"","code":""},{"path":"orthogonal-range-seach.html","id":"kd-trees","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"5.2.1 עצי kd","text":"","code":""},{"path":"orthogonal-range-seach.html","id":"צפו-בסרטון-הבא-1","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"צפו בסרטון הבא:","text":"ניתן לבנות עץ kd עבור אוסף של \\(n\\) נקודות בזמן \\(O(n\\log n)\\). סיבוכיות המקום שלו היא \\(O(n)\\), וזמן השאילתה הוא \\(O(\\sqrt{n}+ k)\\), כאשר \\(k\\) הוא גודל הפלט, כלומר מספר הנקודות הנמצאות בתחום הנתון. בסעיף 5.2 מתואר האלגוריתם BuildKdTree שבונה את העץ, ואלגוריתם השאילתה SearchKdTree. קראו בעיון את ניתוח זמן הבנייה, סיבוכיות המקום וזמן השאילתה של עץ הkd.","code":""},{"path":"orthogonal-range-seach.html","id":"קראו-את-סעיף-5.2-בספר-הלימוד-עמודים-99105.","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"קראו את סעיף 5.2 בספר הלימוד (עמודים 99–105).","text":"(TODO)אילו מהנקודות ייבדקו (אך לא בהכרח ידֻווחו) בשורה 2 של האלגוריתם SearchKdTree?אילו מהנקודות ידווחו על ידי הפרוצדורה ReportSubtree?(TODO)","code":""},{"path":"orthogonal-range-seach.html","id":"תחומים-שאינם-מלבניים.","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"תחומים שאינם מלבניים.","text":"שימו לב שניתן להכליל את אלגוריתם השאילתה גם עבור תחומים שאינם מלבניים. כדי שהאלגוריתם יהיה יעיל עבור תחום \\(R\\) שאינו מלבני, התחום חייב להיות מתואר בצורה שתאפשר את שתי הפעולות הבאות בזמן קבוע:לבדוק אם \\(R\\) מכיל נקודה נתונה.לבדוק אם \\(R\\) נחתך עם תחום מלבני המתאים לצומת כלשהו או מכיל תחום כזה.אם \\(R\\) הוא מצולע קמור בעל \\(c\\) צלעות, כיצד נוכל לבצע את הבדיקות האלו? ומה יהיה זמן הריצה שלהן? מה אם \\(R\\) הוא עיגול הנתון על ידי המרכז והרדיוס שלו?","code":""},{"path":"orthogonal-range-seach.html","id":"range-trees","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"5.2.2 עצי תחומים (Range Trees)","text":" בחלק זה נראה מבנה נתונים אחר לחיפוש בתחומים במישור, ושמו עץ תחומים, (range tree). גם הוא הכללה של עץ החיפוש שראינו עבור נקודות על הישר, אך באופן שונה: כאן כל קודקוד פנימי בעץ הממיין את הנקודות לפי קואורדינטת ה-\\(x\\), יכיל מצביע לעץ נוסף הממיין את העלים בתת-עץ שלו לפי קואורדינטת ה-\\(y\\).","code":""},{"path":"orthogonal-range-seach.html","id":"צפו-בסרטון-הבא-2","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"צפו בסרטון הבא:","text":"מבחינת זמן השאילתה, במקרה הגרוע עץ תחומים יעיל הרבה יותר מעץ kd – זמן השאילתה שלו הוא \\(O( \\log^2 n + k)\\) בלבד, לעומת \\(O( \\sqrt{n}+k)\\) בעצי kd. שיפור זה מאלץ אותנו לשלם מעט בסיבוכיות המקום – \\(O( n \\log n)\\) לעומת \\(O( n)\\). בסעיף 5.3 בספר הלימוד מתואר האלגוריתם Build2DRangeTree שבונה את העץ, ואלגוריתם השאילתה 2DRangeQuery. קראו בעיון את ניתוח זמן הבנייה, סיבוכיות המקום וזמן השאילתה של עץ תחומים.","code":""},{"path":"orthogonal-range-seach.html","id":"קראו-את-סעיף-5.3-בספר-הלימוד-עמודים-105109.","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"קראו את סעיף 5.3 בספר הלימוד (עמודים 105–109).","text":"","code":""},{"path":"orthogonal-range-seach.html","id":"שיפור-זמן-השאילתה.","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"שיפור זמן השאילתה.","text":"ניתן לשפר את זמן השאילתה של עץ התחומים בפקטור של \\(\\log n\\), בעזרת שיטה הנקראת Fractional Cascading. זוהי שיטה מתקדמת שאינה חלק מחומר הקורס, והיא מתוארת בסעיף 5.6 בספר הלימוד.","code":""},{"path":"orthogonal-range-seach.html","id":"extensions","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"5.3 הרחבות","text":"","code":""},{"path":"orthogonal-range-seach.html","id":"higher-dim","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"5.3.1 ממדים גבוהים","text":"בשתי הפסקאות האחרונות של סעיף 5.2 בספר הלימוד מתוארת בקצרה בנייה של עציkd בממד \\(d>2\\). עבור \\(d\\) קבוע, זמן הבנייה נשאר \\(O( n \\log n)\\) וסיבוכיות הזיכרון נשארת \\(O( n)\\). לעומת זאת, זמן השאילתה הוא \\(O( n^{1-\\frac{1}{d}}+k)\\), והוא מתקרב ל-\\(O( n)\\) ככל ש-\\(d\\) גדל. בסעיף 5.4 מתוארת הרחבה של עצי תחומים לממד \\(d>2\\). כאן זמן העיבוד המקדים וסיבוכיות המקום הם \\(O( n \\log^{d-1} n)\\), וזמן השאילתה הוא \\(O( \\log^d n +k)\\).","code":""},{"path":"orthogonal-range-seach.html","id":"קראו-את-סעיף-5.4-בספר-הלימוד-עמודים-109110.","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"קראו את סעיף 5.4 בספר הלימוד (עמודים 109–110).","text":"","code":""},{"path":"orthogonal-range-seach.html","id":"general-pos","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"5.3.2 אוסף נקודות כללי","text":"בסעיפים 5.1–5.3 בספר הלימוד אנו מניחים שאין באוסף הנתון שתי נקודות בעלות אותה קואורדינטת \\(x\\) או אותה קואורדינטת \\(y\\). הנחה זו אינה מציאותית, מכיוון ששדות בטבלה עשויים לייצג ערכים בעלי מספר קטן של אפשרויות, כמו גיל או תאריך, ולכן סביר שיהיו נקודות רבות בעלות ערכים זהים באותה קואורדינטה. למרבה המזל, הכללת מבני הנתונים שראינו עבור קלט כללי היא לא משימה קשה, וניתן לעשות זאת על ידי בחירה של סדר לקסיקוגרפי מסוים על הנקודות. תוכלו לקרוא על כך בסעיף 5.5 בספר הלימוד.","code":""},{"path":"orthogonal-range-seach.html","id":"קראו-את-סעיף-5.5-בספר-הלימוד-עמודים-110111.","chapter":"יחידה 5 חיפוש בתחומים אורתוגונליים","heading":"קראו את סעיף 5.5 בספר הלימוד (עמודים 110–111).","text":"","code":""},{"path":"point-location.html","id":"point-location","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"יחידה 6 מיקום נקודה ומפה טרפזית","text":"","code":""},{"path":"point-location.html","id":"preface-6","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"6.1 הקדמה","text":"","code":""},{"path":"point-location.html","id":"contents-6","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"6.1.1 מה ביחידה?","text":"יחידה זו מקבילה לפרק השישי בספר הלימוד.המושגים והרעיונות העיקריים שיילמדו ביחידה:בעיית מיקום נקודה במפה מישורית.מפה טרפזית.בניית מבנה נתונים לשאילתות מיקום נקודה בעזרת אלגוריתם אינקרמנטלי-רנדומי.למידה מהנה!","code":""},{"path":"point-location.html","id":"point-on-map","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"6.1.2 מיקום נקודה במפה","text":"","code":""},{"path":"point-location.html","id":"קראו-את-ההקדמה-לפרק-6-בספר-הלימוד-עמודים-121122.","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"קראו את ההקדמה לפרק 6 בספר הלימוד (עמודים 121–122).","text":"","code":""},{"path":"point-location.html","id":"trapezoidal-map","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"6.2 מפה טרפזית","text":"","code":""},{"path":"point-location.html","id":"naive-sol","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"6.2.1 פתרון נאיבי: חלוקה לרצועות","text":"תהי \\(\\mathcal{S}\\) מפה מישורית, כפי שהגדרנו ביחידה 2: \\(\\mathcal{S}\\) היא שיכון של גרף מישורי במישור, כך שכל הצלעות שלו הן קטעים ישרים. נרצה לבנות מבנה נתונים שיענה על שאילתות מהסוג הבא: בהינתן נקודה \\(q\\) במישור, מצא את הפאה שבה \\(q\\) נמצאת. שימו לב שכדי למצוא את הפאה שבה \\(q\\) נמצאת, מספיק לבדוק למשל איזו צלע של \\(\\mathcal{S}\\) הנקודה \\(q\\) “רואה” מעליה. לכן בחלק הראשון של סעיף 6.1 בספר הלימוד מתואר פתרון נאיבי ופשוט לבעיה, על ידי חלוקה של המפה לרצועות (slabs): נעביר ישר אנכי דרך כל אחד מהקודקודים של \\(\\mathcal{S}\\). האזור שנמצא בין שני ישרים עוקבים כאלו הוא רצועה אנכית. בהינתן שמספר הקודקודים במפה \\(\\mathcal{S}\\) הוא n, ניתן למצוא את הרצועה שבה נמצאת נקודה נתונה \\(q\\) בזמן \\(O (\\log n )\\) על ידי חיפוש בינארי. כל רצועה “נחתכת” על ידי לכל היותר \\(n\\) צלעות של \\(\\mathcal{S}\\). הצלעות כמובן אינן חותכות זו את זו, ואין קודקודים של \\(\\mathcal{S}\\) בתוך הרצועה. לכן נוכל לשמור את רשימת הצלעות האלו בסדר ממוין, ואז למצוא את הצלע שהנקודה \\(q\\) “רואה” מעליה על ידי חיפוש בינארי, כלומר שוב \\(O (\\log n )\\).בדרך זו, זמן השאילתה שנקבל הוא \\(O (\\log n )\\). אך מהו גודל המבנה וזמן העיבוד המקדים? באיור למטה ניתן לראות דוגמה למקרה שבו גודל המבנה הוא \\(\\Theta ( n^2 )\\) (מדוע?).","code":""},{"path":"point-location.html","id":"קראו-את-חלקו-הראשון-של-סעיף-6.1-בספר-הלימוד-עמודים-122124.","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"קראו את חלקו הראשון של סעיף 6.1 בספר הלימוד (עמודים 122–124).","text":"","code":""},{"path":"point-location.html","id":"פירוק-לטרפזים","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"6.2.2 פירוק לטרפזים","text":"שימו לב שהחלוקה לרצועות שראינו בעמוד הקודם יוצרת מפה מישורית \\(\\mathcal{S'}\\) שבה כל פאה היא טרפז או משולש (או פאה אינסופית דמוית טרפז/משולש). המפה \\(\\mathcal{S'}\\) היא עידון (refinement) של המפה המקורית \\(\\mathcal{S}\\), כלומר כל פאה של \\(\\mathcal{S'}\\) מוכלת לחלוטין בפאה של \\(\\mathcal{S}\\), ולכן אם מצאנו שנקודת השאילתה נמצאת בפאה מסוימת של \\(\\mathcal{S'}\\), נוכל לדעת לאיזו פאה של \\(\\mathcal{S}\\) היא שייכת. העידון בעזרת חלוקה לרצועות מוביל למבנה נתונים בגודל ריבועי (במקרה הגרוע), ולכן אינו מעשי. בחלק זה נראה עידון אחר שסיבוכיות הזיכרון שלו לא תהיה גדולה בהרבה מזו של \\(\\mathcal{S}\\), ושעדיין יאפשר לנו לענות על שאילתות מיקום נקודה בקלות יחסית.","code":""},{"path":"point-location.html","id":"צפו-בסרטון-הבא.-8","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"צפו בסרטון הבא.","text":" מי ה-\\(leftp\\) של כל אחד מהטרפזים המסומנים באיור?(TODO)","code":""},{"path":"point-location.html","id":"הנחת-מצב-כללי.","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"הנחת מצב כללי.","text":"בשיטת הפירוק לטרפזים אנחנו מניחים שבאוסף הקטעים הנתון אין שתי נקודות קצה בעלות אותה קואורדינטת \\(x\\). הנחה זו אינה ריאלית, אך כפי שכבר ראינו בעבר, קיימות מספר שיטות המאפשרות לנו לטפל במצב לא כללי – למשל סיבוב המישור או קביעת סדר לקסיקוגרפי. הדיון בפתרונות אלו עבור המבנה של מפת טרפזים מופיע בסעיף 6.3 בספר הלימוד.\\(\\Theta(n)\\)","code":""},{"path":"point-location.html","id":"לחזרה-קראו-את-חלקו-השני-של-סעיף-6.1-בספר-הלימוד-עמודים-124128.","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"לחזרה: קראו את חלקו השני של סעיף 6.1 בספר הלימוד (עמודים 124–128).","text":"","code":""},{"path":"point-location.html","id":"point-location-queries","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"6.3 שאילתות מיקום נקודה","text":"","code":""},{"path":"point-location.html","id":"the-data-structure","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"6.3.1 מבנה הנתונים","text":"יהי \\(\\mathcal{S}\\) אוסף של \\(n\\) קטעים במצב כללי שאינם נחתכים.ניתן לבנות את המפה הטרפזית \\(\\mathcal{T}(\\mathcal{S})\\) בקלות יחסית על ידי שימוש בשיטת הישר הסורק (חשבו כיצד). הבעיה היא שבשיטה זו לא נוכל לבנות מבנה נתונים התומך בשאילתות מיקום נקודה, שהוא המטרה המרכזית שלנו ביחידה זו. איך ייראה מבנה נתונים כזה?בחלק זה נתאר את מבנה החיפוש \\(\\mathcal{D}\\) שיאפשר לנו לבצע שאילתות מיקום נקודה במפה הטרפזית \\(\\mathcal{D}\\). בהמשך היחידה נראה אלגוריתם אינקרמטלי-רנדומי שבונה את המפה הטרפזית \\(\\mathcal{T}(\\mathcal{S})\\) ואת מבנה הנתונים \\(\\mathcal{D}\\) גם יחד.מבנה הנתונים \\(\\mathcal{D}\\) יהיה גרף מכוון חסר מעגלים (DAG), שבו שלושה סוגי צמתים:צומת (פנימי) x – מתאים לנקודת קצה של קטע מ-\\(\\mathcal{S}\\) (מסומן בעיגול לבן).צומת (פנימי) y – מתאים לקטע מ-\\(\\mathcal{S}\\) (מסומן בעיגול אפור).עלה – מתאים לטרפז במפה \\(\\mathcal{T}(\\mathcal{S})\\) (מסומן בריבוע).נוסף על כך, לגרף יש שורש יחיד ובדיוק עלה אחד לכל טרפז במפה \\(\\mathcal{D}\\). באיור למשל, לעלה של טרפז C יש מצביעים משני קודקודים פנימיים.הרעיון בבנייה זו דומה לעצי kd שראינו ביחידה 5: לכל צומת פנימי, ההסתעפות ימינה או שמאלה תלויה בתשובה לשאלה המתאימה לסוג הצומת.בהינתן נקודת שאילתה q, נתחיל את החיפוש מהשורש עד שנגיע לעלה:אם הגענו לצומת \\(x\\) המתאים לנקודת קצה \\(p\\), נשאל: “האם \\(q\\) מימין או משמאל לישר האנכי שעובר דרך p?”. אם התשובה היא “מימין” – נמשיך ימינה, אחרת שמאלה.אם הגענו לצומת \\(y\\) המתאים לקטע \\(s\\), נשאל: “האם \\(q\\) מעל או מתחת לקטע \\(s\\)?”. אם התשובה היא “מתחת” – נמשיך ימינה, אחרת שמאלה. שימו לב שכדי שהשאלה הזו תהיה הגיונית, נצטרך להבטיח שבשלב זה הישר האנכי שעובר דרך \\(q\\) חותך את \\(s\\).כשנגיע לעלה, נבדוק אם הטרפז המתאים לו מכיל אתq.ידוע שנקודת שאילתה נמצאת:מימין לישר האנכי העובר בנקודה \\(p_1\\).משמאל לישר האנכי העובר בנקודה \\(q_1\\).מתחת לקטע \\(s_1\\).באילו מהטרפזים ייתכן שהנקודה נמצאת?אם גם ידוע שהנקודה נמצאת:משמאל לישר האנכי העובר בנקודה \\(q_2\\).מעל לקטע \\(s_2\\).באילו מהטרפזים ייתכן שהנקודה נמצאת?TODO","code":""},{"path":"point-location.html","id":"rand-inc-alg","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"6.3.2 אלגוריתם אינקרמנטלי-רנדומי","text":"בחלק זה נתאר אלגוריתם אינקרמנטלי לבניית מבנה החיפוש \\(\\mathcal{D}\\) והמפה הטרפזית \\(\\mathcal{T}(\\mathcal{S})\\) גם יחד. האלגוריתם מוסיף את הקטעים מהאוסף \\(\\mathcal{S}\\), זה אחר זה בסדר רנדומי, ובכל פעם מעדכן את מבנה החיפוש והמפה בהתאם לקטע החדש שנוסף.הסיבה לכך שנבחר סדר רנדומי על הקטעים היא שבאופן זה נוכל לצפות לזמני ריצה ולסיבוכיות מקום יעילים, בדומה לאלגוריתם האינקרמנטלי-רנדומי לתכנון לינארי במישור שראינו ביחידה 4. נדון בכך בעמוד הבא של חלק זה.","code":""},{"path":"point-location.html","id":"צפו-בסרטון-הבא.-9","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"צפו בסרטון הבא.","text":"","code":""},{"path":"point-location.html","id":"קראו-את-חלקו-הראשון-של-סעיף-6.2-בספר-הלימוד-עמודים-128133.","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"קראו את חלקו הראשון של סעיף 6.2 בספר הלימוד (עמודים 128–133).","text":"אילו טרפזים האלגוריתם ימצא ויעדכן כאשר נוסיף את s_i?","code":""},{"path":"point-location.html","id":"alg-analysis","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"6.3.3 ניתוח האלגוריתם","text":"הסדר שבו האלגוריתם TrapezoidalMap מוסיף את הקטעים משפיע מאוד על גודל מבנה החיפוש \\(\\mathcal{D}\\) ועל זמן השאילתה. למעשה, ייתכן סדר שבו האלגוריתם ירוץ בזמן ריבועי, סיבוכיות הזיכרון של \\(\\mathcal{D}\\) תהיה ריבועית, וזמן השאילתה יהיה לינארי. לכן, בדומה לאלגוריתם האינקרמנטלי-רנדומי לתכנון לינארי במישור שראינו ביחידה 4, גם כאן האלגוריתם מגריל את סדר הוספת הקטעים מראש, ונוכל להראות שבתוחלת יתקבל מבנה חיפוש עם סיבוכיות זיכרון לינארית, ותוחלת זמן השאילתה תהיה \\(O (\\log n )\\). מהו המקרה הגרוע ביותר? נסו לתאר דוגמה לאוסף של \\(n\\) קטעים ושל הסדר שלהם, כך שהאלגוריתם האינקרמנטלי (הלא רנדומי) ירוץ בזמן \\(O ( n^2 )\\).","code":""},{"path":"point-location.html","id":"רעיון-ההוכחה-זמן-השאילתה.","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"רעיון ההוכחה (זמן השאילתה).","text":"תהי \\(q\\) נקודת שאילתה. נרצה להעריך את תוחלת אורך המסלול כאשר נחפש במבנה \\(\\mathcal{D}\\) את הטרפז שמכיל את \\(q\\) (מספר הצמתים מהשורש לטרפז). לשם כך, ננסה להבין כיצד המסלול משתנה במהלך ריצת אלגוריתם הבנייה של \\(\\mathcal{D}\\).למשל, ניתן להראות שבכל פעם שקטע חדש נוסף למבנה, המסלול יתארך לכל היותר בשלושה צמתים. לפיכך ניתן לומר שאורך המסלול הוא לכל היותר \\(3n\\). זהו חסם עבור המקרה הגרוע, אך אנו מעוניינים במקרה הממוצע (על פני כל \\(n!\\) הסדרים האפשריים), ולכן ננסה לחשב את ממוצע מספר הצמתים שנוספו למסלול בכל איטרציה של האלגוריתם.נסמן ב-\\(X_i\\) (עבור \\(1 \\le \\le n\\)) את מספר הצמתים על המסלול שנוספו באיטרציה ה-\\(\\)-ית (כלומר לאחר הוספת הקטע \\(s_i\\)). לפיכך, \\(X_i\\) הוא משתנה מקרי התלוי בסדר הוספת הקטעים, ולכן תוחלת אורך המסלול אל הטרפז המכיל את \\(q\\) היא \\(E[ \\sum_{=1}^{n} X_i ]\\), ומלינאריות התוחלת \\(\\sum_{=1}^{n} E[X_i]\\).מכיוון שבכל איטרציה נוספים לכל היותר שלושה צמתים למסלול, מתקיים \\(X_i \\le 3\\). לכן, אם נסמן ב-\\(P_i\\) את ההסתברות לכך שקיים צומת במסלול שנוצר באיטרציה ה-\\(\\)-ית, נקבל \\(E[ X_i ] \\le 3 P_i\\).האבחנה המרכזית בהוכחה היא שבאיטרציה ה-\\(\\)-ית נוסף קודקוד למסלול שלנו רק אם הטרפז שמכיל את \\(q\\) בדיוק לפני הוספת \\(s_i\\) שונה מהטרפז המכיל את \\(q\\) מייד לאחר הוספת \\(s_i\\). לכן, בדומה להוכחה שראינו ביחידה 4, נוכל לנתח את ההסתברות לכך שהטרפז המכיל את \\(q\\) משתנה בין האיטרציה ה-\\(– 1\\) לאיטרציה ה-\\(\\)-ית בשיטת הניתוח לאחור (backwards analysis). כלומר, נסתכל על המפה שהתקבלה מייד לאחר הוספת \\(s_i\\), ונשאל מה ההסתברות לכך שהטרפז \\(\\Delta\\) המכיל את \\(q\\) במפה זו ייעלם אם נוציא את \\(s_i\\). שימו לב שהטרפז \\(\\Delta\\) ייעלם אם ורק אם אחד מהשדות המגדירים אותו (\\(top(\\Delta)\\), \\(bottom(\\Delta)\\), \\(leftp(\\Delta)\\), \\(rightp(\\Delta)\\)) ייעלם. ההסתברות לכך ש-\\(s_i\\) הוא הקטע שמגדיר את \\(top(\\Delta)\\) למשל, היא 1 , ובאופן דומה ניתן לחשב זאת עבור \\(bottom(\\Delta)\\), \\(leftp(\\Delta)\\), \\(rightp(\\Delta)\\). לכן נקבל \\(P_i \\le \\frac{4}{}\\), ונוכל לחשב שתוחלת אורך המסלול היא \\(O (\\log n )\\).","code":""},{"path":"point-location.html","id":"קראו-את-חלקו-השני-של-סעיף-6.2-בספר-הלימוד-עמודים-133137.","chapter":"יחידה 6 מיקום נקודה ומפה טרפזית","heading":"קראו את חלקו השני של סעיף 6.2 בספר הלימוד (עמודים 133–137).","text":"","code":""},{"path":"voronoi.html","id":"voronoi","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"יחידה 7 דיאגרמת וורונוי","text":"","code":""},{"path":"voronoi.html","id":"preface-7","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"7.1 הקדמה","text":"","code":""},{"path":"voronoi.html","id":"contents-7","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"7.1.1 מה ביחידה?","text":"יחידה זו מקבילה לפרק השביעי בספר הלימוד.המושגים והרעיונות העיקריים שיילמדו ביחידה:בעיית השכן הקרוב ביותר.דיאגרמת וורונוי ותכונותיה.חישוב דיאגרמת וורונוי בעזרת אלגוריתם סורק.הכללות והרחבות של דיאגרמת וורונוי.למידה מהנה!","code":""},{"path":"voronoi.html","id":"nns","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"7.1.2 בעיית השכן הקרוב ביותר (או: בעיית מיקום הסניפים)","text":"","code":""},{"path":"voronoi.html","id":"קראו-את-ההקדמה-לפרק-7-בספר-הלימוד-עמודים-147148.","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"קראו את ההקדמה לפרק 7 בספר הלימוד (עמודים 147–148).","text":"","code":""},{"path":"voronoi.html","id":"basic-prop","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"7.2 הגדרה ותכונות בסיסיות","text":"","code":""},{"path":"voronoi.html","id":"Voronoi-vid","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"7.2.1 מהי דיאגרמת וורונוי?","text":"בסרטון הבא נגדיר את דיאגרמת וורונוי באופן פורמלי ונתאר מספר תכונות שלה. בסעיפים הבאים של חלק זה תוכלו למצוא את כל ההגדרות, האבחנות והמשפטים המופיעים בסרטון, כך שתוכלו לחזור אליהם בעת הצורך.","code":""},{"path":"voronoi.html","id":"צפו-בסרטון-הבא.-10","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"צפו בסרטון הבא.","text":"מעניין לדעת: לדיאגרמת וורונוי יש שימושים רבים ומגוונים, ופרט לתחום החברתי-כלכלי (שהוזכר בהקדמה) היא משמשת גם בתחומים, כמו גרפיקה ממוחשבת, רובוטיקה, פיזיקה וביולוגיה, ומופיעה במגוון צורות בטבע, כפי שניתן לראות למשל בתמונות הבאות (מתוך המאמר הזה).בשני העמודים הבאים מופיעות ההגדרות והתכונות של דיאגרמת וורונוי עליהן דנו בסרטון, יחד עם הערות, דוגמאות ותרגילים נוספים.","code":""},{"path":"voronoi.html","id":"def","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"7.2.2 הגדרות","text":"תהי \\(P=(p_1,\\dots,p_n)\\) קבוצה של \\(n\\) נקודות במישור.הגדרה: דיאגרמת וורונוי\nדיאגרמת וורונוי של הקבוצה \\(P\\) היא חלוקה של המישור ל-\\(n\\) תאים, אחד לכל נקודה של \\(P\\), כך שנקודה \\(q\\) שייכת לתא שמתאים לנקודה \\(p_i\\) אם ורק אם \\(\\|p_i-q\\|<\\|p_j-q\\|\\) לכל \\(p_j\\P\\), \\(j\\neq \\).נסמן ב-\\(\\text{Vor(P)}\\) את דיאגרמת וורונוי של הקבוצה \\(P\\), ועבור נקודה \\(p_i\\P\\) נסמן ב-\\(\\mathcal{V}(p_i)\\) את התא בדיאגרמה המתאים ל-\\(p_i\\).נניח שנתונות לנו שתי נקודות בלבד, \\(p_1,p_2\\). כיצד תיראה הדיאגרמה במקרה זה?הגדרה: bisector\nעבור שתי נקודות \\(p_1\\) ו-\\(p_2\\), האנך האמצעי לקטע \\(\\overline{p_1p_2}\\) נקרא ה-bisector של \\(p_1\\) ו-\\(p_2\\).\nשימו לב שכל נקודה שנמצאת על ה-bisector היא במרחק שווה מ-\\(p_1\\) ו-\\(p_2\\) (חשבו, מדוע).ה-bisector של \\(p_1\\) ו-\\(p_2\\) מחלק את המישור לשני חצאי מישור. נסמן ב-\\(h(p_1,p_2)\\) את חצי המישור הפתוח שמכיל את \\(p_1\\). כל נקודה הנמצאת ב-\\(h(p_1,p_2)\\), קרובה יותר ל-\\(p_1\\) מאשר ל-\\(p_2\\).","code":""},{"path":"voronoi.html","id":"prop","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"7.2.3 תכונות הדיאגרמה","text":"","code":""},{"path":"voronoi.html","id":"כיצד-נראה-תא-וורונוי","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"כיצד נראה תא וורונוי?","text":"האבחנות שראינו למעלה מובילות אותנו לאבחנה הבאה בנוגע למבנה של תא בדיאגרמת וורונוי:אבחנה: תא וורונוי \\(\\mathcal{V}(p_i)\\) מתקבל על ידי חיתוך של \\(n-1\\) חצאי מישורים, ולכן הוא פוליגון קמור (ייתכן שאינו חסום) בעל לכל היותר \\(n-1\\) קודקודים ו-\\(n-1\\) צלעות.","code":""},{"path":"voronoi.html","id":"כיצד-נראית-הדיאגרמה-כולה","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"כיצד נראית הדיאגרמה כולה?","text":"מכיוון שכל תא בדיאגרמה הוא חיתוך של חצאי מישורים, דיאגרמת וורונוי תהיה חלוקה של המישור שהצלעות שלה הן ישרים, חצאי ישרים או קטעים. צלעות שהן ישרים (כלומר כאלו שאינן חסומות משני הצדדים) יתקבלו רק במקרה שבו כל הנקודות נמצאות על ישר אחד. בספר הלימוד מופיעה ההוכחה המלאה למשפט הבא:משפט: אם כל נקודות \\(P\\) נמצאות על ישר אחד, אז \\(\\text{Vor(P)}\\) מורכבת מ-\\(n-1\\) ישרים מקבילים. אחרת, \\(\\text{Vor(P)}\\) קשירה, והצלעות שלה הן קטעים או חצאי ישרים (קרניים).","code":""},{"path":"voronoi.html","id":"סיבוכיות-הדיאגרמה.","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"סיבוכיות הדיאגרמה.","text":"שימו לב שהסיבוכיות של תא בודד בדיאגרמה עשויה להיות \\(\\Theta(n)\\), כמו למשל באיור הבא.מה הסיבוכיות של כל הדיאגרמה? על ידי שימוש בנוסחת אוילר, והעובדה שהדרגה המינימלית של קודקוד בדיאגרמה היא 3, ניתן להוכיח שהסיבוכיות של \\(\\text{Vor}(P)\\) היא \\(O(n)\\) (ההוכחה המלאה מופיעה בספר הלימוד).משפט: הסיבוכיות של \\(\\text{Vor(P)}\\) היא \\(O(n)\\).","code":""},{"path":"voronoi.html","id":"תכונת-המעגל-הריק.","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"תכונת המעגל הריק.","text":"תכונת המעגל הריק מאפשרת לנו להבין טוב יותר מיהם האנכים האמצעיים שנקודת החיתוך ביניהם היא קודקוד של הדיאגרמה. עבור נקודה \\(q\\), נגדיר את \\(C_P(q)\\) להיות המעגל הגדול ביותר שמרכזו ב-\\(q\\) והוא ריק (בפנימו) מנקודות \\(P\\). המשפט הבא הוא אפיון חשוב של דיאגרמת וורונוי, שיאפשר לנו בהמשך לבנות אותה ביעילות. ההוכחה המלאה מופיעה כמובן בספר הלימוד.משפט:נקודה \\(q\\) היא קודקוד של \\(\\text{Vor(P)}\\) אם ורק אם \\(C_P(q)\\) מכיל לפחות שלוש נקודות של \\(P\\) על שפתו.ה-bisector של \\(p_i\\) ו-\\(p_j\\) מגדיר צלע של \\(\\text{Vor(P)}\\) אם ורק אם קיימת נקודה \\(q\\) על ה-bisector כך ש-\\(C_P(q)\\) מכיל את \\(p_i\\) ו-\\(p_j\\) על שפתו, ואינו מכיל אף נקודה אחרת של \\(P\\) על שפתו.דוגמה:\nבאיור הבא, הנקודות הירוקות \\(q_1\\) ו-\\(q_3\\) הן קודקודים של הדיאגרמה \\(\\text{Vor(P)}\\): המעגל \\(C_P(q_1)\\) מכיל ארבע נקודות של \\(P\\) על שפתו, והמעגל \\(C_p(q_3)\\) מכיל שלוש נקודות של \\(P\\) על שפתו.\nהנקודה האדומה \\(q_2\\) נמצאת על ה-bisector של \\(p_i\\) ו-\\(p_j\\), והמעגל \\(C_P(q_2)\\) מכיל את \\(p_i\\) ו-\\(p_j\\) על שפתו ואינו מכיל אף נקודה אחרת של \\(P\\) על שפתו. לכן ה-bisector של \\(p_i\\) ו-\\(p_j\\) מגדיר צלע של \\(\\text{Vor(P)}\\).","code":""},{"path":"voronoi.html","id":"קראו-את-סעיף-7.1-בספר-הלימוד-עמודים-148151.","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"קראו את סעיף 7.1 בספר הלימוד (עמודים 148–151).","text":"","code":""},{"path":"voronoi.html","id":"computing-VD","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"7.3 חישוב הדיאגרמה","text":"","code":""},{"path":"voronoi.html","id":"beach-line","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"7.3.1 סריקת קו החוף","text":"\nהאבחנה שראינו בחלק הקודם בנוגע למבנה של תא וורונוי מובילה לאלגוריתם פשוט למדי לחישוב הדיאגרמה. נוכל לחשב לכל אתר \\(p_i\\) את החיתוך של חצאי המישורים \\(h(p_i,p_j)\\) לכל \\(j\\neq \\) בעזרת האלגוריתם שראינו בפרק 4, וכך נקבל את התא המתאים ל-\\(p_i\\). כך החישוב של כל תא יהיה בזמן \\(O(n\\log n)\\), וסך כל זמן הריצה יהיה \\(O(n^2 \\log n)\\). האם ניתן להשיג זמן טוב יותר? אחרי הכול, הסיבוכיות של דיאגרמת וורונוי היא לינארית.\nבסרטון הבא נתאר רעיון לחישוב דיאגרמת וורונוי בעזרת אלגוריתם סורק.","code":""},{"path":"voronoi.html","id":"צפו-בסרטון-הבא.-11","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"צפו בסרטון הבא.","text":"","code":""},{"path":"voronoi.html","id":"הדגמה.","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"הדגמה.","text":"ביישומון הבא, מאת Philipp Kindermann, תוכלו לראות בעצמכם כיצד נראה קו החוף ביחס לדיאגרמה.\nהזיזו את קו החוף מעלה ומטה. שימו לב מתי נוספות קשתות חדשות, וכיצד נקודות החיבור בין הקשתות של קו החוף “משרטטות” את צלעות הדיאגרמה כאשר הישר הסורק מתקדם מטה.","code":""},{"path":"voronoi.html","id":"Fortune-alg","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"7.3.2 האלגוריתם הסורק של Fortune","text":"בסעיף 7.2 בספר הלימוד מתואר בפירוט האלגוריתם הסורק של Fortune לבניית דיאגרמת וורונוי. זהו אלגוריתם בסיסי וחשוב ביותר בתחום הגיאומטריה החישובית. זמן הריצה שלו הוא \\(O(n\\log(n))\\) בלבד, והוא אופטימלי. בקורס זה נדלג על הפרטים ועל מימוש האלגוריתם, ונסתפק בתיאור הרעיון הכללי שראינו בסעיף הקודם, ובציטוט המשפט הבא:משפט: ניתן לחשב את דיאגרמת וורונוי של קבוצת נקודות בגודל \\(n\\) בזמן \\(O(n\\log(n))\\).","code":""},{"path":"voronoi.html","id":"הדגמה.-1","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"הדגמה.","text":"הסרטון הבא (מאת Kevin Schaal) מציג אנימציה נהדרת הממחישה את אופן פעולת האלגוריתם:","code":""},{"path":"voronoi.html","id":"למתעניינים-בפרטי-האלגוריתם-בניתוחו-ובאופן-המימוש-שלו-קראו-את-סעיף-7.2-בספר-הלימוד-עמודים-151159.","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"למתעניינים בפרטי האלגוריתם, בניתוחו ובאופן המימוש שלו: קראו את סעיף 7.2 בספר הלימוד (עמודים 151–159).","text":"","code":""},{"path":"voronoi.html","id":"extensions","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"7.4 הכללות והרחבות","text":"","code":""},{"path":"voronoi.html","id":"beyond-Euclid","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"7.4.1 מֵעֵבֶר למישור האוקלידי","text":"בחלקים הקודמים הגדרנו את דיאגרמת וורונוי עבור אוסף של נקודות במישור תחת מטריקת \\(L_2\\), כלומר המרחק האוקלידי. זהו בעצם מקרה פשוט של רעיון כללי ומופשט הרבה יותר; באופן כללי, דיאגרמת וורונוי מתארת חלוקה של המרחב לתאים, לפי המרחק לאובייקטים מאוסף נתון. ראו למשל את ההגדרה הפורמלית של דיאגרמת וורונוי המופיעה בוויקיפדיה (עבור מרחבים מטריים).הכללה אחת שניתן לעשות נוגעת למרחב שבו נמצאים האתרים. הדוגמה הפשוטה ביותר להכללה כזו היא עבור נקודות בממדים גבוהים מ-2. עבור נקודות מממד \\(d\\), הסיבוכיות של הדיאגרמה יכולה להגיע ל-\\(\\Theta(n^{\\lceil d/2\\rceil})\\), וניתן לחשב אותה בזמן \\(O(n\\log n+n^{\\lceil d/2\\rceil})\\).\nהכללה אחרת נוגעת לפונקציית המרחק: במקום מרחק אוקלידי, נוכל להשתמש בפונקציית מרחק אחרת בין הנקודות. למשל, מרחק \\(L_1\\) (שנקרא גם “מרחק מנהטן”) בין שתי נקודות \\(p\\) ו-\\(q\\) מוגדר להיות\n\\[\\|p-q\\|_1:=|p_x-q_x|+|p_y-q_y\\|.\\]\nבמקרה זה כל צלעות הדיאגרמה יהיו אופקיות, אנכיות או בזווית של \\(45^\\circ\\) בלבד.הכללה נוספת של הדיאגרמה נוגעת לאתרים עצמם: במקום אוסף של נקודות, נוכל להגדיר את קבוצת האתרים להיות אוסף של אובייקטים, כלומר אוסף של תת-קבוצות של נקודות מהמרחב. דוגמה אחת שמופיעה בספר הלימוד לשימוש בהכללה הזו היא כאשר האובייקטים האלו הם קטעים. המרחק בין נקודה \\(q\\) לקטע \\(s\\) מוגדר להיות המרחק (האוקלידי) בין \\(q\\) לנקודה על \\(s\\) שקרובה אליה ביותר. תוכלו לקרוא על כך בסעיף 7.3 בספר הלימוד.","code":""},{"path":"voronoi.html","id":"other-defs","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"7.4.2 הרחבות נוספות","text":"דיאגרמת וורונוי מוגדרת לפי המרחק לאתר הקרוב ביותר. ניתן להכליל את ההגדרה הזו במספר דרכים שונות, וגם כאן נזכיר בקצרה שתיים מהן.","code":""},{"path":"voronoi.html","id":"דיאגרמת-וורונוי-ממושקלת.","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"דיאגרמת וורונוי ממושקלת.","text":"כאן, נוסף על אוסף האתרים \\(P=(p_1,\\dots,p_n)\\), נתון לנו גם אוסף של משקלים \\(W=(w_1,\\dots,w_n)\\), כך שמשקל המתאים ל-\\(p_i\\) הוא \\(w_i\\). השינוי בהגדרה של הדיאגרמה הוא בפונקציית המרחק: נקודה \\(q\\) שייכת לתא שמתאים לנקודה \\(p_i\\) אם ורק אם\n\\(\\|p_i-q\\|+w_i<\\|p_j-q\\|+w_j\\) לכל \\(p_j\\P\\), \\(j\\neq \\).\nשימו לב שאם כל המשקלים הם 0, אז מדובר בבעיה המקורית.ניתן לחשוב על סיטואציות שונות מהעולם האמיתי שבהן יש צורך בהוספת משקלים, למשל כאשר כל אתר מסמל מרכז קניות שלם, וכל מרכז קניות הוא אטרקטיבי במידה שונה.","code":""},{"path":"voronoi.html","id":"דיאגרמת-וורונוי-מסדר-k.","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"דיאגרמת וורונוי מסדר k.","text":"עבור קבוצת אתרים \\(P=(p_1,\\dots,p_n)\\) ומספר \\(1\\le k\\le n-1\\), דיאגרמת וורונוי מסדר \\(k\\) היא חלוקה של המישור לתאים, כך שכל תא מזוהה עם תת-קבוצה בגודל \\(k\\) של אתרים מ-\\(P\\), ונקודה שייכת לתא המזוהה עם קבוצה\n\\(\\{p_{i_1},\\dots,p_{i_k}\\}\\)\nאם ורק אם אלו הם\n\\(k\\) האתרים הקרובים אליה ביותר מבין כל האתרים ב-\\(P\\).\nלמשל, עבור \\(k=2\\) כל תא מזוהה עם זוג נקודות, ונקודה \\(q\\) שייכת לתא של \\(p_i,p_j\\) אם לא קיים אתר אחר ב-\\(P\\) שקרוב אליה יותר מ-\\(p_i\\) או \\(p_j\\).מקרה מעניין במיוחד הוא עבור \\(k=n-1\\): במקרה זה כל תא מזוהה עם \\(n-1\\) נקודות, ובאופן שקול, כל תא מזוהה עם נקודה אחת (היחידה שאינה בקבוצה), ונקודה \\(q\\) שייכת לתא של \\(p_i\\) אם \\(p_i\\) היא הנקודה הרחוקה ביותר ממנה מבין נקודות \\(P\\). לפיכך מקרה זה נקרא Farthest-Point Voronoi Diagram, או בקיצור דיאגרמת FPV. באיור למטה, ניתן לראות דוגמה לדיאגרמת FPV של קבוצת נקודות. האם תצליחו לזהות איזה תא מתאים לאיזו נקודה?להעשרה, קראו עוד על דיאגרמת FPV בסעיף 7.4 בספר הלימוד.","code":""},{"path":"voronoi.html","id":"voronoi-game","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"7.5 בונוס: משחק וורונוי","text":"","code":""},{"path":"voronoi.html","id":"משחק-וורונוי-על-ריבוע","chapter":"יחידה 7 דיאגרמת וורונוי","heading":"7.5.1 משחק וורונוי על ריבוע","text":"(חלק זה הוא העשרה בלבד ואינו נכלל בחומר הקורס)\nבמשחק וורונוי יש שני שחקנים, כחול ואדום, והלוח הוא ריבוע במישור. השחקנים משחקים בתורות במשך \\(k\\) סבבים, כאשר האדום משחק ראשון והכחול שני. כל שחקן בתורו בוחר נקודה על הלוח, ואז בונים את דיאגרמת וורונוי של כל הנקודות שנבחרו ומחשבים את סכום השטחים של תאי וורונוי האדומים ושל תאי וורונוי הכחולים. המנצח הוא זה שבסוף המשחק הצליח להשיג שטח גדול יותר.שאלה מעניינת למחקר היא: למי מהשחקנים יש אסטרטגיה מנצחת, ומהי? שאלה נוספת: בהינתן מצב של הלוח, באיזו נקודה כדאי לבחור כדי למקסם את השטח? ואיך ניתן לחשב זאת בזמן יעיל? ניתן לחשוב גם מה קורה כשלוח המשחק הוא לאו דווקא ריבוע; למשל, מה קורה כאשר לוח המשחק הוא פוליגון? או גרף?ניתן לשחק במשחק וורונוי בסימולציה  מאת Frederik Brasz.","code":""},{"path":"duality-arrangements.html","id":"duality-arrangements","chapter":"יחידה 8 מערכים ודואליות","heading":"יחידה 8 מערכים ודואליות","text":"","code":""},{"path":"duality-arrangements.html","id":"preface-8","chapter":"יחידה 8 מערכים ודואליות","heading":"8.1 הקדמה","text":"","code":""},{"path":"duality-arrangements.html","id":"contents-8","chapter":"יחידה 8 מערכים ודואליות","heading":"8.1.1 מה ביחידה?","text":"יחידה זו מקבילה לפרק השמיני בספר הלימוד.המושגים והרעיונות העיקריים שיילמדו ביחידה:ה-discrepancy של קבוצת נקודות.רעיון הדואליות של נקודה וישר.מערך של ישרים במישור.הרמה (level) של נקודה במערך של ישרים.למידה מהנה!","code":""},{"path":"duality-arrangements.html","id":"geometric-sampling","chapter":"יחידה 8 מערכים ודואליות","heading":"8.1.2 דגימה גיאומטרית טובה","text":"ההתמודדות עם נתוני עתק (big data) מציבה אתגר עצום בתחום טכנולוגית המידע, ואחת הדרכים להתמודד עם היקף מאסיבי של נתונים היא על ידי דגימה (sampling). למשל, בהינתן אוסף גדול מאוד של נקודות, ניתן לדגום מתוכן אוסף קטן יותר שישמש ייצוג קומפקטי של האוסף המקורי, ועליו ניתן לבצע חישובים ביעילות. גם כאשר רוצים למדל אובייקט רציף במחשב, משתמשים בדרך כלל באוסף סופי של נקודות או פיקסלים; למשל, כדי לייצג את פני השטח במפה טופוגרפית, לוקחים מדידות של גובה בנקודות אקראיות (האיור למטה לקוח מהמאמר הזה, ומציג מפה טופוגרפית של אזור הררי באסיה, עם 2,500 נקודות שנבחרו בדגימה מקרית).הבחירה בדגימה מקרית של נקודות לעומת דגימה תבניתית יכולה לנבוע מכמה סיבות:דגימה מקרית מאפשרת הוכחה של חסמים הסתברותיים (חסמים על התוחלת).לפעמים דגימה מקרית נראית טבעית יותר לעין האנושית. עם זאת, לא כל דגימה מקרית תהיה “טובה”, כלומר היינו רוצים שפיזור הנקודות שנדגמו יהיה פחות או יותר אחיד, כדי שישקף את המצב המקורי. נסביר זאת על ידי דוגמה. נניח שדגמנו קבוצה \\(S\\) של \\(n\\) נקודות מריבוע היחידה \\(U=[0,1]\\times [0,1]\\). היינו רוצים שלקבוצה \\(S\\) תהיה התכונה הבאה: לכל חצי מישור \\(h\\), שיעור הנקודות מ-\\(S\\) שנמצאות ב-\\(h\\) יהיה פחות או יותר כמו גודל החיתוך של \\(h\\) עם \\(U\\).באופן פורמלי יותר, נגדיר את המדד הרציף של \\(h\\) להיות השטח של \\(h \\cap U\\). נסמן אותו ב-\\(\\mu(h)\\). נוסף על כך, נגדיר את המדד הדיסקרטי של \\(h\\) להיות \\(\\mu_S(h)=|S\\cap h|/|S|\\). הדגימה \\(S\\) תהיה טובה אם לכל בחירה של חצי מישור \\(h\\) יתקיים \\(\\mu(h)\\approx\\mu_S(h)\\).\nבמתמטיקה, מושג זה נקרא Discrepancy. מדד ה-discrepancy של חצי המישור \\(h\\) מוגדר להיות: \\[\\Delta_S(h)=|\\mu(h)-\\mu_S(h)|.\\]דוגמה: באיור למטה, הקבוצה \\(S\\) מכילה חמש נקודות. חצי המישור \\(h\\) מכיל רק שתי נקודות מתוך \\(S\\), ולכן המדד הדיסקרטי של \\(h\\) הוא \\(\\mu_S(h)=|S\\cap h|/|S|=2/5\\). שטח החיתוך של חצי המישור \\(h\\) עם ריבוע היחידה \\(U\\) הוא בדיוק \\(1/2\\), ולכן מדד ה-discrepancy של \\(h\\) הוא \\[\\Delta_S(h)=|\\mu(h)-\\mu_S(h)|=|1/2-2/5|=1/10.\\]נסמן ב-\\(\\mathcal{H}\\) את אוסף כל חצאי המישורים. מדד ה-discrepancy של הקבוצה \\(S\\) ביחס לחצאי מישור מוגדר להיות: \\[\\Delta_S(\\mathcal{H})=\\sup_{h\\\\mathcal{H}}\\Delta_S(h).\\] במילים אחרות, זהו חצי המישור ה”גרוע ביותר”, כלומר זה שעבורו מדד ה-discrepancy הוא מקסימלי. אינטואיטיבית, ככל שמדד ה-discrepancy מתקרב ל-0, כך הדגימה \\(S\\) טובה יותר, כלומר מפוזרת באופן אחיד יותר על פני \\(U\\).(הערה: בסעיף 8.1 בספר הלימוד, הסימון למדד ה-discrepancy של קבוצה \\(S\\) ביחס לחצאי מישור הוא \\(\\Delta_\\mathcal{H}(S)\\), אך זוהי ככל הנראה שגיאת דפוס.) התבוננו באיור הבא שבו קבוצה \\(S\\) של נקודות (כחולות) בתוך ריבוע היחידה \\(U\\), וחצי מישור \\(h\\).מהו המדד הדיסקרטי של \\(h\\)?כיצד ניתן לחשב את המדד הרציף של חצי מישור נתון? חשבו את המדד הרציף של חצי המישור \\(h\\) המופיע באיור.מהו \\(\\Delta_S(h)\\)?האם יש חצי מישור שהוא “גרוע יותר” מ-\\(h\\)? כלומר מדד ה-discrepancy שלו גדול יותר?הקבוצה \\(S\\) מכילה 12 נקודות. חצי המישור \\(h\\) מכיל שמונה מהן, ולכן המדד הדיסקרטי הוא \\(8/12=2/3\\).שטח החיתוך של \\(h\\) עם \\(U\\) הוא \\(1/2+1/8=5/8\\) (ניתן לראות שהוא מכיל את שתי השורות התחתונות של הגריד, כלומר החצי התחתון של ריבוע היחידה, ועוד חצי מהשורה השלישית מלמטה).באופן כללי, ניתן לחשב את השטח על ידי מציאת נקודות החיתוך של הישר המגדיר את חצי המישור \\(h\\) עם ריבוע היחידה, ואז לחשב את השטח כסכום של שטח מלבן ושטח משולש.קיבלנו \\(\\Delta_S(h)=2/3-5/8=1/24\\).שימו לב שקיימים מספר חצאי מישורים שלא מכילים אף נקודה כחולה, ושטח החיתוך שלהם עם הריבוע גדול מ-\\(1/24\\). לכן חצאי מישורים אלו “גרועים יותר” מ-\\(h\\).","code":""},{"path":"duality-arrangements.html","id":"discrepancy","chapter":"יחידה 8 מערכים ודואליות","heading":"8.1.3 חישוב ה-discrepancy של קבוצת נקודות","text":"עכשיו נוכל לשאול: כיצד ניתן לחשב את \\(\\Delta_S(\\mathcal{H})\\)? בעצם אנחנו מחפשים חצי מישור \\(\\hat{h}\\) שעבורו \\(\\Delta_S(\\mathcal{H})=\\Delta_S(\\hat{h})\\) , כלומר לכל \\(h\\\\mathcal{H}\\) מתקיים \\(\\Delta_S(\\hat{h})\\ge \\Delta_S(h)\\). אבחנה מיידית ראשונה היא שהישר שמגדיר את \\(\\hat{h}\\) חייב לעבור דרך לפחות נקודה אחת מ-\\(S\\): אם זה לא המצב, נוכל להזיז מעט את הישר המגדיר את \\(\\hat{h}\\) לעבר הנקודה הקרובה ביותר אליו מאחד הצדדים, מבלי לשנות את המידה הדיסקרטית שלו. המידה הרציפה תגדל או תקטן, ובאחד הצדדים נקבל מדד discrepancy גדול יותר.כדי לחשב את \\(\\Delta_S(\\mathcal{H})\\), היינו רוצים למצוא מספר סופי של מועמדים להיות \\(\\hat{h}\\). בסעיף 8.1 בספר הלימוד מוכיחים את הטענה הבאה:טענה:חצי מישור \\(h\\) שעבורו \\(\\Delta_S(h)\\) מקסימלי, הוא אחד משני הסוגים הבאים:ל-\\(h\\) יש בדיוק נקודה אחת מ-\\(S\\) על שפתו,ל-\\(h\\) יש לפחות 2 נקודות על שפתו.נוסף על כך, מספר המועמדים מהסוג הראשון הוא \\(O(n)\\), וניתן למצוא אותם בזמן \\(O(n)\\).בהינתן מועמד \\(h\\), נוכל לחשב את המידה הרציפה שלו בזמן קבוע, ואת המידה הדיסקרטית שלו בזמן \\(O(n)\\). מכיוון שמספר המועמדים מהסוג הראשון הוא \\(O(n)\\) וגם ניתן למצוא אותם בזמן \\(O(n)\\), סך כל הזמן שייקח לנו לחשב את \\(\\Delta_S(h)\\) עבור כל המועמדים מסוג זה הוא \\(O(n^2)\\).מה בנוגע למועמדים מהסוג השני? מכיוון שיש \\(O(n^2)\\) כאלה, נצטרך לבצע את חישוב המידה הדיסקרטית שלהם באופן אחר. בהמשך היחידה נלמד טכניקה חשובה ומרתקת שתאפשר לנו לעשות זאת בזמן \\(O(n^2)\\) בסך הכול! לטכניקה הזו קוראים דואליות של נקודה וישר.הערה: ביחידה זו נדלג על ההקדמה לפרק 8 בספר הלימוד, וכן על סעיף 8.1. כמו כן, לא נוכיח את הטענה שלעיל, ורק נראה כיצד ניתן להשתמש בה כדי לחשב את ה-discrepancy. באיור למטה מופיעים ארבעה חצאי מישור, \\(h_1,h_2,h_3,h_4\\), כולם עוברים דרך אותה נקודה מ-\\(S\\). שימו לב ש-\\(h_i\\) מתקבל מ-\\(h_{-1}\\) על ידי סיבוב של הישר המגדיר אותו נגד כיוון השעון. כל חצאי המישורים מכילים בדיוק את אותה קבוצת נקודות מ-\\(S\\). למי מהם \\(\\Delta_S\\) מקסימלי? למי מינימלי?שטח החיתוך של \\(h_1\\) או \\(h_2\\) עם \\(U\\) הוא הגדול ביותר, והוא שווה ל-\\(3/4\\). השטח קטן יותר ויותר לאחר שעוברים את \\(h_2\\) ומסובבים לכיוון \\(h_4\\). שטח החיתוך של \\(h_4\\) של \\(U\\) הוא הקטן ביותר. כולם מכילים \\(4/5\\) מהנקודות ב-\\(S\\), ולכן ככל ששטח החיתוך קטן נקבל הפרש גדול יותר בין המדד הדיסקרטי לרציף. לכן המדד המקסימלי יתקבל עבור \\(h_1\\) ו-\\(h_2\\), והמינימלי עבור \\(h_4\\).","code":""},{"path":"duality-arrangements.html","id":"point-line-duality","chapter":"יחידה 8 מערכים ודואליות","heading":"8.2 דואליות של נקודה וישר","text":"","code":""},{"path":"duality-arrangements.html","id":"definition","chapter":"יחידה 8 מערכים ודואליות","heading":"8.2.1 הגדרת הטרנספורמציה הדואלית","text":"ביחידה 3 דיברנו על הגרף הדואלי לשילוש, וראינו שבעזרתו ניתן לחשב בקלות צביעה חוקית של קודקודי המשולשים בשלושה צבעים (שימו לב שניתן להגדיר באופן דומה גרף דואלי לגרף מישורי שפאותיו הן לא בהכרח משולשים). באופן כללי, דואליות היא כלי חשוב בניתוח ופתרון של בעיות גיאומטריות: היא מאפשרת לנו להסתכל על בעיה נתונה מפרספקטיבה שונה, על ידי תיאור של בעיה דואלית שקולה. לפעמים הבעיה הדואלית נראית פשוטה הרבה יותר לפתרון, ואז ניתן להפוך את הפתרון לבעיה הדואלית לפתרון לבעיה המקורית.בפרק זה נדבר על הדואליות של נקודות וישרים במישור. נקודה \\(p\\) במישור מתוארת על ידי שתי הקואורדינטות שלה, למשל, \\(p=(p_x,p_y)\\). גם ישר (לא אנכי) \\(y=mx+b\\) מתואר על ידי שני פרמטרים: השיפוע שלו, \\(m\\), והגורם הקבוע, \\(b\\). לכן ניתן למפות נקודה לישר, ולהפך, באופן חד-חד-ערכי. ניתן לחשוב על טרנספורמציות שונות, אך בקורס הזה נעסוק בטרנספורמציה הפשוטה הבאה:הישר הדואלי לנקודה \\(p=(p_x,p_y)\\) יסומן ב-\\(p^*\\). והוא: \\(p^*:~ y=p_x x-p_y\\)הנקודה הדואלית לישר \\(\\ell:~ y=mx+b\\) תסומן \\(\\ell^*\\). והיא: \\(\\ell^*=(m,-b)\\)דוגמה:הישר הדואלי לנקודה \\(p=(3,1)\\) הוא \\(p^*:~ y=3x-1\\).הנקודה הדואלית לישר \\(\\ell:~ y=x+2\\) היא \\(\\ell^*=(1,-2)\\).הטרנספורמציה הדואלית שהגדרנו ממפה אובייקטים מהמישור הראשי (primal plane) למישור הדואלי (dual plane), ויש לה מספר תכונות מעניינות, שאותן נראה מייד. אך לפני כן, נסו לבחון בעצמכם את תכונות הטרנספורמציה הדואלית בעזרת היישומון הבא.זיכרו שקואורדינטת ה-\\(x\\) ממופה לשיפוע הישר, וקואורדינטת ה-\\(y\\) לחיתוך עם ציר ה-\\(y\\).הנקודה \\(p_1\\) נמצאת על ציר ה-\\(y\\), כלומר קואורדינטת ה-\\(x\\) שלה היא אפס, ולכן לישר הדואלי המתאים לה יהיה שיפוע 0, כלומר זהו \\(\\ell_3\\).הנקודה \\(p_2\\) נמצאת על ציר ה-\\(x\\), כלומר קואורדינטת ה-\\(y\\) שלה היא אפס, ולכן הישר הדואלי המתאים לה ייחתך עם ציר ה-\\(y\\) בראשית הצירים, ולכן זהו \\(\\ell_1\\).עבור הנקודה \\(p_3\\) נשאר לנו הישר \\(\\ell_2\\), אבל אפשר לזהות זאת גם ללא אלימינציה: לנקודה \\(p_3\\) קואורדינטת \\(x\\) חיובית וקואורדינטת \\(y\\) שלילית, ואכן השיפוע של \\(\\ell_2\\) חיובי, והוא נחתך עם ציר ה-\\(y\\) מעל הראשית.","code":""},{"path":"duality-arrangements.html","id":"properties","chapter":"יחידה 8 מערכים ודואליות","heading":"8.2.2 תכונות הטרנספורמציה הדואלית","text":"כדי שנוכל להשתמש בטרנספורמציה הדואלית שהגדרנו, ננסה להבין תחילה מה היחס בין המישור הדואלי למישור הראשי, כלומר אילו תכונות נשמרות וכיצד. בסרטון הבא נבחן יחד את הטרנספורמציה הדואלית ואת התכונות שלה.","code":""},{"path":"duality-arrangements.html","id":"צפו-בסרטון-הבא.-12","chapter":"יחידה 8 מערכים ודואליות","heading":"צפו בסרטון הבא.","text":"ראינו שהטרנספורמציה הדואלית מקיימת את התכונות הבאות:אבחנה:תהי \\(p\\) נקודה ו-\\(\\ell\\) ישר לא אנכי, שניהם במישור. הטרנספורמציה הדואלית \\(o\\rightarrow o^*\\) מקיימת את התכונות הבאות:משמרת יחס חילה (incidence preserving): \\(p\\\\ell\\) אם ורק אם \\(\\ell^*\\p*\\).משמרת סדר (order preserving): \\(p\\) מעל \\(\\ell\\) אם ורק אם \\(\\ell^*\\) מעל \\(p^*\\).כמו כן, ראינו שבמישור הדואלי, קטע \\(s=\\overline{pq}\\) הוא איחוד הישרים הדואליים לנקודות על \\(s\\). כלומר \\(s^*\\) הוא אוסף אינסופי של ישרים, שלכולם נקודת חיתוך אחת. ניתן לראות זאת ביישומון הבא: הזיזו את הנקודה השחורה שעל הקטע \\(\\overline{pq}\\), ותוכלו לראות כיצד הישר הדואלי (הצבוע בשחור) משתנה ביחס לישרים הדואלים ל-\\(p\\) ו-\\(q\\).הגדרה שקולה:\nבסעיף 8.2 בספר הלימוד מתוארת דרך אחרת לחשוב על הטרנספורמציה הדואלית – בעזרת הפרבולה \\(\\mathcal{U}:~ y=x^2/2\\). עבור נקודה \\(p\\) שנמצאת על הפרבולה, הישר הדואלי \\(p^*\\) הוא בדיוק הישר המשיק לפרבולה בנקודה \\(p\\). עבור נקודה \\(q\\) שלא נמצאת על הפרבולה, ושיש לה אותה קואורדינטת \\(x\\) כמו ל-\\(p\\), השיפוע של \\(q^*\\) הוא בדיוק השיפוע של \\(p^*\\), אך \\(q^*\\) מוזז לפי ההפרש בקואורדינטת ה-\\(y\\). כלומר \\(q^*\\) הוא הישר המקביל ל-\\(p^*\\) ועובר דרך נקודה \\(q'\\), שהיא תמונת מראה של \\(q\\) ביחס לישר האופקי העובר דרך \\(p\\). תוכלו לראות את הקשר הזה בעזרת היישומון הבא.","code":""},{"path":"duality-arrangements.html","id":"קראו-את-סעיף-8.2-בספר-הלימוד-עמודים-177179.","chapter":"יחידה 8 מערכים ודואליות","heading":"קראו את סעיף 8.2 בספר הלימוד (עמודים 177–179).","text":"החלק האחרון של סעיף 8.2 מתאר כיצד ניתן להשתמש בדואליות כדי לחשב את ה-discrepancy של קבוצת נקודות. נחזור לכך בהמשך, לאחר שנדבר על מערכים של ישרים במישור, ולכן דלגו בשלב זה על שתי הפסקאות האחרונות של סעיף 8.2.חצי מישור \\(h\\)?חצי מישור \\(h\\)?אוסף של \\(k\\ge 3\\) נקודות, שכולן על אותו ישר לא אנכי?אוסף של \\(k\\ge 3\\) נקודות, שכולן על אותו ישר לא אנכי?נסמן ב-\\(\\ell\\) את הישר המגדיר את חצי המישור \\(h\\), ונניח (בלי הגבלת הכלליות) שחצי המישור \\(h\\) נמצא מעל \\(\\ell\\). במישור הראשי, כל נקודה \\(p\\) ב-\\(h\\) נמצאת מעל \\(\\ell\\), ולכן במישור הדואלי, הנקודה \\(\\ell^*\\) נמצאת מעל הישר \\(p^*\\). כלומר הטרנספורמציה הדואלית של חצי מישור היא אוסף הישרים שעוברים מתחת לנקודה.נסמן ב-\\(\\ell\\) את הישר המגדיר את חצי המישור \\(h\\), ונניח (בלי הגבלת הכלליות) שחצי המישור \\(h\\) נמצא מעל \\(\\ell\\). במישור הראשי, כל נקודה \\(p\\) ב-\\(h\\) נמצאת מעל \\(\\ell\\), ולכן במישור הדואלי, הנקודה \\(\\ell^*\\) נמצאת מעל הישר \\(p^*\\). כלומר הטרנספורמציה הדואלית של חצי מישור היא אוסף הישרים שעוברים מתחת לנקודה.נניח שהנקודות \\(p_1,\\dots,p_k\\) נמצאות כולן על ישר \\(\\ell\\) במישור הראשי. מכאן שבמישור הדואלי, הנקודה \\(\\ell^*\\) נמצאת על הישרים \\(p_1,\\dots,p_k\\). כלומר הטרנספורמציה הדואלית של אוסף נקודות שנמצאות על ישר אחד היא אוסף של ישרים הנחתכים כולם באותה נקודה.נניח שהנקודות \\(p_1,\\dots,p_k\\) נמצאות כולן על ישר \\(\\ell\\) במישור הראשי. מכאן שבמישור הדואלי, הנקודה \\(\\ell^*\\) נמצאת על הישרים \\(p_1,\\dots,p_k\\). כלומר הטרנספורמציה הדואלית של אוסף נקודות שנמצאות על ישר אחד היא אוסף של ישרים הנחתכים כולם באותה נקודה.","code":""},{"path":"duality-arrangements.html","id":"line-arrangements","chapter":"יחידה 8 מערכים ודואליות","heading":"8.3 מערכים של ישרים במישור","text":"","code":""},{"path":"duality-arrangements.html","id":"complexity","chapter":"יחידה 8 מערכים ודואליות","heading":"8.3.1 הגדרה, מבנה וגודל","text":" קבוצה \\(L\\) של \\(n\\) ישרים במישור מחלקת את המישור לאוסף של תאים (פאות), צלעות וקודקודים. חלוקה כזאת של המישור נקראת מערך של ישרים (line arrangement), ומסומנת \\(\\mathcal{}(L)\\). בסרטון הבא נדבר על המבנה ועל הגודל של מערכי ישרים במישור.","code":""},{"path":"duality-arrangements.html","id":"צפו-בסרטון-הבא.-13","chapter":"יחידה 8 מערכים ודואליות","heading":"צפו בסרטון הבא.","text":"ראינו שלמערך \\(\\mathcal{}(L)\\) של ישרים במישור יש שלושה סוגי רכיבים:קודקודים – כאשר כל קודקוד הוא נקודת חיתוך בין ישרים מ-\\(L\\).צלעות – כאשר כל צלע היא קטע (פתוח) או קרן (שצידה האחד פתוח וצידה שני לא חסום) על אחד הישרים.פאות – כאשר כל פאה היא רכיב קשיר מקסימלי של נקודות שלא נמצאות על אחד הישרים.הפאות הן כמובן קמורות, שכן הן נוצרות מחיתוך של חצאי מישורים.כמו כן, הגדרנו שהמערך \\(\\mathcal{}(L)\\) הוא פשוט אם אין ב-\\(L\\) שלושה ישרים שעוברים דרך אותה נקודה, ואין ישרים מקבילים.משפט:תהי \\(L\\) קבוצה של \\(n\\) ישרים במישור, ויהי \\(\\mathcal{}(L)\\) המערך של \\(L\\). מתקיים:מספר הקודקודים ב-\\(\\mathcal{}(L)\\) הוא לכל היותר \\(n(n-1)/2\\).מספר הצלעות ב-\\(\\mathcal{}(L)\\) הוא לכל היותר \\(n^2\\).מספר הפאות ב-\\(\\mathcal{}(L)\\) הוא לכל היותר \\(n^2/2+n/2+1\\).כמו כן, מתקיים שוויון בכל השלושה אם ורק אם \\(\\mathcal{}(L)\\) הוא מערך פשוט.","code":""},{"path":"duality-arrangements.html","id":"קראו-את-חלקו-הראשון-של-סעיף-8.3-בספר-הלימוד-עמודים-179180.","chapter":"יחידה 8 מערכים ודואליות","heading":"קראו את חלקו הראשון של סעיף 8.3 בספר הלימוד (עמודים 179–180).","text":"(קראו עד ההוכחה של משפט 8.4, כולל)","code":""},{"path":"duality-arrangements.html","id":"construcion","chapter":"יחידה 8 מערכים ודואליות","heading":"8.3.2 ייצוג ובניית המערך","text":"בעמוד הקודם ראינו שהמערך \\(\\mathcal{}(L)\\) של אוסף \\(L\\) של ישרים הוא חלוקה של המישור, ואסימפטוטית הוא לכל היותר מגודל ריבועי (במספר הישרים).","code":""},{"path":"duality-arrangements.html","id":"כיצד-נייצג-מערך-של-ישרים","chapter":"יחידה 8 מערכים ודואליות","heading":"כיצד נייצג מערך של ישרים?","text":" נוכל להשתמש במבנה DCEL שראינו ביחידה 2, שיאפשר לנו לעבור מפאה לפאה, לגשת לרשימת כל הצלעות שמגדירות פאה נתונה, ועוד. שימו לב שהמערך \\(\\mathcal{}(L)\\) מכיל גם צלעות אינסופיות, ולכן כדי להשתמש במבנה DCEL נצטרך להשתמש בטריק שכבר ראינו בעבר: נמצא מלבן \\(R\\) מספיק גדול שמכיל את כל הקודקודים של \\(\\mathcal{}(L)\\) בפנימו.","code":""},{"path":"duality-arrangements.html","id":"בניית-ה-dcel.","chapter":"יחידה 8 מערכים ודואליות","heading":"בניית ה-DCEL.","text":"כדי לבנות את ה-DCEL עבור \\(\\mathcal{}(L)\\) המוכל במלבן \\(R\\), נוכל פשוט להשתמש באלגוריתם הסורק שראינו ביחידה 2. האלגוריתם ימצא את כל נקודות החיתוך בין קטעים, שהם הקודקודים של המערך, בזמן \\(O(n^2\\log n)\\), ובעזרתו נוכל (על ידי מספר שינויים פשוטים) גם לחשב את מבנה ה-DCEL.","code":""},{"path":"duality-arrangements.html","id":"אלגוריתם-יעיל-יותר.","chapter":"יחידה 8 מערכים ודואליות","heading":"אלגוריתם יעיל יותר.","text":"בחלקו השני של סעיף 8.3 בספר הלימוד (עמודים 181–185) מתואר אלגוריתם אינקרמנטלי לבניית מערך של ישרים. זמן הריצה שלו הוא \\(O(n^2)\\) בלבד, אך הוא מסובך יותר ולא נלמד אותו בקורס זה.","code":""},{"path":"duality-arrangements.html","id":"vertex-level","chapter":"יחידה 8 מערכים ודואליות","heading":"8.3.3 רמה (level) של נקודה במערך","text":"לפני שנוכל לחזור לפתרון בעיית חישוב ה-discrepancy, נגדיר מונח נוסף שיעזור לנו במשימה הזאת (ובעוד רבות אחרות).הגדרה: רמה של נקודה במערך של ישרים\nהרמה (level) של נקודה \\(r\\) במערך של ישרים היא מספר הישרים שעוברים מעל \\(r\\) (מעל ממש, כלומר לא עוברים דרך \\(r\\)).דוגמה:הרמה של הנקודה \\(p\\) היא 3, מכיוון שעוברים מעליה שלושה ישרים: \\(\\ell_1,\\ell_4,\\ell_5\\).מהי הרמה של הנקודה \\(q\\)? שימו לב ש-\\(q\\) היא קודקוד של מערך הישרים, ורק הישר \\(\\ell_4\\) עובר מעליה. לכן הרמה של \\(q\\) היא 1.","code":""},{"path":"duality-arrangements.html","id":"כיצד-נוכל-לחשב-את-הרמה-של-קודקוד-במערך-ישרים","chapter":"יחידה 8 מערכים ודואליות","heading":"כיצד נוכל לחשב את הרמה של קודקוד במערך ישרים?","text":"בהינתן מבנה DCEL של המערך \\(\\mathcal{}(L)\\), נוכל לחשב את הרמות של כל הקודקודים במערך בזמן \\(O(n^2)\\) בסך הכול, בעזרת האלגוריתם הבא.עבור ישר \\(\\ell\\L\\) כלשהו, נמצא את הקודקוד השמאלי ביותר שנמצא עליו, \\(v_1\\), ונחשב את הרמה שלו, \\(level(v_1)\\), בזמן \\(O(n)\\) על ידי בדיקת כל הישרים האחרים. לאחר מכן, נוכל להתקדם לאורך הישר \\(\\ell\\) בעזרת מבנה ה-DCEL מהקודקוד הנוכחי, \\(v_i\\), אל הקודקוד שמימינו, \\(v_{+1}\\), ולחשב את הרמה של \\(v_{+1}\\) בהינתן \\(level(v_i)\\) בזמן קבוע:נאתחל \\(level(v_{+1})\\leftarrow level(v_i)\\).אם הישר דרך \\(v_i\\) עובר מעל \\(v_{+1}\\), נוסיף 1 ל-\\(level(v_{+1})\\).אם הישר דרך \\(v_{+1}\\) עובר מעל \\(v_i\\), נחסיר 1 מ-\\(level(v_{+1})\\).(שימו לב ש-2 ו-3 יכולים להתקיים יחד, ואז הרמה של \\(v_{+1}\\) לא תשתנה). מהי הרמה של כל אחד מהקודקודים על הישר \\(\\ell\\) במערך הישרים שבאיור?מעניין לדעת: הרמה ה-\\(k\\)-ית של מערך \\(\\mathcal{}(L)\\) של \\(n\\) ישרים במישור היא אוסף הקודקודים של \\(\\mathcal{}(L)\\) שהרמה שלהם היא \\(k\\). כמה קודקודים יש ברמה ה-\\(n/2\\)? זוהי בעיה פתוחה. למעשה, ידוע חסם תחתון של \\(\\Omega(n\\log n)\\) וחסם עליון של \\(O(n^{3/4})\\).","code":""},{"path":"duality-arrangements.html","id":"הכוח-של-דואליות.","chapter":"יחידה 8 מערכים ודואליות","heading":"8.3.3.1 הכוח של דואליות.","text":"נחזור לבעית חישוב ה-discrepancy של קבוצת נקודות. בהינתן קבוצה \\(S\\) של \\(n\\) נקודות, המטרה שלנו בסוף החלק הראשון של יחידה זו הייתה לחשב לכל זוג נקודות \\(p,q\\S\\) את המדד הדיסקרטי של חצי המישור שחסום על ידי הישר \\(\\ell(p,q)\\) העובר דרך \\(p\\) ו-\\(q\\). במישור הדואלי, הנקודה \\(\\ell(p,q)^*\\) (הדואלית לישר \\(\\ell(p,q)\\)) היא נקודת החיתוך בין \\(p^*\\) (הישר הדואלי ל-\\(p\\)), ל-\\(q^*\\) (הישר הדואלי ל-\\(q\\)). לכן נקודה \\(s\\) נמצאת מתחת לישר \\(\\ell(p,q)\\) במישור הראשי, אם ורק אם הישר \\(s^*\\) עובר מתחת לנקודה \\(\\ell(p,q)^*\\) במישור הדואלי.שימו לב שבמישור הדואלי, \\(S\\) היא קבוצה \\(S^*\\) של ישרים, שמהווה מערך של ישרים. מכאן, שמספר הנקודות מ-\\(S\\) שנמצאות בחצי המישור הפתוח שמוגדר על ידי \\(\\ell(p,q)\\) ונמצא מתחתיו, שווה למספר הישרים במישור הדואלי שעוברים מעל הנקודה \\(\\ell(p,q)^*\\). זוהי בדיוק הרמה של הקודקוד \\(\\ell(p,q)^*\\) במערך הישרים \\(\\mathcal{}(S^*)\\).כמו שראינו בחלק הקודם, ניתן לחשב את הרמות של כל הקודקודים במערך ישרים בזמן \\(O(n^2)\\), ולכן נוכל לחשב את ה-discrepancy של \\(S\\) בזמן \\(O(n^2)\\).","code":""},{"path":"duality-arrangements.html","id":"קראו-את-סעיף-8.4-בספר-הלימוד-עמודים-185186.","chapter":"יחידה 8 מערכים ודואליות","heading":"8.3.3.2 קראו את סעיף 8.4 בספר הלימוד (עמודים 185–186).","text":"","code":""},{"path":"duality-arrangements.html","id":"exercises","chapter":"יחידה 8 מערכים ודואליות","heading":"8.4 תרגילים נוספים","text":" תארו אלגוריתם שבהינתן אוסף \\(L\\) של \\(n\\) ישרים במישור, מוצא בזמן \\(O(n\\log n)\\) מלבן \\(R\\) שמכיל את כל הקודקודים של \\(\\mathcal{}(L)\\) בפנימו.TODO נתון אוסף \\(C\\) של \\(n\\) מעגלים במישור. שימו לב שגם אוסף זה מהווה חלוקה של המישור לתאים. הצלעות במערך המעגלים יהיו קשתות של מעגלים מ-\\(C\\). שימו לב שהפאות במערך המעגלים אינן בהכרח קמורות. מהי הסיבוכיות של מערך מעגלים?TODO כפי שראיתם, בבעיות רבות בגיאומטריה חישובית אנחנו מניחים (לשם פשטות) שהקלט אינו מכיל שלוש נקודות הנמצאות על ישר אחד. כיצד ניתן לוודא זאת? בדיקה זו נקראת בדיקת קו-ליניארית, ואלגוריתם נאיבי יבדוק כל שלוש נקודות, בזמן של \\(O(n^3)\\). חשבו כיצד ניתן להשתמש ברעיון הדואליות כדי לבדוק זאת בזמן \\(O(n^2)\\) בלבד.TODO","code":""},{"path":"Delaunay-triangulation.html","id":"Delaunay-triangulation","chapter":"יחידה 9 שילושי דלוני","heading":"יחידה 9 שילושי דלוני","text":"","code":""},{"path":"Delaunay-triangulation.html","id":"preface-9","chapter":"יחידה 9 שילושי דלוני","heading":"9.1 הקדמה","text":"","code":""},{"path":"Delaunay-triangulation.html","id":"contents-9","chapter":"יחידה 9 שילושי דלוני","heading":"9.1.1 מה ביחידה?","text":"יחידה זו מקבילה לפרק התשיעי בספר הלימוד.המושגים והרעיונות העיקריים שילמדו ביחידה:מפה מישורית מקסימלית.שילוש של קבוצת נקודות במישור.שילוש חוקי ושילוש אופטימלי בזויות.גרף דלוני ושילוש דלוני.אלגוריתמים לחישוב השילוש (אלגוריתם היפוך צלעות, אלגוריתם סורק, אלגוריתם אינקרמנטלי-רנדומי).למידה מהנה!","code":""},{"path":"Delaunay-triangulation.html","id":"terrains","chapter":"יחידה 9 שילושי דלוני","heading":"9.1.2 אינטרפולציה של גבהים","text":"\nייצוג תלת מימדי של פני שטח (terrain) נעשה בדרך כלל על ידי לקיחה דגימות של גובה בנקודות מסויימות, ואז קביעת גובה הנקודות שלא נמדדו על ידי אינטרפולציה כלשהי של נקודות הדגימה. הדרך המקובלת לעשות זאת היא בעזרת שילוש של קבוצת הנקודות, כלומר, חלוקה של המישור שכל הפאות החסומות שלה הן משולשים שקודקודיהם הם נקודות הדגימה. הגובה של נקודה \\(q\\) שלא נמדדה יתקבל באופן הבא: נמצא את המשולש \\(\\triangle abc\\) שהנקודה \\(q\\) נמצאת בתוכו. הנקודות \\(,b,c\\) עם מדידות הגובה שלהן הן נקודות תלת מימדיות, ולכן מגדירות מישור בתלת מימד. נטיל את \\(q\\) על המישור הזה, וקוארדינטת ה-\\(z\\) שהתקבלה תהיה הגובה של \\(q\\).לא כל השילושים יראו לנו “טובים” או “טבעיים” באותה המידה. התבוננו למשל בשני השילושים באיור למטה. אלו שני שילושים שונים של אותה קבוצת נקודות, יחד עם הגבהים המתאימים להן. בכל אחד מהם, הנקודה המסומנת \\(q\\) תהיה בגובה שונה. איזה מהשילושים סביר שיתאר את המציאות באופן מהימן יותר? מה (בערך) יהיה הגובה של הנקודה \\(q\\) בכל אחד מהשילושים באיור למעלה?בשילוש מימין, הגובה של \\(q\\) יהיה בין 100 ל-120. בשילוש משמאל, הגובה יהיה בין 550 ל-610.השילוש משמאל נראה יותר טבעי מהימני, מכיוון שבאופן אינטואיטיבי סביר יותר שהגובה של הנקודה \\(q\\) יהיה דומה לגובה של הנקודות שנמצאות בסביבה הקרובה שלה.ביחידה זו ננסה להבין כיצד להגדיר שילוש שמשקף את התפיסה האינטואיביטיבית שלנו לגבי מהו שילוש “טוב”, וכן כיצד ניתן לחשב שילוש כזה.","code":""},{"path":"Delaunay-triangulation.html","id":"קראו-את-ההקדמה-לפרק-9-בספר-הלימוד-עמודים-191193.","chapter":"יחידה 9 שילושי דלוני","heading":"קראו את ההקדמה לפרק 9 בספר הלימוד (עמודים 191־193).","text":"","code":""},{"path":"Delaunay-triangulation.html","id":"point-set-triangulation","chapter":"יחידה 9 שילושי דלוני","heading":"9.2 שילוש של קבוצת נקודות במישור","text":"","code":""},{"path":"Delaunay-triangulation.html","id":"מפה-מישורית-מקסימלית","chapter":"יחידה 9 שילושי דלוני","heading":"9.2.1 מפה מישורית מקסימלית","text":"ביחידה 3 של הקורס דיברנו על שילוש של פוליגונים - חלוקה של פוליגון למשלושים על ידי מספר מקסימלי של אלכסונים שאינם נחתכים. ביחידה זו, נעסוק בשילושים של קבוצות של נקודות במישור. על מנת להגדיר באופן פורמלי מהו שילוש של קבוצת נקודות, נסביר קודם מהי מפה מישורית מקסימלית (שימו לב שיחידה 2 של הקורס עוסקת במפות מישוריות שאינן בהכרח מקסימליות).הגדרה: מפה מישורית מקסימלית\nמפה מישורית מקסימלית היא מפה מישורית שלא ניתן להוסיף לה צלעות - כלומר כל צלע שנוסיף בין שני קודקודים תחתוך צלע אחרת.שלושת המפות התחתונות בלבד.","code":""},{"path":"Delaunay-triangulation.html","id":"תכונות-של-מפה-מישורית-מקסימלית.","chapter":"יחידה 9 שילושי דלוני","heading":"תכונות של מפה מישורית מקסימלית.","text":"כאשר פתרתם את התרגיל הקודם, בוודאי הבחנתם בשתי התכונות הבאות:הפאות (החסומות) הן משולשים: אם יש פאה חסומה שהיא לא משולש, אז ניתן לשלש אותה על ידי הוספת אלכסונים - כפי שראינו ביחידה 3 של הקורס (שילוש של פוליגונים).הפאות (החסומות) הן משולשים: אם יש פאה חסומה שהיא לא משולש, אז ניתן לשלש אותה על ידי הוספת אלכסונים - כפי שראינו ביחידה 3 של הקורס (שילוש של פוליגונים).כל צלעות הקמור של קבוצת הקודקודים שייכות למפה (והן הצלעות של הפאה הלא חסומה): לא תתכן צלע שיוצאת החוצה מהקמור, ולכן הצלעות של פוליגון הקמור לא יחתכו שום צלע אחרת, וניתן יהיה להוסיף אותן למפה.כל צלעות הקמור של קבוצת הקודקודים שייכות למפה (והן הצלעות של הפאה הלא חסומה): לא תתכן צלע שיוצאת החוצה מהקמור, ולכן הצלעות של פוליגון הקמור לא יחתכו שום צלע אחרת, וניתן יהיה להוסיף אותן למפה.","code":""},{"path":"Delaunay-triangulation.html","id":"triang-def","chapter":"יחידה 9 שילושי דלוני","heading":"9.2.2 שילוש של נקודות במישור","text":"התכונה הראשונה שראינו מובילה אותנו להגדרת שילוש של קבוצת נקודות \\(P\\) במישור באופן הבא.הגדרה: שילוש של קבוצת נקודות במישור\nבהינתן קבוצה \\(P\\) של \\(n\\) נקודות במישור, שילוש של \\(P\\) הוא מפה מישורית מקסימלית שהקודקודים שלה הם נקודות \\(P\\).שימו לב, יתכן שקיים יותר משילוש אחד לקבוצה נתונה של נקודות!זיכרו שצלעות הקמור חייבות להיות בשילוש. יש 3 שילושים אפשריים, בכל אחד מהם 4 משולשים. מיד נראה שזה לא מקרי - כל השילושים האפשריים של קבוצת נקודות נתונה הם בדיוק באותו הגודל!","code":""},{"path":"Delaunay-triangulation.html","id":"גודל-השילוש.","chapter":"יחידה 9 שילושי דלוני","heading":"גודל השילוש.","text":"באופן מעניין למדי, כל השילושים האפשריים של קבוצה \\(P\\) של \\(n\\) נקודות הם בדיוק באותו הגודל, כלומר יש להם מספר זהה של משולשים וצלעות. גודל השילוש תלוי במספר הנקודות שמופיעות על השפה של \\(CH(P)\\) (שפת הקמור של \\(P\\)).משפט: תהי \\(P\\) קבוצה של \\(n\\) נקודות במישור, שלא כולן על ישר אחד. נסמן ב-\\(k\\) את מספר הנקודות על השפה של \\(CH(P)\\). אז בכל שילוש של \\(P\\) יש \\(2n-2-k\\) משולשים ו-\\(3n-3-k\\) צלעות.ההוכחה למשפט מופיעה בסעיף 9.1 בספר הלימוד, והיא משתמשת בנוסחת אוילר, שכבר ראינו מספר פעמים בעבר.","code":""},{"path":"Delaunay-triangulation.html","id":"קראו-את-חלקו-הראשון-של-סעיף-9.1-בספר-הלימוד-עמודים-193194.","chapter":"יחידה 9 שילושי דלוני","heading":"קראו את חלקו הראשון של סעיף 9.1 בספר הלימוד (עמודים 193־194).","text":"קראו עד לסוף ההוכחה של משפט 9.1.","code":""},{"path":"Delaunay-triangulation.html","id":"opt_triang","chapter":"יחידה 9 שילושי דלוני","heading":"9.2.3 שילוש חוקי ושילוש אופטימלי בזויות","text":"בהקדמה ליחידה זו, ראינו ששילושים שלא מכילים משולשים “צרים” (כלומר כאלו שיש להם זויות חדות מאוד), הם בסבירות גבוהה משקפים טוב יותר את המצב במציאות. לכן, נעדיף שילושים בהם הזוויות הן כמה שיותר גדולות. בסרטון הבא נראה כיצד ניתן להגדיר שילוש אופטימלי כזה באופן מדויק.","code":""},{"path":"Delaunay-triangulation.html","id":"צפו-בסרטון-הבא.-14","chapter":"יחידה 9 שילושי דלוני","heading":"צפו בסרטון הבא.","text":"","code":""},{"path":"Delaunay-triangulation.html","id":"קראו-את-חלקו-השני-של-סעיף-9.1-בספר-הלימוד-עמודים-194195.","chapter":"יחידה 9 שילושי דלוני","heading":"קראו את חלקו השני של סעיף 9.1 בספר הלימוד (עמודים 194־195).","text":"שימו לב שבחלק האחרון של הסעיף מוצג אלגוריתם נאיבי לחישוב של שילוש אופטימלי בזויות, אך אלגוריתם זה אינו יעיל במיוחד. בהמשך נראה אלגוריתמים יעילים יותר לחישוב של שילוש כזה.","code":""},{"path":"Delaunay-triangulation.html","id":"reminder","chapter":"יחידה 9 שילושי דלוני","heading":"9.2.4 לחזרה: הגדרות ותרגילים","text":"למטה מופיעות ההגדרות, האבחנות, והטענות המרכזיות עליהן דנו בחלק זה, וזאת על מנת שיהיה לכם נוח לחזור אליהן בעתיד. בנוסף מופיעות כאן הערות ודוגמאות נוספות, וכן תרגילים לחזרה, כך שמומלץ לעבור על כל אלו לפני שממשיכים לסעיף הבא.","code":""},{"path":"Delaunay-triangulation.html","id":"וקטור-הזויות.","chapter":"יחידה 9 שילושי דלוני","heading":"וקטור הזויות.","text":"בהינתן שילוש \\(\\mathcal{T}\\) בעל \\(m\\) משולשים, נסמן את \\(3m\\) זויות המשולשים שלו \\(\\alpha_1,\\alpha_2,\\dots,\\alpha_{3m}\\) כך ש-\\(\\alpha_i\\le\\alpha_j\\) לכל \\(<j\\). הוקטור \\((\\mathcal{T}):=(\\alpha_1,\\alpha_2,\\dots,\\alpha_{3m})\\) נקרא וקטור הזויות של \\(\\mathcal{T}\\). מהו וקטור הזויות של השילוש \\(\\mathcal{T}\\) הבא?\\((\\mathcal{T})=(20^\\circ,30^\\circ,40^\\circ,45^\\circ,110^\\circ,115^\\circ)\\)","code":""},{"path":"Delaunay-triangulation.html","id":"שילוש-אופטימלי-בזויות.","chapter":"יחידה 9 שילושי דלוני","heading":"שילוש אופטימלי בזויות.","text":"עבור שני שילושים שונים \\(\\mathcal{T}\\) ו-\\(\\mathcal{T}'\\) של אותה קבוצת נקודות, נגדיר שוקטור הזויות \\((\\mathcal{T}):=(\\alpha_1,\\alpha_2,\\dots,\\alpha_{3m})\\) גדול מוקטור הזויות \\((\\mathcal{T}'):=(\\alpha'_1,\\alpha'_2,\\dots,\\alpha'_{3m})\\) אם הוא גדול ממנו בסדר לקסיקוגרפי. כלומר, \\((\\mathcal{T})>(\\mathcal{T}')\\) אם קיים \\(1\\le \\le 3m\\) כך ש:\\(\\alpha_j=\\alpha'_j\\) לכל \\(j<\\), וגם\\(\\alpha_i>\\alpha'_i\\).שילוש \\(\\mathcal{T}\\) הוא שילוש אופטימלי בזויות אם לכל שילוש אחר \\(\\mathcal{T}'\\) של אותה קבוצת נקודות מתקיים \\((\\mathcal{T})\\ge (\\mathcal{T}')\\).\\(A_1=(20^\\circ,30^\\circ,30^\\circ,50^\\circ, 120^\\circ, 130^\\circ)\\)או\\(A_2=(20^\\circ,30^\\circ,35^\\circ,40^\\circ, 90^\\circ, 110^\\circ)\\)(שימו לב שוקטורים אלו לא בהכרח מייצגים שילוש כלשהו.)\\(A_2\\)","code":""},{"path":"Delaunay-triangulation.html","id":"משפט-תאלס-מורחב.","chapter":"יחידה 9 שילושי דלוני","heading":"משפט תאלס (מורחב).","text":"יהי \\(C\\) מעגל, ו-\\(\\ell\\) ישר שחותך את המעגל בנקודות \\(,b\\). יהיו \\(p,q,s,r\\) נקודות שכולן מאותו צד של \\(\\ell\\), כך ש-\\(p,q\\) נמצאות על שפת המעגל, \\(r\\) בתוכו ו-\\(s\\) מחוץ למעגל. אז מתקיים: \\[\\measuredangle asb < \\measuredangle apb = \\measuredangle aqb < \\measuredangle arb.\\] קיימים מספר משפטים בגאומטריה של המישור שנקראים בשם “משפט תאלס”. אם למדתם גאומטריה בבית הספר התיכון בישראל, כנראה שאתם מכירים גרסה אחרת של המשפט. בוויקיפדיה גרסה זו נקראת המשפט השני.","code":""},{"path":"Delaunay-triangulation.html","id":"פעולת-היפוך-צלע.","chapter":"יחידה 9 שילושי דלוני","heading":"פעולת היפוך צלע.","text":"יהי \\(\\mathcal{T}\\) שילוש, ו-\\(e=\\overline{p_ip_j}\\) צלע בשילוש שמשותפת לשני משולשים \\(\\triangle p_ip_jp_k\\) ו- \\(\\triangle p_ip_jp_l\\). אם המרובע \\(p_ip_kp_jp_l\\) הוא קמור אז ניתן לקבל מ-\\(\\mathcal{T}\\) שילוש אחר, \\(\\mathcal{T}'\\) על ידי החלפת הצלע \\(e\\) בצלע \\(\\overline{p_kp_l}\\). פעולה זו נקראת היפוך של \\(e\\), או \\(flip(e)\\).","code":""},{"path":"Delaunay-triangulation.html","id":"צלעות-לא-חוקיות.","chapter":"יחידה 9 שילושי דלוני","heading":"צלעות לא-חוקיות.","text":"\nצלע \\(\\overline{p_ip_j}\\) בשילוש \\(\\mathcal{T}\\) שמשותפת לשני משולשים \\(\\triangle p_ip_jp_k\\) ו- \\(\\triangle p_ip_jp_l\\) היא לא חוקית אם ורק אם המעגל \\(C\\) שעובר דרך \\(p_i,p_j,p_k\\) מכיל את \\(p_l\\) בפנימו.תמיד ניתן לבצע היפוך של צלע לא חוקית: אם \\(\\overline{p_ip_j}\\) לא חוקית, אז המרובע \\(p_ip_kp_jp_l\\) חייב להיות קמור.טענה:\nאם המרובע \\(p_ip_kp_jp_l\\) הוא קמור, ואין מעגל שעובר דרך ארבעת הפינות שלו, אז בדיוק אחד משני האלכסונים של המרובע הוא חוקי. אם קיים מעגל שעובר דרך ארבעת הפינות שלו, אז שני האלכסונים חוקיים. איזה מהאלכסונים של המרובע \\(p_ip_kp_jp_l\\) הוא לא חוקי?האלכסון \\(p_lp_k\\) אינו חוקי מכיוון שהמעגל הסגול שעובר בנקודות \\(p_l,p_i,p_k\\) מכיל את \\(p_j\\).","code":""},{"path":"Delaunay-triangulation.html","id":"שילוש-חוקי.","chapter":"יחידה 9 שילושי דלוני","heading":"שילוש חוקי.","text":"שילוש חוקי הוא שילוש שאינו מכיל צלעות לא חוקיות.האם הצלע \\(p_2p_4\\) חוקית?האם הצלע \\(p_1p_4\\) חוקית?האם יתקבל שילוש חוקי לאחר שנבצע \\(flip(p_1p_4)\\)?כן.לא.לא, מכיון שאז הצלע \\(p_2p_4\\) תהפוך ללא-חוקית.כל שילוש אופטימלי בזויות הוא חוקי.כל שילוש חוקי הוא אופטימלי בזויות.נכון. תמיד ניתן “לשפר” שילוש לא חוקי על ידי פעולת היפוך צלע. שילוש אופטימלי לא ניתן לשיפור, ולכן הוא חוקי.במצב לא כללי, כלומר כאשר יש 4 נקודות על מעגל אחד, יתכן שילוש חוקי שאינו אופטימלי בזויות. שימו לב שבשילוש חוקי רק הזוית המינימלית היא חשובה, ולעומת זאת בשילוש אופטימלי בזויות מתחשבים בכל וקטור הזויות. בדוגמה הבאה מימין מופיע שילוש חוקי שאינו אופטימלי בזויות, ומשמאל שילוש אופטימלי. שימו לב שוקטור הזויות של שני השילושים כמעט זהה, פרט לכך שבשילוש מימין יש שתי זויות שנשכנות על האלכסון \\(p_kp_l\\), ובשילוש משמאל יש שתי זויות שנשענות על האלכסון \\(p_ipj\\) שהוא ארוך יותר, ולכן זויות אלו גדולות יותר.בהמשך נראה שאם הנקודות במצב כללי (כלומר אין 4 נקודות על מעגל אחד), אז כל שילוש חוקי הוא אופטימלי בזויות.","code":""},{"path":"Delaunay-triangulation.html","id":"שילוש-דלוני","chapter":"יחידה 9 שילושי דלוני","heading":"9.3 שילוש דלוני","text":"","code":""},{"path":"Delaunay-triangulation.html","id":"גרף-דלוני-ושילוש-דלוני","chapter":"יחידה 9 שילושי דלוני","heading":"9.3.1 גרף דלוני ושילוש דלוני","text":"לפני שנמשיך לדבר על שילושים, נציג את גרף דלוני, שהוא הגרף הדואלי לדיאגרמת וורונוי של קבוצת נקודות. מהן התכונות של הגרף? וכיצד הוא קשור לשילוש? על כך בסרטון הבא.","code":""},{"path":"Delaunay-triangulation.html","id":"צפו-בסרטון-הבא.-15","chapter":"יחידה 9 שילושי דלוני","heading":"צפו בסרטון הבא.","text":"\nבסרטון הגדרנו את גרף דלוני \\(\\mathcal{DG}(P)\\) של קבוצת נקודות \\(P\\) במישור, בעזרת דיאגרמת וורונוי של \\(P\\): זהו שיכון של הגרף הדואלי ל-\\(Vor(P)\\), שהקודקודים שלו הם נקודות \\(P\\), והצלעות הן הקטעים הישרים המחברים בין אתרים שלפאות שלהם בדיגארמה יש צלע משותפת. הוכחנו שגרף דלוני הוא מישורי, ודיברנו על התכונות המאפיינות אותו.לא, דוגמה:במקרה הגרוע, צלע אחת של גרף דלוני יכולה להחתך עם כל האתרים. דוגמה:","code":""},{"path":"Delaunay-triangulation.html","id":"תכונות-של-גרף-דלוני.","chapter":"יחידה 9 שילושי דלוני","heading":"תכונות של גרף דלוני.","text":"המשפט הבא מקביל לתכונות שראינו עבור דיאגרמת וורונוי:משפט (9.6):\nתהי \\(P\\) קבוצה של נקודות במישור.שלוש נקודות \\(p_i,p_j,p_k\\P\\) הן קודקודים של אותה פאה חסומה ב-\\(\\mathcal{DG}(P)\\) אם ורק אם המעגל דרך \\(p_i,p_j,p_k\\) לא מכיל נקודות של \\(P\\) בפנימו.זוג נקודות \\(p_i,p_j\\P\\) יוצרות צלע של \\(\\mathcal{DG}(P)\\) אם ורק אם קיים דיסק סגור \\(C\\) שמכיל את \\(p_i,p_j\\) על שפתו, ואינו מכיל עוד אף נקודה אחרת של \\(P\\).\nנתונה קבוצה \\(P=\\{p_1,p_2,p_3,p_4\\}\\) כך שכל ארבעת הנקודות נמצאות על מעגל אחד. כיצד יראה גרף דלוני של \\(P\\)?לפי התכונה הראשונה כל הנקודות של \\(P\\) שייכות לאותה פאה חסומה, ונקבל גרף (ירוק באיור) עם פאה חסומה אחת שהיא מרובע שקודקודיו הם \\(\\{p_1,p_2,p_3,p_4\\}\\).ניתן גם לראות זאת לפי דיאגרמת וורונוי: מרכז המעגל הוא קודקוד בדיאגרמת וורונוי, והוא משותף לכל הפאות, אך אין צלע משותפת לקודוקדים “נגדיים”, כלומר כאלו המתאימים לאלכסונים של המרובע.כן, לפי התכונה הראשונה, כל הקודקודים של פאה בגרף דלוני נמצאים על מעגל אחד, ומחוברים בצלעות לפי הסדר שלהם על המעגל. לכן כל הפאות בגרף דלוני הן קמורות.","code":""},{"path":"Delaunay-triangulation.html","id":"שילוש-דלוני.","chapter":"יחידה 9 שילושי דלוני","heading":"שילוש דלוני.","text":"ראינו שגרף דלוני של קבוצת נקודות \\(P\\) אינו בהכרח שילוש: אם קיימות 4 נקודות ב-\\(P\\) על מעגל אחד, נקבל פאה שאינה משולש. מצד שני, אם לא קיימות 4 נקודות ב-\\(P\\) על מעגל אחד, אז כל הקודקודים של דיאגרמת וורונוי יהיו מדרגה 3, ולכן גרף דלוני יהיה שילוש. לכן, ביחידה זו נאמר שקבוצת נקודות \\(P\\) היא במצב כללי אם אין בה 4 נקודות על מעגל אחד.בכל זאת, לא נניח שהנקודות הן במצב כללי, ונגדיר את שילוש דלוני של קבוצת נקודות \\(P\\) להיות כל שילוש המתקבל על ידי הוספת צלעות ל-\\(\\mathcal{DG}(P)\\).","code":""},{"path":"Delaunay-triangulation.html","id":"תכונת-המעגל-הריק.-1","chapter":"יחידה 9 שילושי דלוני","heading":"תכונת המעגל הריק.","text":"התכונות של גרף דלוני שראינו קודם מובילות לאפיון הבא של שילוש דלוני:משפט (9.7):\nשילוש \\(\\mathcal{T}\\) של קבוצת נקודות \\(P\\) במישור הוא שילוש דלוני אם ורק אם המעגל החוסם של כל משולש ב-\\(\\mathcal{T}\\) אינו מכיל נקודות של \\(P\\) בפנימו.","code":""},{"path":"Delaunay-triangulation.html","id":"וקטור-הזויות-של-שילוש-דלוני","chapter":"יחידה 9 שילושי דלוני","heading":"9.3.2 וקטור הזויות של שילוש דלוני","text":"בסעיף 9.2 של ספר הלימוד מוכיחים את המשפט הבא:משפט (9.8):\nשילוש \\(\\mathcal{T}\\) של קבוצת נקודות \\(P\\) במישור הוא חוקי, אם ורק אם \\(\\mathcal{T}\\) הוא שילוש דלוני של \\(P\\).כיוון אחד של ההוכחה נובע מיידית מההגדרה ומהתכונות של שילוש דלוני: כל שילוש דלוני הוא חוקי, מכיוון שהמעגל החוסם של כל משולש ב-\\(\\mathcal{T}\\) אינו מכיל נקודות של \\(P\\) בפנימו.\nהוכחת הכיוון השני היא מורכבת יותר, ומופיעה בספר הלימוד.","code":""},{"path":"Delaunay-triangulation.html","id":"מתי-שילוש-דלוני-הוא-אופטימלי-בזויות","chapter":"יחידה 9 שילושי דלוני","heading":"מתי שילוש דלוני הוא אופטימלי בזויות?","text":"כל שילוש אופטימלי הוא חוקי, ולכן הוא בהכרח שילוש דלוני! מתי שילוש דלוני הוא אופטימלי בזויות?אם הנקודות במצב כללי, אז שילוש דלוני הוא יחיד! לכן יש רק שילוש חוקי אחד, והוא השילוש האופטימלי היחיד.אם הנקודות במצב כללי, אז שילוש דלוני הוא יחיד! לכן יש רק שילוש חוקי אחד, והוא השילוש האופטימלי היחיד.אם הנקודות לא במצב כללי, אז שילוש דלוני לא בהכרח אופטימלי בזויות. עם זאת, אפשר להראות (בעזרת משפט תלס המורחב) שלכל שילוש דלוני יש בדיוק אותה זוית מינימלית (ההוכחה בסעיף 9.2 בספר הלימוד). לכן, לכל השילושים החוקיים יש אותה זוית מינימלית, ובפרט זוהי גם הזוית המינימלית בשילוש אופטימלי. לכן, הזוית המינימלית בשילוש דלוני היא המקסימלית האפשרית על פני כל השילושים של \\(P\\).אם הנקודות לא במצב כללי, אז שילוש דלוני לא בהכרח אופטימלי בזויות. עם זאת, אפשר להראות (בעזרת משפט תלס המורחב) שלכל שילוש דלוני יש בדיוק אותה זוית מינימלית (ההוכחה בסעיף 9.2 בספר הלימוד). לכן, לכל השילושים החוקיים יש אותה זוית מינימלית, ובפרט זוהי גם הזוית המינימלית בשילוש אופטימלי. לכן, הזוית המינימלית בשילוש דלוני היא המקסימלית האפשרית על פני כל השילושים של \\(P\\).הדיאגרמה הבאה מנסה לעשות סדר בהגדרות השונות לסוגי שילושים שראינו עד עכשיו. הקבוצה \\(T_1\\) מכילה את כל השילושים, \\(T_2\\) מכילה את כל השילושים בהם הזוית המינימלית היא מקסימלית, \\(T_3\\) מכילה את כל השילושים החוקיים (שהם למעשה כל שילושי דלוני), \\(T_4\\) מכילה שילושים אופטימליים בזויות.","code":""},{"path":"Delaunay-triangulation.html","id":"קראו-את-סעיף-9.2-בספר-הלימוד-עמודים-196199.","chapter":"יחידה 9 שילושי דלוני","heading":"קראו את סעיף 9.2 בספר הלימוד (עמודים 196־199).","text":"","code":""},{"path":"Delaunay-triangulation.html","id":"triangulation-algorithms","chapter":"יחידה 9 שילושי דלוני","heading":"9.4 חישוב השילוש","text":"","code":""},{"path":"Delaunay-triangulation.html","id":"naive-tring-alg","chapter":"יחידה 9 שילושי דלוני","heading":"9.4.1 אלגוריתם נאיבי","text":"מכיוון ששילוש דלוני הוא שימושי ביותר ביישומים רבים ומגוונים, קיימים מספר אלגוריתמים שונים לחישובו.\nהאלגוריתם הפשוט ביותר הוא זה שפגשתם בחלק האחרון של סעיף 9.1 בספר הלימוד. הוא מתחיל משילוש \\(\\mathcal{T}\\) כלשהו, ואז, כל עוד קיימת צלע לא חוקית, הוא מבצע פעולת היפוך. מכיוון שבכל פעולת היפוך וקטור הזויות של השילוש גדל (בסדר הלקסיקוגרפי), התהליך הזה הוא סופי, ובסופו יתקבל שילוש אופטימלי בזויות.מיד נפגוש שני אלגוריתמים נוספים, לשניהם זמן ריצה של \\(O(n\\log n)\\) (לראשון במקרה הגרוע, לשני בתוחלת), אך הם שונים זה מזה בפשטות המימוש או ביעילות שלהם בפועל במצבים מסויימים (ראו למשל את המאמר הזה, המשווה בין הביצועים של האלגוריתמים השונים על אוספים של נקודות שנדגמו מהתפלגויות שונות).","code":""},{"path":"Delaunay-triangulation.html","id":"triang-sweep-alg","chapter":"יחידה 9 שילושי דלוני","heading":"9.4.2 אלגוריתם סורק (שימוש בדיאגרמת וורונוי)","text":"\nמכיוון שגרף דלוני הוא הדואלי לדיאגרמת וורוני, ניתן לחשב את שילוש דלוני של קבוצת נקודות \\(P\\) במישור בעזרת דיאגמת וורונוי של \\(P\\):נחשב את \\(Vor(P)\\) בעזרת האלגוריתם הסורק שראינו ביחידה 7 (הדיאגרמה מופיעה בכחול באיור משמאל).נבנה את הגרף הדואלי לדיאגרמה, כלומר גרף דלוני (מופיע בירוק האיור).לבסוף, אם יש פאה בגרף שהיא לא משולש, נשלש אותה. נוכל לעשות זאת למשל בעזרת האלגוריתם לשילוש של פוליגון ביחידה 3 של הקורס. (באיור משמאל יש פאה אחת בגרף דלוני שהיא לא משולשת, ולכן נוסיף את הצלע האפורה).זמן הריצה הכולל יהיה \\(O(n\\log n)\\) (במקרה הגרוע).","code":""},{"path":"Delaunay-triangulation.html","id":"triang-inc-rand-alg","chapter":"יחידה 9 שילושי דלוני","heading":"9.4.3 אלגוריתם אינקרמנטלי רנדומי","text":"דרך אחרת לחישוב שילוש דלוני היא בעזרת האלגורתם האינקרמנטלי-רנדומי DelaunayTriangulation המתואר בסעיף 9.3 של ספר הלימוד. הרעיון המרכזי באלגוריתם הוא לבנות משולש כלשהו גדול מספיק שמכיל את כל הנקודות של הקבוצה \\(P\\) בפנימו, ואז להוסיף את נקודות \\(P\\) בזו אחר זו בסדר אקראי, ובכל פעם לעדכן את השילוש.נסמן את נקודות \\(P\\) לפי הסדר האקראי ב-\\(p_1,p_2,\\dots,p_n\\), ואת קודקודי המשולש ההתחלתי ב-\\(p_{-1},p_{-2},p_{-3}\\). נניח שחישבנו את שילוש דלוני של \\(p_{-1},p_{-2},p_{-3},p_1,p_2,\\dots,p_{r-1}\\), ואנחנו רוצים להוסיף עכשיו את \\(p_r\\). יש שני מקרים:אם הנקודה \\(p_r\\) נמצאת בפנים של משולש \\(\\triangle p_ip_jp_k\\): נוסיף צלעות מ-\\(p_r\\) לכל אחד מקודקודי המשולש.אם הנקודה \\(p_r\\) נמצאת על צלע \\(\\overline{p_ip_j}\\) שמשותפת לשני משולשים, \\(\\triangle p_ip_jp_k\\) ו-\\(\\triangle p_ip_jp_l\\): נוסיף צלעות מ-\\(p_r\\) לקודקודים \\(p_k\\) ו-\\(p_l\\).בשני המקרים קיבלנו שילוש, אך זהו לא בהכרח שילוש דלוני. כדי לתקן את השילוש במקרה הצורך, האלגוריתם קורא לפרוצדורה נוספת בשם LegalizeEdge, שמקבלת שילוש, את הקודקוד \\(p_r\\), וצלע במשולש שיתכן ויש צורך לבצע פעולת היפוך עבורה. במקרה הראשון למשל, האלגוריתם יקרא לפרוצדורה הזאת עבור כל אחת מצלעות המשולש \\(\\triangle p_ip_jp_k\\). אם הצלע אינה חוקית, הפרוצדורה תבצע היפוך שלה, ואז תמשיך לבדוק באופן רקורסיבי את צלעות המשולשים החדשים שנוצרו. התבוננו באיור הבא, המתאר את השלב באלגוריתם בו הנקודה \\(p_r\\) נוספה לשילוש, יחד עם צלעות לקודקודים \\(p_1\\), \\(p_4\\), ו-\\(p_5\\), ולפני הפעלת הפרוצדורה LegalizeEdge. כיצד יראה השילוש לאחר הפעלת LegalizeEdge לכל אחת מצלעות המשולש \\(\\triangle p_1p_4p_5\\)?פעולות ההיפוך שיתבצעו הן:היפוך של \\(p_1p_5\\).היפוך של \\(p_1p_5\\).היפוך של \\(p_1p_6\\).היפוך של \\(p_1p_6\\).היפוך של \\(p_1p_4\\).היפוך של \\(p_1p_4\\).היפוך של \\(p_2p_4\\).היפוך של \\(p_2p_4\\).בסוף התהליך, יהיו צלעות מ-\\(p_r\\) לכל אחד מהקודקודים האחרים.במהלק הקריאה בסעיף 9.3, נסו לענות על השאלות הבאות (כל התשובות מופיעות בספר):מדוע התהליך הרקורסיבי בשיטה LegalizeEdge הוא סופי?מדוע הצלעות שמוסיפים מ-\\(p_r\\) לקודקודי המשולש שהוא נמצא בו הן בהכרח צלעות של שילוש דלוני?כיצד האלגוריתם מוצא את המשולש שמכיל את \\(p_r\\)?","code":""},{"path":"Delaunay-triangulation.html","id":"קראו-את-סעיף-9.3-בספר-הלימוד-עמודים-199204.","chapter":"יחידה 9 שילושי דלוני","heading":"קראו את סעיף 9.3 בספר הלימוד (עמודים 199־204).","text":"קראו עד לסוף הפסקה הראשונה בעמוד 204.","code":""},{"path":"Delaunay-triangulation.html","id":"inc-rand-analisys","chapter":"יחידה 9 שילושי דלוני","heading":"9.4.4 ניתוח האלגוריתם האינקרמנטלי רנדומי","text":"ניתוח זמן הריצה של האלגוריתם משתמש בטכניקה שכבר ראינו ביחידות 4 ו-6: אנליזה לאחור. ביחידה זו לא נתעמק בפרטי ההוכחה ונסתפק בציטוט המשפט הבא:משפט: האלגוריתם האינקרמנטלי רנדומי מחשב שילוש דלוני של קבוצה \\(P\\) של \\(n\\) נקודות במישור בזמן \\(O(n \\log n)\\) בתוחלת, ועם תוחלת זיכרון \\(O(n)\\).למעוניינים בהעשרה והרחבה, ניתן לקרוא את סעיף 9.4 בספר הלימוד, המתאר בפירוט את ניתוח זמן הריצה וסיבוכיות המקום של אלגוריתם DelaunayTriangulation.","code":""},{"path":"Delaunay-triangulation.html","id":"תרגילים-נוספים","chapter":"יחידה 9 שילושי דלוני","heading":"9.5 תרגילים נוספים","text":"","code":""},{"path":"Delaunay-triangulation.html","id":"ה-mst","chapter":"יחידה 9 שילושי דלוני","heading":"9.5.1 ה-MST","text":"","code":""},{"path":"Delaunay-triangulation.html","id":"gabriel-graph","chapter":"יחידה 9 שילושי דלוני","heading":"9.5.2 Gabriel Graph","text":"","code":""},{"path":"Delaunay-triangulation.html","id":"rng","chapter":"יחידה 9 שילושי דלוני","heading":"9.5.3 RNG","text":"","code":""},{"path":"Delaunay-triangulation.html","id":"חסם-תחתון","chapter":"יחידה 9 שילושי דלוני","heading":"9.5.4 חסם תחתון","text":"","code":""},{"path":"motion-planning.html","id":"motion-planning","chapter":"יחידה 10 תכנון תנועה","heading":"יחידה 10 תכנון תנועה","text":"","code":""},{"path":"motion-planning.html","id":"motion-planning-preface","chapter":"יחידה 10 תכנון תנועה","heading":"10.1 הקדמה","text":"","code":""},{"path":"motion-planning.html","id":"contents-10","chapter":"יחידה 10 תכנון תנועה","heading":"10.1.1 מה ביחידה?","text":"יחידה זו מקבילה לפרקים 13 ו-15 בספר הלימוד.המושגים והרעיונות העיקריים שילמדו ביחידה:מודל גאומטרי לתכנון תנועת רובוט: מרחב העבודה, נקודות ייחוס, דרגות\nחופש, מרחבי קונפיגורציות.מציאת מסלול לרובוט נקודתי ולרובוט פוליגונלי.סכומי מינקובסקי.גרף הנִרְאוּת (visibility) ומסלולים קצרים ביותר.למידה מהנה!","code":""},{"path":"motion-planning.html","id":"תכנון-תנועת-רובוט","chapter":"יחידה 10 תכנון תנועה","heading":"10.1.2 תכנון תנועת רובוט","text":"תכנון תנועה לרובוט הוא תחום רחב ביותר, שהולך ומתפתח עם השיפור בטכנולוגיה הזמינה. פרק זה מספק הצצה לתחום מנקודת מבט גאומטרית.באופן כללי, בעיות תכנון תנועה עשויות להיות מורכבות ומסובכות מאוד, אך ביחידה זו נעסוק במקרה הבסיסי ביותר: הרובוט הוא פוליגון \\(\\mathcal{R}\\), שנע במישור עם מכשולים פוליגונליים קבועים וידועים מראש. הרובוט נע בתנועת הזזה (translation) בלבד ואינו יכול לבצע סיבוב (rotation).בסרטון הבא ניתן לראות דוגמה לרובוט כזה, המסוגל לנוע על ידי הזזה בכל כיוון אפשרי (omnidirectional). הרובוט בסרטון נע לאורך מסלול ידוע מראש, מנקודה התחלתית לנקודת יעד. אנחנו לא נעסוק במכניקה המאפשרת לרובוט לעשות זאת, אלא במציאת מסלול ללא התנגשויות בסביבה עם מכשולים, בהינתן נקודת התחלה ונקודת יעד.","code":""},{"path":"motion-planning.html","id":"קראו-את-ההקדמה-לפרק-13-בספר-הלימוד-עמודים-283284.","chapter":"יחידה 10 תכנון תנועה","heading":"קראו את ההקדמה לפרק 13 בספר הלימוד (עמודים 283־284).","text":"","code":""},{"path":"motion-planning.html","id":"המודל-הגאומטרי","chapter":"יחידה 10 תכנון תנועה","heading":"10.1.3 המודל הגאומטרי","text":"","code":""},{"path":"motion-planning.html","id":"קראו-את-סעיף-13.1-בספר-הלימוד-עמודים-284286.","chapter":"יחידה 10 תכנון תנועה","heading":"קראו את סעיף 13.1 בספר הלימוד (עמודים 284־286).","text":"","code":""},{"path":"motion-planning.html","id":"מושגים-בסיסיים-בתכנון-תנועה","chapter":"יחידה 10 תכנון תנועה","heading":"10.1.4 מושגים בסיסיים בתכנון תנועה","text":"בעמוד זה מופיעות הגדרות של המושגים הבסיסיים מסעיף 13.1 בספר הלימוד, יחד עם דוגמאות ותרגילים לחזרה.","code":""},{"path":"motion-planning.html","id":"מרחב-העבודה-work-space.","chapter":"יחידה 10 תכנון תנועה","heading":"מרחב העבודה (work space).","text":"\nמרחב העבודה הוא הסביבה שבה נע הרובוט \\(\\mathcal{R}\\), והיא מורכבת מאוסף של מכשולים. ביחידה זו נניח שהסביבה היא דו-מימדית, הרובוט הוא פוליגון \\(\\mathcal{R}\\), והמכשולים הם פוליגונים \\(S=\\{\\mathcal{P}_1,\\dots,\\mathcal{P}_t\\}\\).מרחב העבודה יכול להיות לא קשיר וגם לא חסום. בהמשך אנחנו נחסום אותו במלבן גדול מספיק, על מנת לפשט את החישובים.","code":""},{"path":"motion-planning.html","id":"הזזה-translation.","chapter":"יחידה 10 תכנון תנועה","heading":"הזזה (translation).","text":"הזזה של רובוט (פוליגון) \\(\\mathcal{R}\\) בוקטור \\((x,y)\\) מסומנת \\(\\mathcal{R}(x,y)\\) והיא הפוליגון המתקבל על ידי הוספה של הוקטור \\((x,y)\\)\nלכל נקודה ב-\\(\\mathcal{R}\\), כלומר,\n\\(\\mathcal{R}(x,y)=\\{p+(x,y)\\mid p\\\\mathcal{R}\\}\\).\nמה יהיו קודקודיו של הפוליגון באיור אם נזיז אותו בוקטור \\((12,-2)\\)?","code":""},{"path":"motion-planning.html","id":"נקודת-ייחוס-reference-point.","chapter":"יחידה 10 תכנון תנועה","heading":"נקודת ייחוס (reference point).","text":"","code":""},{"path":"motion-planning.html","id":"דרגות-חופש-degrees-of-freedom.","chapter":"יחידה 10 תכנון תנועה","heading":"דרגות חופש (degrees of freedom).","text":"מספר דרגות החופש של רובוט הוא מספר הפרמטרים הנדרשים לתיאור המיקום שלו.עם הזזה בלבד?עם סיבוב בלבד?עם הזזה וסיבוב?כיצד תשתנה התשובה בכל אחד מהסעיפים למעלה עבור רובוט תלת-מימדי?עבור רובוט דו-מימדי:הזזה בלבד: ניתן להזיז בציר ה-\\(x\\) ובציר ה-\\(y\\), לכן 2 דרגות חופש.סיבוב בלבד: דרגת חופש אחת (זוית הסיבוב של המישור סביב נקודת הייחוס).הזזה וסיבוב: סך הכל 3 דרגות חופש.עבור רובוט תלת-מימדי:הזזה בלבד: ניתן להזיז בשלושת הצירים, לכן 3 דרגות חופש.סיבוב בלבד: ניתן לסובב סביב כל אחד משלושת הצירים, לכן 3 דרגות חופש.הזזה וסיבוב: סך הכל 6 דרגות חופש.הסרטון הבא ממחיש את פעולת הסיבוב בשלושה מימדים.","code":""},{"path":"motion-planning.html","id":"מרחב-הקונפיגורציות-configuration-space.","chapter":"יחידה 10 תכנון תנועה","heading":"מרחב הקונפיגורציות (configuration space).","text":"מרחב הקונפיגורציות (configuration space) עבור רובוט \\(\\mathcal{R}\\) הוא מרחב הפרמטרים המתארים את מיקום הרובוט, והוא מסומן \\(\\mathcal{C}(\\mathcal{R})\\). מימד המרחב הוא מספר דרגות החופש.לדוגמה: עבור רובוט פוליגוני הנע במישור בתנועת הזזה בלבד, קונפיגורציה של הרובוט (כלומר, מיקום הרובוט) מורכבת משני פרמטרים. לכן במקרה זה מרחב הקונפיגורציות הוא המישור. אם נוסיף לרובוט תנועת סיבוב, מרחב הקונפיגורציות יהיה\n\\(\\mathbb{R}^2\\times [0:360)\\).\nזהו מרחב תלת-מימדי, ונקודה \\((x,y,\\phi)\\) במרחב הזה משמעותה שנקודת הייחוס של הרובוט נמצאת בנקודה \\((x,y)\\), והוא מסובב בזוית \\(\\phi\\).","code":""},{"path":"motion-planning.html","id":"המרחב-החופשי-המרחב-האסור-free-space-forbidden-space.","chapter":"יחידה 10 תכנון תנועה","heading":"המרחב החופשי, המרחב האסור (free space, forbidden space).","text":"קונפיגורציה \\(p\\) עבורה \\(\\mathcal{R}(p)\\) נחתך\nעם מכשול מהקבוצה \\(\\mathcal{S}\\) נקראת קונפיגורציה אסורה. אם \\(\\mathcal{R}(p)\\) אינו נחתך עם מכשול, אז \\(p\\) נקראת קונפיגורציה\nחופשית.מרחב הקונפיגורציות האסורות, או בקיצור המרחב האסור\n(forbidden space) מסומן \\(\\mathcal{C}_{forb}(\\mathcal{R},\\mathcal{S})\\).\nמרחב הקונפיגורציות החופשיות, או בקיצור המרחב החופשי (free space)\nמסומן \\(\\mathcal{C}_{free}(\\mathcal{R},\\mathcal{S})\\).המיפוי של מכשול \\(\\mathcal{P}\\) במרחב העבודה אל מרחב הקונפיגורציות נקרא מכשול במרחב הקונפיגוריציות (configuration-space obstacle), ומסומן \\(\\mathcal{CP}\\) . אלו הן כל הקונפיגורציות \\((x,y)\\) עבורן \\(\\mathcal{R(x,y)}\\) נחתך עם \\(\\mathcal{P}\\).\nהרובוט באיור הוא בצורה של מעגל, ומרכז המעגל הוא נקודה הייחוס. אילו מהקונפיגוציות \\(p_1,p_2,p_3,p_4,p_5\\) חופשיות ואילו אסורות?האם הרובוט יוכל להגיע מהנקודה \\(p_1\\) לנקודה \\(p_2\\)? ולנקודה \\(p_5\\)?הקונפיגורציות \\(p_1,p_2,p_2\\) הן חופשיות והשאר אסורות.הרובוט יוכל להגיע מהנקודה \\(p_1\\) לנקודה \\(p_2\\), אך לא יוכל להגיע לנקודה \\(p_5\\) מכיוון שהוא חסום על ידי המכשולים שסביבו. המשמעות של קונפיגורציה חופשית היא נקודה שבה הרובוט אינו מתנגש במכשולים, והרובוט לא בהכרח יכול להגיע לכל קונפיגורציה שהיא חופשית.\nנתון רובוט בצורה של דיסק, ומרכז הדיסק הוא נקודה הייחוס. המשולש הכתום \\(\\mathcal{P}\\) הוא מכשול במרחב העבודה. אילו מהאיורים הבאים מתאר את \\(\\mathcal{CP}\\)?התשובה היא (4). זיכרו ש-\\(\\mathcal{CP}\\) הוא כל הקונפיגורציות \\((x,y)\\) עבורן \\(\\mathcal{R(x,y)}\\) נחתך עם \\(\\mathcal{P}\\).","code":""},{"path":"motion-planning.html","id":"מציאת-מסלול-ללא-התנגשויות","chapter":"יחידה 10 תכנון תנועה","heading":"10.2 מציאת מסלול ללא התנגשויות","text":"","code":""},{"path":"motion-planning.html","id":"רובוט-נקודתי","chapter":"יחידה 10 תכנון תנועה","heading":"10.2.1 רובוט נקודתי","text":"\nבחלק זה נתמקד בבעיה הבאה: בהינתן רובוט, מרחב עבודה,\nנקודת התחלה \\(p_{\\text{start}}\\) ונקודת יעד \\(p_{\\text{goal}}\\), יש למצוא מסלול עבור הרובוט מנקודת ההתחלה לנקודת היעד, ללא התנגשויות במכשולים. במילים אחרות, יש למצוא מסלול במרחב החופשי, מהנקודה \\(p_{\\text{start}}\\) לנקודה \\(p_{\\text{goal}}\\).כדי לפשט את הבעיה, נתחיל מהמקרה של רובוט נקודתי. במקרה זה מרחב העבודה שווה בדיוק למרחב החופשי.","code":""},{"path":"motion-planning.html","id":"חישוב-המרחב-החופשי.","chapter":"יחידה 10 תכנון תנועה","heading":"חישוב המרחב החופשי.","text":"\nבסעיף 13.2 של ספר הלימוד מתואר האלגוריתם ComputeFreeSpace שמחשב ייצוג של המרחב החופשי לרובוט נקודתי, בהינתן אוסף \\(\\mathcal{S}\\) של מכשולים. הייצוג של המרחב החופשי הוא באמצעות מפה טרפזית (עליה למדנו ביחידה 6).","code":""},{"path":"motion-planning.html","id":"בניית-מפת-דרכים.","chapter":"יחידה 10 תכנון תנועה","heading":"בניית מפת דרכים.","text":"\nבהינתן מפת הטרפזים של המרחב החופשי, בונים על גביה מעין מפת דרכים שתשמש למציאת מסלול ללא התנגשויות לרובוט. מפת הדרכים היא בעצם גרף שבו יש קודקוד לכל טרפז במפה, וקודקוד לכל קטע אנכי בין שני טרפזים. כל קודקוד של טרפז יהיה מחובר בצלע לכל הקודקודים על הצלעות האנכיות שלו. האלגוריתם ComputePath מחשב מסלול מהנקודה \\(p_{\\text{start}}\\) לנקודה \\(p_{\\text{goal}}\\) במרחב החופשי, על ידי הרצת אלגוריתם BFS על גבי מפת הדרכים.בסעיף זה מוכיחים את המשפט הבא:משפט (13.2): בהינתן רובוט נקודתי \\(\\mathcal{R}\\) ואוסף \\(S\\) של מכשולים פוליגונליים עם \\(n\\) צלעות בסך הכל, ניתן לבנות מבנה נתונים בגודל \\(O(n)\\), ועם זמן עיבוד מקדים \\(O(n\\log n)\\) בתוחלת, כך שבהינתן נקודת התחלה ונקודת יעד, מוצא בזמן \\(O(n)\\) מסלול ללא התנגשויות לרובוט, אם קיים כזה.מבנה הנתונים המתואר בסעיף זה ישמש אותנו גם בהמשך, כאשר נדבר על מציאת מסלול לרובוט פוליגונלי.","code":""},{"path":"motion-planning.html","id":"קראו-את-סעיף-13.2-בספר-הלימוד-עמודים-286290.","chapter":"יחידה 10 תכנון תנועה","heading":"קראו את סעיף 13.2 בספר הלימוד (עמודים 286־290).","text":"","code":""},{"path":"motion-planning.html","id":"סכומי-מינקובסקי","chapter":"יחידה 10 תכנון תנועה","heading":"10.2.2 סכומי מינקובסקי","text":"","code":""},{"path":"motion-planning.html","id":"צפו-בסרטון-הבא.-16","chapter":"יחידה 10 תכנון תנועה","heading":"צפו בסרטון הבא.","text":"הגדרה: סכום מינקובסקי\nעבור שתי קבוצות של נקודות במישור \\(S_1,S_2\\subset\\mathbb{R}^2\\), סכום מינקובסקי הוא\n\\[S_1\\oplus S_2=\\{p+q\\mid p\\S_1, q\\S_2\\}\\]\nכאשר \\(p+q=(p_x+q_x,p_y+q_y)\\).שימו לב שהפוליגון שהתקבל זהה לפוליגון מהשאלה הקודמת, אבל עם הזזה. בנוסף, שימו לב שבמקרה שבו אחד הפוליגונים מכיל את ראשית הצירים (כאן זה המשולש האדום), ניתן לחשוב על סכום מינקובסקי בתור הפוליגון שיתקבל אם נשים את נקודת הייחוס של המשולש (שהיא הראשית) על השפה של הריבוע, ו”נחליק” את המשולש לאורך השפה.אבחנה: יהיו \\(\\mathcal{P},\\mathcal{R}\\) שני פוליגונים. נקודת קיצון של \\(\\mathcal{P}\\oplus\\mathcal{R}\\) בכיוון \\(\\overrightarrow{d}\\) היא סכום של נקודות קיצון של \\(\\mathcal{P}\\) ו-\\(\\mathcal{R}\\) בכיוון \\(\\overrightarrow{d}\\).משפט (13.5): סכום מינקובסקי של שני פוליגונים קמורים בעלי \\(n\\) ו-\\(m\\) צלעות הוא פוליגון קמור בעל לכל היותר \\(m+n\\) צלעות.","code":""},{"path":"motion-planning.html","id":"מכשולים-במרחב-הקונפיגורציות.","chapter":"יחידה 10 תכנון תנועה","heading":"מכשולים במרחב הקונפיגורציות.","text":"משפט (13.3): בהינתן רובוט פוליגונלי \\(\\mathcal{R}\\) ומכשול \\(\\mathcal{P}\\), המיפוי של \\(\\mathcal{P}\\) למרחב הקונפיגורציות\n(ה-obstacle-\\(\\mathcal{C}\\)) הוא בדיוק הסכום \\(\\mathcal{P}\\oplus -\\mathcal{R}(0,0)\\).","code":""},{"path":"motion-planning.html","id":"קראו-את-חלקו-הראשון-של-סעיף-13.3-בספר-הלימוד-עמודים-290292.","chapter":"יחידה 10 תכנון תנועה","heading":"קראו את חלקו הראשון של סעיף 13.3 בספר הלימוד (עמודים 290־292).","text":"קראו עד לסוף ההוכחה של משפט 13.5.","code":""},{"path":"motion-planning.html","id":"פסאודו-דיסקים","chapter":"יחידה 10 תכנון תנועה","heading":"10.2.3 פסאודו-דיסקים","text":"כדי להראות שניתן לחשב ביעילות את האיחוד של המכשולים במרחב הקונפיגורציות (שהוא בעצם האיזור האסור), נצטרך להראות שאוסף הפוליגונים הזה “מתנהג יפה” באיזשהו אופן. לשם כך נשתמש בהגדרה הבאה.אוסף של אובייקטים במישור, שכל אחד מהם חסום על ידי עקום פשוט וסגור, נקרא אוסף של פסאודו-דיסקים, אם כל זוג אובייקטים מהאוסף הם פסאודו-דיסקים.אוסף כל הפוליגונים הקמורים במישור.אוסף כל המרובעים במישור.אוסף כל המלבנים במישור.אוסף כל הריבועים במישור, שכולם מאותו הגודל.אוסף כל המלבנים במישור שצלעותיהם מקבילות לצירים.אוסף כל הריבועים במישור שצלעותיהם מקבילות לצירים.רק 5 הוא אוסף של פסאודו-דיסקים.\nבהינתן שני ריבועים \\(s_1,s_2\\) שצלעותיהם מקבילות לצירים, נניח ש-\\(s_1\\) גדול מ-\\(s_2\\), ונניח שהקודקוד השמאלי התחתון של \\(s_1\\) נמצא בראשית הצירים, וש-\\(s_2\\) נמצא כולו ברביע הראשון. יש שלושה מקרים, כמו באיור מטה, המתייחסים למיקום של הקודקוד השמאלי התחתון של \\(s_2\\) ביחס לאורכי הצלעות. בכל אחד מהמקרים, נקבל שהחיתוך בין הריבועים הוא קשיר.","code":""},{"path":"motion-planning.html","id":"מכשולים-הם-אוסף-של-פסאודו-דיסקים.","chapter":"יחידה 10 תכנון תנועה","heading":"מכשולים הם אוסף של פסאודו-דיסקים.","text":"בסעיף 13.3 של ספר הלימוד מוכיחים את המשפטים הבאים.משפט (13.8): יהיו \\(\\mathcal{P}_1,\\mathcal{P}_2\\) שני פוליגונים קמורים וזרים זה לזה בפנים שלהם, ויהי \\(\\mathcal{R}\\) פוליגון קמור. אז \\(\\mathcal{P}_1\\oplus \\mathcal{R}\\) ו-\\(\\mathcal{P}_2\\oplus \\mathcal{R}\\) הם פסאודו-דיסקים.משפט (13.9): יהי \\(S\\) אוסף של פסאודו-דיסקים, שכולם פוליגונים קמורים, ויש להם \\(n\\) צלעות בסך הכל. אז סיבוכיות האיחוד שלהם היא לכל היותר \\(2n\\).המשמעות של המשפט הראשון היא שמכשולים (קמורים) במרחב הקונפיגורציות הם פסאודו-דיסקים. זוהי תכונה שימושית מאוד, מכיוון שהמשפט השני מראה שסיבוכיות האיחוד של אוסף של פסאודו-דיסקים שכולם פוליגונים קמורים היא לינארית. עובדה זו מאפשרת לנו לחסום את הסיבוכיות של איחוד המכשולים במרחב הקונפיגורציות (שהוא התחום האסור).","code":""},{"path":"motion-planning.html","id":"המשיכו-לקרוא-בסעיף-13.3-של-ספר-הלימוד-עמודים-292293.","chapter":"יחידה 10 תכנון תנועה","heading":"המשיכו לקרוא בסעיף 13.3 של ספר הלימוד (עמודים 292־293).","text":"קראו את החלק המדבר על פסאודו-דיסקים, עד אבחנה 13.6. שימו לב, בקורס זה לא נתעמק בהוכחות של משפטים 13.7, 13.8, ו-13.9 (המראים שסכומי מינקובסקי הם פסאודו דיסקים), ונסתפק בהבנת ההגדרה ובהכרת המשפטים. לכן, דלגו על הטקסט המופיע אחרי אבחנה 13.6 ועד סוף ההוכחה של משפט 13.9.","code":""},{"path":"motion-planning.html","id":"חישוב-סכום-מינקובסקי","chapter":"יחידה 10 תכנון תנועה","heading":"10.2.4 חישוב סכום מינקובסקי","text":"אלגוריתם נאיבי לחישוב סכום מינקובסקי של שני פוליגונים קמורים \\(\\mathcal{P}\\) ו-\\(\\mathcal{R}\\) הוא פשוט חישוב הקמור של קבוצת הנקודות הבאה:\n\\[B=\\{v+w\\mid v \\text{ vertex } \\mathcal{P}, w \\text{ vertex } \\mathcal{R} \\}.\\]\nזהו לא אלגוריתם יעיל, מכיוון שהוא מחשב את הסכום של כל זוג קודקודים. בסעיף 13.3 של ספר הלימוד מתואר אלגוריתם יעיל הרבה יותר, המשתמש באבחנה 13.4 על מנת לחשב את הקמור של הקבוצה \\(B\\) מבלי לחשב את כל איברי הקבוצה.משפט (13.10): ניתן לחשב את סכום מינקובסקי של שני פוליגונים קמורים בעלי \\(m\\) ו-\\(n\\) קודקודים בזמן \\(O(m+n)\\).","code":""},{"path":"motion-planning.html","id":"פוליגונים-שאינם-קמורים.","chapter":"יחידה 10 תכנון תנועה","heading":"פוליגונים שאינם קמורים.","text":"על מנת לחשב את סכום מינקובסקי עבור פוליגונים \\(\\mathcal{P}\\) ו-\\(\\mathcal{R}\\) שאינם קמורים, ניתן לשלש כל אחד מהם ולחשב את האיחוד של סכומי מינקובסקי של כל זוגות המשולשים. בסוף של סעיף 13.3 מתארים כיצד ניתן לבצע את החישוב, ומה תהיה הסיבוכיות (במקרה הגרוע ביותר) של סכום מינקובסקי כאשר שני הפוליגונים אינם קמורים.","code":""},{"path":"motion-planning.html","id":"קראו-את-החלק-האחרון-של-סעיף-13.3-בספר-הלימוד-עמודים-295297.","chapter":"יחידה 10 תכנון תנועה","heading":"קראו את החלק האחרון של סעיף 13.3 בספר הלימוד (עמודים 295־297).","text":"\nנתונים שני פוליגונים \\(\\mathcal{P}\\) ו-\\(\\mathcal{R}\\) בעלי \\(m\\) ו-\\(n\\) קודקודים בהתאמה. מהי הסיבוכיות (במקרה הגרוע) של הסכום \\(\\mathcal{P}\\oplus\\mathcal{R}\\) כאשר:\\(\\mathcal{P}\\) ו-\\(\\mathcal{R}\\) שניהם קמורים.\\(\\mathcal{P}\\) קמור ו-\\(\\mathcal{R}\\) לא קמור.\\(\\mathcal{P}\\) ו-\\(\\mathcal{R}\\) שניהם לא קמורים.\\(O(m+n)\\)\\(O(mn)\\)\\(O(m^2n^2)\\)","code":""},{"path":"motion-planning.html","id":"רובוט-פוליגונלי","chapter":"יחידה 10 תכנון תנועה","heading":"10.2.5 רובוט פוליגונלי","text":"סעיף 13.4 בספר הלימוד חוזר לבעיית תכנון התנועה עבור רובוט פוליגונלי. כדי שנוכל להשתמש באלגוריתם שראינו לרובוט נקודתי, נצטרך קודם לחשב את המכשולים במרחב הקונפיגורציות של הרובוט הפוליגונלי. כפי שראינו בסעיף הקודם, כל מכשול כזה הוא סכום מינקובסקי. האיחוד של כל המכשולים במרחב הקונפיגורציות הוא המרחב האסור, וראינו שהסיבוכיות שלו לינארית. האלגוריתם ForbiddenSpace המתואר בסעיף 13.4 מחשב אותו בזמן \\(O(n\\log^2 n)\\). ביחד עם האלגוריתם לרבוט נקודתי שראינו בסעיף 13.3, נקבל את המשפט הבא:משפט (13.14): בהינתן רובוט פוליגונלי קמור \\(\\mathcal{R}\\) בגודל קבוע, ואוסף \\(S\\) של מכשולים פוליגונליים עם \\(n\\) צלעות בסך הכל, ניתן לבנות מבנה נתונים בגודל \\(O(n)\\), ועם זמן עיבוד מקדים \\(O(n\\log^2 n)\\) בתוחלת, כך שבהינתן נקודת התחלה ונקודת יעד, מוצא בזמן \\(O(n)\\) מסלול ללא התנגשויות לרובוט, אם קיים כזה.","code":""},{"path":"motion-planning.html","id":"קראו-את-סעיף-13.4-בספר-הלימוד-עמודים-297299.","chapter":"יחידה 10 תכנון תנועה","heading":"קראו את סעיף 13.4 בספר הלימוד (עמודים 297־299).","text":"","code":""},{"path":"motion-planning.html","id":"מסלולים-קצרים-ביותר","chapter":"יחידה 10 תכנון תנועה","heading":"10.3 מסלולים קצרים ביותר","text":"","code":""},{"path":"motion-planning.html","id":"מסלול-קצר-ביותר-וגרף-הנראות","chapter":"יחידה 10 תכנון תנועה","heading":"10.3.1 מסלול קצר ביותר וגרף הנִרְאוּת","text":"עד עכשיו ראינו כיצד ניתן למצוא מסלול כלשהו ללא התנגשויות לרובוט, מנקודת ההתחלה לנקודת היעד, ולא דנו כלל בטיב המסלול שנבחר. אם רוצים לחסוך באנרגיה ובזמן, כדאי לבחור למשל במסלול הקצר ביותר האפשרי. בחלק זה נדבר על חישוב מסלול קצר ביותר לרובוט, וזאת על ידי בניית מפת דרכים אחרת, שנקראת גרף הנִרְאוּת.","code":""},{"path":"motion-planning.html","id":"צפו-בסרטון-הבא.-17","chapter":"יחידה 10 תכנון תנועה","heading":"צפו בסרטון הבא.","text":"למה (15.1): כל מסלול קצר ביותר בין נקודה \\(p_\\text{start}\\) לנקודה \\(p_\\text{goal}\\) ללא התנגשויות במכשולים פוליגונלים מ-\\(S\\), הוא מסלול פוליגונלי שהקודקודים הפנימיים שלו הם קודקודים של פוליגונים מ-\\(S\\).\nהאם מסלול קצר ביותר ללא התנגשויות בין נקודה \\(p_\\text{start}\\) לנקודה \\(p_\\text{goal}\\) חייב להכיל קודקודים של מכשולים מ-\\(S\\) שנחתכים עם הקטע \\(\\overline{p_\\text{start}p_\\text{goal}}\\)?","code":""},{"path":"motion-planning.html","id":"גרף-הנראות-visibility-graph.","chapter":"יחידה 10 תכנון תנועה","heading":"גרף הנִרְאוּת (visibility graph).","text":"בהינתן אוסף \\(S\\) של מכשולים פוליגונליים, גרף הנראות מסומן \\(\\mathcal{G}_{\\text{vis}}(S)\\). הקודקודים של \\(\\mathcal{G}_{\\text{vis}}(S)\\) הם הקודקודים של פוליגונים מהקבוצה \\(S\\), ויש צלע בין שני קודקודים \\(v,w\\) אם הם רואים זה את זה, כלומר הקטע \\(\\overline{vw}\\) אינו נחתך עם הפְּנים של אף פוליגון מהקבוצה \\(S\\).בסרטון ראינו שמסלול קצר ביותר לרובוט בין נקודה \\(p_\\text{start}\\) לנקודה \\(p_\\text{goal}\\) הוא מסלול בגרף\n\\(\\mathcal{G}_{\\text{vis}}(S\\cup\\{p_\\text{start},p_\\text{goal}\\})\\), וניתן למצוא אותו בעזרת האלגוריתם של דייקסטרה בזמן \\(O(n^2\\log n)\\).","code":""},{"path":"motion-planning.html","id":"קראו-את-סעיף-15.1-בספר-הלימוד-עמודים-324326.","chapter":"יחידה 10 תכנון תנועה","heading":"קראו את סעיף 15.1 בספר הלימוד (עמודים 324־326).","text":"","code":""},{"path":"motion-planning.html","id":"חישוב-גרף-הנראות","chapter":"יחידה 10 תכנון תנועה","heading":"10.3.2 חישוב גרף הנִרְאוּת","text":"עבור אוסף \\(S\\) של מכשולים פוליגונליים עם \\(n\\) צלעות בסך הכל, ניתן לחשב את גרף הנראות בעזרת האלגוריתם הנאיבי הבא: לכל זוג קודקודים \\(v,w\\), נבדוק בזמן \\(O(n)\\) האם הקטע \\(\\overline{vw}\\) חותך צלע של פוליגון מהקבוצה \\(S\\). אם לא, נוסיף את הצלע \\(\\{v,w\\}\\) לגרף. מכיוון שיש \\(O(n^2)\\) זוגות קודקודים, זמן הריצה יהיה \\(O(n^3)\\). אלגוריתם זה אינו יעיל במיוחד, ובסעיף 15.2 של ספר הלימוד מתואר אלגוריתם סורק המחשב את גרף הנראות בזמן \\(O(n^2\\log n)\\). שימו לב שהסריקה כאן אינה מתבצעת על ידי ישר אופקי או אנכי, אלא בצורה של סיבוב, כמו מחוג של שעון.","code":""},{"path":"motion-planning.html","id":"קראו-את-סעיף-15.2-בספר-הלימוד-עמודים-326330.","chapter":"יחידה 10 תכנון תנועה","heading":"קראו את סעיף 15.2 בספר הלימוד (עמודים 326־330).","text":"","code":""},{"path":"motion-planning.html","id":"מסלול-קצר-ביותר-לרובוט-פוליגונלי","chapter":"יחידה 10 תכנון תנועה","heading":"10.3.3 מסלול קצר ביותר לרובוט פוליגונלי","text":"בסעיף 15.3 בספר הלימוד מתואר האלגוריתם לחישוב מסלול קצר ביותר לרובוט פוליגונלי, המבוסס על סכומי מינקובסקי (בדומה לאלגוריתם המתואר בסעיף 13.4). המסקנה המתקבלת היא במשפט הבא:משפט (15.5): בהינתן רובוט פוליגונלי קמור \\(\\mathcal{R}\\) בגודל קבוע, ואוסף \\(S\\) של מכשולים פוליגונליים עם \\(n\\) צלעות בסך הכל, ניתן למצוא מסלול קצר ביותר ללא התנגשויות מנקודת התחלה נתונה לנקודת יעד נתונה בזמן \\(O(n^2\\log n)\\), אם קיים כזה.","code":""},{"path":"motion-planning.html","id":"קראו-את-סעיף-15.3-בספר-הלימוד-עמודים-330331.","chapter":"יחידה 10 תכנון תנועה","heading":"קראו את סעיף 15.3 בספר הלימוד (עמודים 330־331).","text":"","code":""},{"path":"motion-planning.html","id":"todo-להוסיף-תרגילים","chapter":"יחידה 10 תכנון תנועה","heading":"10.3.3.1 TODO להוסיף תרגילים","text":"","code":""},{"path":"WSPD-spanners.html","id":"WSPD-spanners","chapter":"יחידה 11 פורשים גאומטריים וקבוצות מופרדות היטב","heading":"יחידה 11 פורשים גאומטריים וקבוצות מופרדות היטב","text":"","code":""},{"path":"curve-similarity.html","id":"curve-similarity","chapter":"יחידה 12 דמיון בין עקומים","heading":"יחידה 12 דמיון בין עקומים","text":"","code":""}]
